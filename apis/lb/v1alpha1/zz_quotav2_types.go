/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type QuotaV2Observation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type QuotaV2Parameters struct {

	// Quota value for health_monitors. Changing
	// this updates the existing quota. Omitting it sets it to 0.
	// +kubebuilder:validation:Optional
	HealthMonitor *float64 `json:"healthMonitor,omitempty" tf:"health_monitor,omitempty"`

	// Quota value for l7_policies. Changing this
	// updates the existing quota. Omitting it sets it to 0. Available in
	// Octavia minor version 2.19.
	// +kubebuilder:validation:Optional
	L7Policy *float64 `json:"l7Policy,omitempty" tf:"l7_policy,omitempty"`

	// Quota value for l7_rules. Changing this
	// updates the existing quota. Omitting it sets it to 0. Available in
	// Octavia minor version 2.19.
	// +kubebuilder:validation:Optional
	L7Rule *float64 `json:"l7Rule,omitempty" tf:"l7_rule,omitempty"`

	// Quota value for listeners. Changing this updates
	// the existing quota. Omitting it sets it to 0.
	// +kubebuilder:validation:Optional
	Listener *float64 `json:"listener,omitempty" tf:"listener,omitempty"`

	// Quota value for loadbalancers. Changing this
	// updates the existing quota. Omitting it sets it to 0.
	// +kubebuilder:validation:Optional
	Loadbalancer *float64 `json:"loadbalancer,omitempty" tf:"loadbalancer,omitempty"`

	// Quota value for members. Changing this updates
	// the existing quota. Omitting it sets it to 0.
	// +kubebuilder:validation:Optional
	Member *float64 `json:"member,omitempty" tf:"member,omitempty"`

	// Quota value for pools. Changing this updates the
	// the existing quota. Omitting it sets it to 0.
	// +kubebuilder:validation:Optional
	Pool *float64 `json:"pool,omitempty" tf:"pool,omitempty"`

	// ID of the project to manage quotas. Changing this
	// creates a new quota.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-openstack/apis/identity/v1alpha1.ProjectV3
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a ProjectV3 in identity to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a ProjectV3 in identity to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// Region in which to manage quotas. Changing this
	// creates a new quota. If ommited, the region of the credentials is used.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// QuotaV2Spec defines the desired state of QuotaV2
type QuotaV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     QuotaV2Parameters `json:"forProvider"`
}

// QuotaV2Status defines the observed state of QuotaV2.
type QuotaV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        QuotaV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// QuotaV2 is the Schema for the QuotaV2s API. Manages a V2 quota resource within OpenStack.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,openstack}
type QuotaV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              QuotaV2Spec   `json:"spec"`
	Status            QuotaV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// QuotaV2List contains a list of QuotaV2s
type QuotaV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []QuotaV2 `json:"items"`
}

// Repository type metadata.
var (
	QuotaV2_Kind             = "QuotaV2"
	QuotaV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: QuotaV2_Kind}.String()
	QuotaV2_KindAPIVersion   = QuotaV2_Kind + "." + CRDGroupVersion.String()
	QuotaV2_GroupVersionKind = CRDGroupVersion.WithKind(QuotaV2_Kind)
)

func init() {
	SchemeBuilder.Register(&QuotaV2{}, &QuotaV2List{})
}
