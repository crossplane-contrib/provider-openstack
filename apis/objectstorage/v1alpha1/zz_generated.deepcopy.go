//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerV1) DeepCopyInto(out *ContainerV1) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerV1.
func (in *ContainerV1) DeepCopy() *ContainerV1 {
	if in == nil {
		return nil
	}
	out := new(ContainerV1)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ContainerV1) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerV1List) DeepCopyInto(out *ContainerV1List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ContainerV1, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerV1List.
func (in *ContainerV1List) DeepCopy() *ContainerV1List {
	if in == nil {
		return nil
	}
	out := new(ContainerV1List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ContainerV1List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerV1Observation) DeepCopyInto(out *ContainerV1Observation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerV1Observation.
func (in *ContainerV1Observation) DeepCopy() *ContainerV1Observation {
	if in == nil {
		return nil
	}
	out := new(ContainerV1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerV1Parameters) DeepCopyInto(out *ContainerV1Parameters) {
	*out = *in
	if in.ContainerRead != nil {
		in, out := &in.ContainerRead, &out.ContainerRead
		*out = new(string)
		**out = **in
	}
	if in.ContainerSyncKey != nil {
		in, out := &in.ContainerSyncKey, &out.ContainerSyncKey
		*out = new(string)
		**out = **in
	}
	if in.ContainerSyncTo != nil {
		in, out := &in.ContainerSyncTo, &out.ContainerSyncTo
		*out = new(string)
		**out = **in
	}
	if in.ContainerWrite != nil {
		in, out := &in.ContainerWrite, &out.ContainerWrite
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StoragePolicy != nil {
		in, out := &in.StoragePolicy, &out.StoragePolicy
		*out = new(string)
		**out = **in
	}
	if in.Versioning != nil {
		in, out := &in.Versioning, &out.Versioning
		*out = new(bool)
		**out = **in
	}
	if in.VersioningLegacy != nil {
		in, out := &in.VersioningLegacy, &out.VersioningLegacy
		*out = make([]VersioningLegacyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerV1Parameters.
func (in *ContainerV1Parameters) DeepCopy() *ContainerV1Parameters {
	if in == nil {
		return nil
	}
	out := new(ContainerV1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerV1Spec) DeepCopyInto(out *ContainerV1Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerV1Spec.
func (in *ContainerV1Spec) DeepCopy() *ContainerV1Spec {
	if in == nil {
		return nil
	}
	out := new(ContainerV1Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerV1Status) DeepCopyInto(out *ContainerV1Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerV1Status.
func (in *ContainerV1Status) DeepCopy() *ContainerV1Status {
	if in == nil {
		return nil
	}
	out := new(ContainerV1Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersioningLegacyObservation) DeepCopyInto(out *VersioningLegacyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersioningLegacyObservation.
func (in *VersioningLegacyObservation) DeepCopy() *VersioningLegacyObservation {
	if in == nil {
		return nil
	}
	out := new(VersioningLegacyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersioningLegacyParameters) DeepCopyInto(out *VersioningLegacyParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersioningLegacyParameters.
func (in *VersioningLegacyParameters) DeepCopy() *VersioningLegacyParameters {
	if in == nil {
		return nil
	}
	out := new(VersioningLegacyParameters)
	in.DeepCopyInto(out)
	return out
}
