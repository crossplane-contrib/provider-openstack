// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
Copyright 2023 Jakob Schlagenhaufer, Jan Dittrich
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type QosMinimumBandwidthRuleV2InitParameters struct {

	// The direction of traffic. Defaults to "egress". Changing this updates the direction of the
	// existing QoS minimum bandwidth rule.
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// The minimum kilobits per second. Changing this updates the min kbps value of the existing
	// QoS minimum bandwidth rule.
	MinKbps *float64 `json:"minKbps,omitempty" tf:"min_kbps,omitempty"`

	// The QoS policy reference. Changing this creates a new QoS minimum bandwidth rule.
	QosPolicyID *string `json:"qosPolicyId,omitempty" tf:"qos_policy_id,omitempty"`

	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create a Neutron QoS minimum bandwidth rule. If omitted, the
	// region argument of the provider is used. Changing this creates a new QoS minimum bandwidth rule.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type QosMinimumBandwidthRuleV2Observation struct {

	// The direction of traffic. Defaults to "egress". Changing this updates the direction of the
	// existing QoS minimum bandwidth rule.
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The minimum kilobits per second. Changing this updates the min kbps value of the existing
	// QoS minimum bandwidth rule.
	MinKbps *float64 `json:"minKbps,omitempty" tf:"min_kbps,omitempty"`

	// The QoS policy reference. Changing this creates a new QoS minimum bandwidth rule.
	QosPolicyID *string `json:"qosPolicyId,omitempty" tf:"qos_policy_id,omitempty"`

	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create a Neutron QoS minimum bandwidth rule. If omitted, the
	// region argument of the provider is used. Changing this creates a new QoS minimum bandwidth rule.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type QosMinimumBandwidthRuleV2Parameters struct {

	// The direction of traffic. Defaults to "egress". Changing this updates the direction of the
	// existing QoS minimum bandwidth rule.
	// +kubebuilder:validation:Optional
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// The minimum kilobits per second. Changing this updates the min kbps value of the existing
	// QoS minimum bandwidth rule.
	// +kubebuilder:validation:Optional
	MinKbps *float64 `json:"minKbps,omitempty" tf:"min_kbps,omitempty"`

	// The QoS policy reference. Changing this creates a new QoS minimum bandwidth rule.
	// +kubebuilder:validation:Optional
	QosPolicyID *string `json:"qosPolicyId,omitempty" tf:"qos_policy_id,omitempty"`

	// The region in which to obtain the V2 Networking client.
	// A Networking client is needed to create a Neutron QoS minimum bandwidth rule. If omitted, the
	// region argument of the provider is used. Changing this creates a new QoS minimum bandwidth rule.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// QosMinimumBandwidthRuleV2Spec defines the desired state of QosMinimumBandwidthRuleV2
type QosMinimumBandwidthRuleV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     QosMinimumBandwidthRuleV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider QosMinimumBandwidthRuleV2InitParameters `json:"initProvider,omitempty"`
}

// QosMinimumBandwidthRuleV2Status defines the observed state of QosMinimumBandwidthRuleV2.
type QosMinimumBandwidthRuleV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        QosMinimumBandwidthRuleV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// QosMinimumBandwidthRuleV2 is the Schema for the QosMinimumBandwidthRuleV2s API. Manages a V2 Neutron QoS minimum bandwidth rule resource within OpenStack.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,openstack}
type QosMinimumBandwidthRuleV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.minKbps) || (has(self.initProvider) && has(self.initProvider.minKbps))",message="spec.forProvider.minKbps is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.qosPolicyId) || (has(self.initProvider) && has(self.initProvider.qosPolicyId))",message="spec.forProvider.qosPolicyId is a required parameter"
	Spec   QosMinimumBandwidthRuleV2Spec   `json:"spec"`
	Status QosMinimumBandwidthRuleV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// QosMinimumBandwidthRuleV2List contains a list of QosMinimumBandwidthRuleV2s
type QosMinimumBandwidthRuleV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []QosMinimumBandwidthRuleV2 `json:"items"`
}

// Repository type metadata.
var (
	QosMinimumBandwidthRuleV2_Kind             = "QosMinimumBandwidthRuleV2"
	QosMinimumBandwidthRuleV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: QosMinimumBandwidthRuleV2_Kind}.String()
	QosMinimumBandwidthRuleV2_KindAPIVersion   = QosMinimumBandwidthRuleV2_Kind + "." + CRDGroupVersion.String()
	QosMinimumBandwidthRuleV2_GroupVersionKind = CRDGroupVersion.WithKind(QosMinimumBandwidthRuleV2_Kind)
)

func init() {
	SchemeBuilder.Register(&QosMinimumBandwidthRuleV2{}, &QosMinimumBandwidthRuleV2List{})
}
