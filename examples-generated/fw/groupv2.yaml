apiVersion: fw.openstack.crossplane.io/v1alpha1
kind: GroupV2
metadata:
  annotations:
    meta.upbound.io/example-id: fw/v1alpha1/groupv2
  labels:
    testing.upbound.io/example-name: group_1
  name: group-1
spec:
  forProvider:
    egressFirewallPolicyId: ${openstack_fw_policy_v2.policy_2.id}
    ingressFirewallPolicyId: ${openstack_fw_policy_v2.policy_1.id}
    name: firewall_group

---

apiVersion: fw.openstack.crossplane.io/v1alpha1
kind: PolicyV2
metadata:
  annotations:
    meta.upbound.io/example-id: fw/v1alpha1/groupv2
  labels:
    testing.upbound.io/example-name: policy_1
  name: policy-1
spec:
  forProvider:
    name: firewall_ingress_policy
    rules:
    - ${openstack_fw_rule_v2.rule_1.id}

---

apiVersion: fw.openstack.crossplane.io/v1alpha1
kind: PolicyV2
metadata:
  annotations:
    meta.upbound.io/example-id: fw/v1alpha1/groupv2
  labels:
    testing.upbound.io/example-name: policy_2
  name: policy-2
spec:
  forProvider:
    name: firewall_egress_policy
    rules:
    - ${openstack_fw_rule_v2.rule_2.id}

---

apiVersion: fw.openstack.crossplane.io/v1alpha1
kind: RuleV2
metadata:
  annotations:
    meta.upbound.io/example-id: fw/v1alpha1/groupv2
  labels:
    testing.upbound.io/example-name: rule_1
  name: rule-1
spec:
  forProvider:
    action: deny
    description: drop TELNET traffic
    destinationPort: "23"
    enabled: "true"
    name: firewall_rule_2
    protocol: tcp

---

apiVersion: fw.openstack.crossplane.io/v1alpha1
kind: RuleV2
metadata:
  annotations:
    meta.upbound.io/example-id: fw/v1alpha1/groupv2
  labels:
    testing.upbound.io/example-name: rule_2
  name: rule-2
spec:
  forProvider:
    action: deny
    description: drop NTP traffic
    destinationPort: "123"
    enabled: "false"
    name: firewall_rule_1
    protocol: udp
