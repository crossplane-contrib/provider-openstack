apiVersion: lb.openstack.crossplane.io/v1alpha1
kind: L7RuleV2
metadata:
  annotations:
    meta.upbound.io/example-id: lb/v1alpha1/l7rulev2
  labels:
    testing.upbound.io/example-name: l7rule_1
  name: l7rule-1
spec:
  forProvider:
    compareType: EQUAL_TO
    l7policyId: ${openstack_lb_l7policy_v2.l7policy_1.id}
    type: PATH
    value: /api

---

apiVersion: lb.openstack.crossplane.io/v1alpha1
kind: L7PolicyV2
metadata:
  annotations:
    meta.upbound.io/example-id: lb/v1alpha1/l7rulev2
  labels:
    testing.upbound.io/example-name: l7policy_1
  name: l7policy-1
spec:
  forProvider:
    action: REDIRECT_TO_URL
    description: test description
    listenerId: ${openstack_lb_listener_v2.listener_1.id}
    name: test
    position: 1
    redirectUrl: http://www.example.com

---

apiVersion: lb.openstack.crossplane.io/v1alpha1
kind: ListenerV2
metadata:
  annotations:
    meta.upbound.io/example-id: lb/v1alpha1/l7rulev2
  labels:
    testing.upbound.io/example-name: listener_1
  name: listener-1
spec:
  forProvider:
    loadbalancerId: ${openstack_lb_loadbalancer_v2.loadbalancer_1.id}
    name: listener_1
    protocol: HTTP
    protocolPort: 8080

---

apiVersion: lb.openstack.crossplane.io/v1alpha1
kind: LoadbalancerV2
metadata:
  annotations:
    meta.upbound.io/example-id: lb/v1alpha1/l7rulev2
  labels:
    testing.upbound.io/example-name: loadbalancer_1
  name: loadbalancer-1
spec:
  forProvider:
    name: loadbalancer_1
    vipSubnetId: ${openstack_networking_subnet_v2.subnet_1.id}

---

apiVersion: lb.openstack.crossplane.io/v1alpha1
kind: PoolV2
metadata:
  annotations:
    meta.upbound.io/example-id: lb/v1alpha1/l7rulev2
  labels:
    testing.upbound.io/example-name: pool_1
  name: pool-1
spec:
  forProvider:
    lbMethod: ROUND_ROBIN
    loadbalancerId: ${openstack_lb_loadbalancer_v2.loadbalancer_1.id}
    name: pool_1
    protocol: HTTP

---

apiVersion: networking.openstack.crossplane.io/v1alpha1
kind: NetworkV2
metadata:
  annotations:
    meta.upbound.io/example-id: lb/v1alpha1/l7rulev2
  labels:
    testing.upbound.io/example-name: network_1
  name: network-1
spec:
  forProvider:
    adminStateUp: "true"
    name: network_1

---

apiVersion: networking.openstack.crossplane.io/v1alpha1
kind: SubnetV2
metadata:
  annotations:
    meta.upbound.io/example-id: lb/v1alpha1/l7rulev2
  labels:
    testing.upbound.io/example-name: subnet_1
  name: subnet-1
spec:
  forProvider:
    cidr: 192.168.199.0/24
    ipVersion: 4
    name: subnet_1
    networkIdSelector:
      matchLabels:
        testing.upbound.io/example-name: network_1
