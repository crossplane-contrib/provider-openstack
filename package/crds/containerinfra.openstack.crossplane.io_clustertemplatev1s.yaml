---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: clustertemplatev1s.containerinfra.openstack.crossplane.io
spec:
  group: containerinfra.openstack.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - openstack
    kind: ClustertemplateV1
    listKind: ClustertemplateV1List
    plural: clustertemplatev1s
    singular: clustertemplatev1
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClustertemplateV1 is the Schema for the ClustertemplateV1s API.
          Manages a V1 Magnum cluster template resource within OpenStack.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClustertemplateV1Spec defines the desired state of ClustertemplateV1
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  apiserverPort:
                    description: The API server port for the Container Orchestration
                      Engine for this cluster template. Changing this updates the
                      API server port of the existing cluster template.
                    type: number
                  clusterDistro:
                    description: The distro for the cluster (fedora-atomic, coreos,
                      etc.). Changing this updates the cluster distro of the existing
                      cluster template.
                    type: string
                  coe:
                    description: The Container Orchestration Engine for this cluster
                      template. Changing this updates the engine of the existing cluster
                      template.
                    type: string
                  dnsNameserver:
                    description: Address of the DNS nameserver that is used in nodes
                      of the cluster. Changing this updates the DNS nameserver of
                      the existing cluster template.
                    type: string
                  dockerStorageDriver:
                    description: Docker storage driver. Changing this updates the
                      Docker storage driver of the existing cluster template.
                    type: string
                  dockerVolumeSize:
                    description: The size (in GB) of the Docker volume. Changing this
                      updates the Docker volume size of the existing cluster template.
                    type: number
                  externalNetworkId:
                    description: The ID of the external network that will be used
                      for the cluster. Changing this updates the external network
                      ID of the existing cluster template.
                    type: string
                  fixedNetwork:
                    description: The fixed network that will be attached to the cluster.
                      Changing this updates the fixed network of the existing cluster
                      template.
                    type: string
                  fixedSubnet:
                    description: The fixed subnet that will be attached to the cluster.
                      Changing this updates the fixed subnet of the existing cluster
                      template.
                    type: string
                  flavor:
                    description: The flavor for the nodes of the cluster. Can be set
                      via the OS_MAGNUM_FLAVOR environment variable. Changing this
                      updates the flavor of the existing cluster template.
                    type: string
                  floatingIpEnabled:
                    description: Indicates whether created cluster should create floating
                      IP for every node or not. Changing this updates the floating
                      IP enabled attribute of the existing cluster template.
                    type: boolean
                  hidden:
                    description: Indicates whether the ClusterTemplate is hidden or
                      not. Changing this updates the hidden attribute of the existing
                      cluster template.
                    type: boolean
                  httpProxy:
                    description: The address of a proxy for receiving all HTTP requests
                      and relay them. Changing this updates the HTTP proxy address
                      of the existing cluster template.
                    type: string
                  httpsProxy:
                    description: The address of a proxy for receiving all HTTPS requests
                      and relay them. Changing this updates the HTTPS proxy address
                      of the existing cluster template.
                    type: string
                  image:
                    description: The reference to an image that is used for nodes
                      of the cluster. Can be set via the OS_MAGNUM_IMAGE environment
                      variable. Changing this updates the image attribute of the existing
                      cluster template.
                    type: string
                  insecureRegistry:
                    description: The insecure registry URL for the cluster template.
                      Changing this updates the insecure registry attribute of the
                      existing cluster template.
                    type: string
                  keypairId:
                    description: The name of the Compute service SSH keypair. Changing
                      this updates the keypair of the existing cluster template.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: The list of key value pairs representing additional
                      properties of the cluster template. Changing this updates the
                      labels of the existing cluster template.
                    type: object
                  masterFlavor:
                    description: The flavor for the master nodes. Can be set via the
                      OS_MAGNUM_MASTER_FLAVOR environment variable. Changing this
                      updates the master flavor of the existing cluster template.
                    type: string
                  masterLbEnabled:
                    description: Indicates whether created cluster should has a loadbalancer
                      for master nodes or not. Changing this updates the attribute
                      of the existing cluster template.
                    type: boolean
                  name:
                    description: The name of the cluster template. Changing this updates
                      the name of the existing cluster template.
                    type: string
                  networkDriver:
                    description: The name of the driver for the container network.
                      Changing this updates the network driver of the existing cluster
                      template.
                    type: string
                  noProxy:
                    description: A comma-separated list of IP addresses that shouldn't
                      be used in the cluster. Changing this updates the no proxy list
                      of the existing cluster template.
                    type: string
                  public:
                    description: Indicates whether cluster template should be public.
                      Changing this updates the public attribute of the existing cluster
                      template.
                    type: boolean
                  region:
                    description: The region in which to obtain the V1 Container Infra
                      client. A Container Infra client is needed to create a cluster
                      template. If omitted,the region argument of the provider is
                      used. Changing this creates a new cluster template.
                    type: string
                  registryEnabled:
                    description: Indicates whether Docker registry is enabled in the
                      cluster. Changing this updates the registry enabled attribute
                      of the existing cluster template.
                    type: boolean
                  serverType:
                    description: The server type for the cluster template. Changing
                      this updates the server type of the existing cluster template.
                    type: string
                  tlsDisabled:
                    description: Indicates whether the TLS should be disabled in the
                      cluster. Changing this updates the attribute of the existing
                      cluster.
                    type: boolean
                  volumeDriver:
                    description: The name of the driver that is used for the volumes
                      of the cluster nodes. Changing this updates the volume driver
                      of the existing cluster template.
                    type: string
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  apiserverPort:
                    description: The API server port for the Container Orchestration
                      Engine for this cluster template. Changing this updates the
                      API server port of the existing cluster template.
                    type: number
                  clusterDistro:
                    description: The distro for the cluster (fedora-atomic, coreos,
                      etc.). Changing this updates the cluster distro of the existing
                      cluster template.
                    type: string
                  coe:
                    description: The Container Orchestration Engine for this cluster
                      template. Changing this updates the engine of the existing cluster
                      template.
                    type: string
                  dnsNameserver:
                    description: Address of the DNS nameserver that is used in nodes
                      of the cluster. Changing this updates the DNS nameserver of
                      the existing cluster template.
                    type: string
                  dockerStorageDriver:
                    description: Docker storage driver. Changing this updates the
                      Docker storage driver of the existing cluster template.
                    type: string
                  dockerVolumeSize:
                    description: The size (in GB) of the Docker volume. Changing this
                      updates the Docker volume size of the existing cluster template.
                    type: number
                  externalNetworkId:
                    description: The ID of the external network that will be used
                      for the cluster. Changing this updates the external network
                      ID of the existing cluster template.
                    type: string
                  fixedNetwork:
                    description: The fixed network that will be attached to the cluster.
                      Changing this updates the fixed network of the existing cluster
                      template.
                    type: string
                  fixedSubnet:
                    description: The fixed subnet that will be attached to the cluster.
                      Changing this updates the fixed subnet of the existing cluster
                      template.
                    type: string
                  flavor:
                    description: The flavor for the nodes of the cluster. Can be set
                      via the OS_MAGNUM_FLAVOR environment variable. Changing this
                      updates the flavor of the existing cluster template.
                    type: string
                  floatingIpEnabled:
                    description: Indicates whether created cluster should create floating
                      IP for every node or not. Changing this updates the floating
                      IP enabled attribute of the existing cluster template.
                    type: boolean
                  hidden:
                    description: Indicates whether the ClusterTemplate is hidden or
                      not. Changing this updates the hidden attribute of the existing
                      cluster template.
                    type: boolean
                  httpProxy:
                    description: The address of a proxy for receiving all HTTP requests
                      and relay them. Changing this updates the HTTP proxy address
                      of the existing cluster template.
                    type: string
                  httpsProxy:
                    description: The address of a proxy for receiving all HTTPS requests
                      and relay them. Changing this updates the HTTPS proxy address
                      of the existing cluster template.
                    type: string
                  image:
                    description: The reference to an image that is used for nodes
                      of the cluster. Can be set via the OS_MAGNUM_IMAGE environment
                      variable. Changing this updates the image attribute of the existing
                      cluster template.
                    type: string
                  insecureRegistry:
                    description: The insecure registry URL for the cluster template.
                      Changing this updates the insecure registry attribute of the
                      existing cluster template.
                    type: string
                  keypairId:
                    description: The name of the Compute service SSH keypair. Changing
                      this updates the keypair of the existing cluster template.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: The list of key value pairs representing additional
                      properties of the cluster template. Changing this updates the
                      labels of the existing cluster template.
                    type: object
                  masterFlavor:
                    description: The flavor for the master nodes. Can be set via the
                      OS_MAGNUM_MASTER_FLAVOR environment variable. Changing this
                      updates the master flavor of the existing cluster template.
                    type: string
                  masterLbEnabled:
                    description: Indicates whether created cluster should has a loadbalancer
                      for master nodes or not. Changing this updates the attribute
                      of the existing cluster template.
                    type: boolean
                  name:
                    description: The name of the cluster template. Changing this updates
                      the name of the existing cluster template.
                    type: string
                  networkDriver:
                    description: The name of the driver for the container network.
                      Changing this updates the network driver of the existing cluster
                      template.
                    type: string
                  noProxy:
                    description: A comma-separated list of IP addresses that shouldn't
                      be used in the cluster. Changing this updates the no proxy list
                      of the existing cluster template.
                    type: string
                  public:
                    description: Indicates whether cluster template should be public.
                      Changing this updates the public attribute of the existing cluster
                      template.
                    type: boolean
                  region:
                    description: The region in which to obtain the V1 Container Infra
                      client. A Container Infra client is needed to create a cluster
                      template. If omitted,the region argument of the provider is
                      used. Changing this creates a new cluster template.
                    type: string
                  registryEnabled:
                    description: Indicates whether Docker registry is enabled in the
                      cluster. Changing this updates the registry enabled attribute
                      of the existing cluster template.
                    type: boolean
                  serverType:
                    description: The server type for the cluster template. Changing
                      this updates the server type of the existing cluster template.
                    type: string
                  tlsDisabled:
                    description: Indicates whether the TLS should be disabled in the
                      cluster. Changing this updates the attribute of the existing
                      cluster.
                    type: boolean
                  volumeDriver:
                    description: The name of the driver that is used for the volumes
                      of the cluster nodes. Changing this updates the volume driver
                      of the existing cluster template.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.coe is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.coe)
                || (has(self.initProvider) && has(self.initProvider.coe))'
            - message: spec.forProvider.image is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.image)
                || (has(self.initProvider) && has(self.initProvider.image))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: ClustertemplateV1Status defines the observed state of ClustertemplateV1.
            properties:
              atProvider:
                properties:
                  apiserverPort:
                    description: The API server port for the Container Orchestration
                      Engine for this cluster template. Changing this updates the
                      API server port of the existing cluster template.
                    type: number
                  clusterDistro:
                    description: The distro for the cluster (fedora-atomic, coreos,
                      etc.). Changing this updates the cluster distro of the existing
                      cluster template.
                    type: string
                  coe:
                    description: The Container Orchestration Engine for this cluster
                      template. Changing this updates the engine of the existing cluster
                      template.
                    type: string
                  createdAt:
                    description: The time at which cluster template was created.
                    type: string
                  dnsNameserver:
                    description: Address of the DNS nameserver that is used in nodes
                      of the cluster. Changing this updates the DNS nameserver of
                      the existing cluster template.
                    type: string
                  dockerStorageDriver:
                    description: Docker storage driver. Changing this updates the
                      Docker storage driver of the existing cluster template.
                    type: string
                  dockerVolumeSize:
                    description: The size (in GB) of the Docker volume. Changing this
                      updates the Docker volume size of the existing cluster template.
                    type: number
                  externalNetworkId:
                    description: The ID of the external network that will be used
                      for the cluster. Changing this updates the external network
                      ID of the existing cluster template.
                    type: string
                  fixedNetwork:
                    description: The fixed network that will be attached to the cluster.
                      Changing this updates the fixed network of the existing cluster
                      template.
                    type: string
                  fixedSubnet:
                    description: The fixed subnet that will be attached to the cluster.
                      Changing this updates the fixed subnet of the existing cluster
                      template.
                    type: string
                  flavor:
                    description: The flavor for the nodes of the cluster. Can be set
                      via the OS_MAGNUM_FLAVOR environment variable. Changing this
                      updates the flavor of the existing cluster template.
                    type: string
                  floatingIpEnabled:
                    description: Indicates whether created cluster should create floating
                      IP for every node or not. Changing this updates the floating
                      IP enabled attribute of the existing cluster template.
                    type: boolean
                  hidden:
                    description: Indicates whether the ClusterTemplate is hidden or
                      not. Changing this updates the hidden attribute of the existing
                      cluster template.
                    type: boolean
                  httpProxy:
                    description: The address of a proxy for receiving all HTTP requests
                      and relay them. Changing this updates the HTTP proxy address
                      of the existing cluster template.
                    type: string
                  httpsProxy:
                    description: The address of a proxy for receiving all HTTPS requests
                      and relay them. Changing this updates the HTTPS proxy address
                      of the existing cluster template.
                    type: string
                  id:
                    type: string
                  image:
                    description: The reference to an image that is used for nodes
                      of the cluster. Can be set via the OS_MAGNUM_IMAGE environment
                      variable. Changing this updates the image attribute of the existing
                      cluster template.
                    type: string
                  insecureRegistry:
                    description: The insecure registry URL for the cluster template.
                      Changing this updates the insecure registry attribute of the
                      existing cluster template.
                    type: string
                  keypairId:
                    description: The name of the Compute service SSH keypair. Changing
                      this updates the keypair of the existing cluster template.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: The list of key value pairs representing additional
                      properties of the cluster template. Changing this updates the
                      labels of the existing cluster template.
                    type: object
                  masterFlavor:
                    description: The flavor for the master nodes. Can be set via the
                      OS_MAGNUM_MASTER_FLAVOR environment variable. Changing this
                      updates the master flavor of the existing cluster template.
                    type: string
                  masterLbEnabled:
                    description: Indicates whether created cluster should has a loadbalancer
                      for master nodes or not. Changing this updates the attribute
                      of the existing cluster template.
                    type: boolean
                  name:
                    description: The name of the cluster template. Changing this updates
                      the name of the existing cluster template.
                    type: string
                  networkDriver:
                    description: The name of the driver for the container network.
                      Changing this updates the network driver of the existing cluster
                      template.
                    type: string
                  noProxy:
                    description: A comma-separated list of IP addresses that shouldn't
                      be used in the cluster. Changing this updates the no proxy list
                      of the existing cluster template.
                    type: string
                  projectId:
                    description: The project of the cluster template. Required if
                      admin wants to create a cluster template in another project.
                      Changing this creates a new cluster template.
                    type: string
                  public:
                    description: Indicates whether cluster template should be public.
                      Changing this updates the public attribute of the existing cluster
                      template.
                    type: boolean
                  region:
                    description: The region in which to obtain the V1 Container Infra
                      client. A Container Infra client is needed to create a cluster
                      template. If omitted,the region argument of the provider is
                      used. Changing this creates a new cluster template.
                    type: string
                  registryEnabled:
                    description: Indicates whether Docker registry is enabled in the
                      cluster. Changing this updates the registry enabled attribute
                      of the existing cluster template.
                    type: boolean
                  serverType:
                    description: The server type for the cluster template. Changing
                      this updates the server type of the existing cluster template.
                    type: string
                  tlsDisabled:
                    description: Indicates whether the TLS should be disabled in the
                      cluster. Changing this updates the attribute of the existing
                      cluster.
                    type: boolean
                  updatedAt:
                    description: The time at which cluster template was created.
                    type: string
                  userId:
                    description: The user of the cluster template. Required if admin
                      wants to create a cluster template for another user. Changing
                      this creates a new cluster template.
                    type: string
                  volumeDriver:
                    description: The name of the driver that is used for the volumes
                      of the cluster nodes. Changing this updates the volume driver
                      of the existing cluster template.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
