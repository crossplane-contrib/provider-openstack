name: terraform-provider-openstack/openstack
resources:
    openstack_blockstorage_qos_association_v3:
        subCategory: Block Storage / Cinder
        description: Manages a V3 Qos association resource within OpenStack.
        name: openstack_blockstorage_qos_association_v3
        title: openstack_blockstorage_qos_association_v3
        examples:
            - name: qos_association
              manifest: |-
                {
                  "qos_id": "${openstack_blockstorage_qos_v3.qos.id}",
                  "volume_type_id": "${openstack_blockstorage_volume_type_v3.volume_type.id}"
                }
              references:
                qos_id: openstack_blockstorage_qos_v3.qos.id
                volume_type_id: openstack_blockstorage_volume_type_v3.volume_type.id
              dependencies:
                openstack_blockstorage_qos_v3.qos: |-
                    {
                      "consumer": "front-end",
                      "name": "%s",
                      "specs": {
                        "read_iops_sec": "20000"
                      }
                    }
                openstack_blockstorage_volume_type_v3.volume_type: |-
                    {
                      "name": "%s"
                    }
        argumentDocs:
            qos_id: |-
                - (Required) ID of the qos to associate. Changing this creates
                a new qos association.
            region: |-
                - (Optional) The region in which to create the qos association.
                If omitted, the region argument of the provider is used. Changing
                this creates a new qos association.
            volume_type_id: |-
                - (Required) ID of the volume_type to associate.
                Changing this creates a new qos association.
        importStatements: []
    openstack_blockstorage_qos_v3:
        subCategory: Block Storage / Cinder
        description: Manages a V3 Quality-Of-Servirce (qos) resource within OpenStack.
        name: openstack_blockstorage_qos_v3
        title: openstack_blockstorage_qos_v3
        examples:
            - name: qos
              manifest: |-
                {
                  "consumer": "back-end",
                  "name": "foo",
                  "specs": {
                    "read_iops_sec": "40000",
                    "write_iops_sec": "40000"
                  }
                }
        argumentDocs:
            consumer: |-
                - (Optional) The consumer of qos. Can be one of front-end,
                back-end or both. Changing this updates the consumer of an
                existing qos.
            name: '- (Required) Name of the qos.  Changing this creates a new qos.'
            region: |-
                - (Optional) The region in which to create the qos. If omitted,
                the region argument of the provider is used. Changing this creates
                a new qos.
            specs: '- (Optional) Key/Value pairs of specs for the qos.'
        importStatements: []
    openstack_blockstorage_quotaset_v2:
        subCategory: Deprecated
        description: Manages a V2 quotaset resource within OpenStack.
        name: openstack_blockstorage_quotaset_v2
        title: openstack_blockstorage_quotaset_v2
        examples:
            - name: quotaset_1
              manifest: |-
                {
                  "backup_gigabytes": 10,
                  "backups": 4,
                  "gigabytes": 100,
                  "groups": 100,
                  "per_volume_gigabytes": 10,
                  "project_id": "${openstack_identity_project_v3.project_1.id}",
                  "snapshots": 4,
                  "volume_type_quota": {
                    "gigabytes_ssd": 500,
                    "snapshots_ssd": 10,
                    "volumes_ssd": 30
                  },
                  "volumes": 10
                }
              references:
                project_id: openstack_identity_project_v3.project_1.id
              dependencies:
                openstack_identity_project_v3.project_1: |-
                    {
                      "name": "${project_1}"
                    }
        argumentDocs:
            backup_gigabytes: |-
                - (Optional) Quota value for backup gigabytes. Changing
                this updates the existing quotaset.
            backups: |-
                - (Optional) Quota value for backups. Changing this updates the
                existing quotaset.
            gigabytes: |-
                - (Optional) Quota value for gigabytes. Changing this updates the
                existing quotaset.
            groups: |-
                - (Optional) Quota value for groups. Changing this updates the
                existing quotaset.
            per_volume_gigabytes: |-
                - (Optional) Quota value for gigabytes per volume .
                Changing this updates the existing quotaset.
            project_id: |-
                - (Required) ID of the project to manage quotas. Changing this
                creates a new quotaset.
            region: |-
                - (Optional) The region in which to create the volume. If
                omitted, the region argument of the provider is used. Changing this
                creates a new quotaset.
            snapshots: |-
                - (Optional) Quota value for snapshots. Changing this updates the
                existing quotaset.
            volume_type_quota: |-
                - (Optional)  Key/Value pairs for setting quota for
                volumes types. Possible keys are snapshots_<volume_type_name>,
                volumes_<volume_type_name> and gigabytes_<volume_type_name>.
            volumes: |-
                - (Optional) Quota value for volumes. Changing this updates the
                existing quotaset.
        importStatements: []
    openstack_blockstorage_quotaset_v3:
        subCategory: Block Storage / Cinder
        description: Manages a V3 quotaset resource within OpenStack.
        name: openstack_blockstorage_quotaset_v3
        title: openstack_blockstorage_quotaset_v3
        examples:
            - name: quotaset_1
              manifest: |-
                {
                  "backup_gigabytes": 10,
                  "backups": 4,
                  "gigabytes": 100,
                  "groups": 100,
                  "per_volume_gigabytes": 10,
                  "project_id": "${openstack_identity_project_v3.project_1.id}",
                  "snapshots": 4,
                  "volume_type_quota": {
                    "gigabytes_ssd": 500,
                    "snapshots_ssd": 10,
                    "volumes_ssd": 30
                  },
                  "volumes": 10
                }
              references:
                project_id: openstack_identity_project_v3.project_1.id
              dependencies:
                openstack_identity_project_v3.project_1: |-
                    {
                      "name": "${project_1}"
                    }
        argumentDocs:
            backup_gigabytes: |-
                - (Optional) Quota value for backup gigabytes. Changing
                this updates the existing quotaset.
            backups: |-
                - (Optional) Quota value for backups. Changing this updates the
                existing quotaset.
            gigabytes: |-
                - (Optional) Quota value for gigabytes. Changing this updates the
                existing quotaset.
            groups: |-
                - (Optional) Quota value for groups. Changing this updates the
                existing quotaset.
            per_volume_gigabytes: |-
                - (Optional) Quota value for gigabytes per volume .
                Changing this updates the existing quotaset.
            project_id: |-
                - (Required) ID of the project to manage quotas. Changing this
                creates a new quotaset.
            region: |-
                - (Optional) The region in which to create the volume. If
                omitted, the region argument of the provider is used. Changing this
                creates a new quotaset.
            snapshots: |-
                - (Optional) Quota value for snapshots. Changing this updates the
                existing quotaset.
            volume_type_quota: |-
                - (Optional)  Key/Value pairs for setting quota for
                volumes types. Possible keys are snapshots_<volume_type_name>,
                volumes_<volume_type_name> and gigabytes_<volume_type_name>.
            volumes: |-
                - (Optional) Quota value for volumes. Changing this updates the
                existing quotaset.
        importStatements: []
    openstack_blockstorage_volume_attach_v2:
        subCategory: Deprecated
        description: Creates an attachment connection to a Block Storage volume
        name: openstack_blockstorage_volume_attach_v2
        title: openstack_blockstorage_volume_attach_v2
        examples:
            - name: va_1
              manifest: |-
                {
                  "device": "auto",
                  "host_name": "devstack",
                  "initiator": "iqn.1993-08.org.debian:01:e9861fb1859",
                  "ip_address": "192.168.255.10",
                  "os_type": "linux2",
                  "platform": "x86_64",
                  "volume_id": "${openstack_blockstorage_volume_v2.volume_1.id}"
                }
              references:
                volume_id: openstack_blockstorage_volume_v2.volume_1.id
              dependencies:
                openstack_blockstorage_volume_v2.volume_1: |-
                    {
                      "name": "volume_1",
                      "size": 1
                    }
        argumentDocs:
            attach_mode: |-
                - (Optional) Specify whether to attach the volume as Read-Only
                (ro) or Read-Write (rw). Only values of ro and rw are accepted.
                If left unspecified, the Block Storage API will apply a default of rw.
            data: |-
                - This is a map of key/value pairs that contain the connection
                information. You will want to pass this information to a provisioner
                script to finalize the connection. See below for more information.
            device: |-
                - (Optional) The device to tell the Block Storage service this
                volume will be attached as. This is purely for informational purposes.
                You can specify auto or a device such as /dev/vdc.
            driver_volume_type: '- The storage driver that the volume is based on.'
            host_name: '- (Required) The host to attach the volume to.'
            initiator: '- (Optional) The iSCSI initiator string to make the connection.'
            ip_address: '- (Optional) The IP address of the host_name above.'
            mount_point_base: '- A mount point base name for shared storage.'
            multipath: '- (Optional) Whether to connect to this volume via multipath.'
            os_type: '- (Optional) The iSCSI initiator OS type.'
            platform: '- (Optional) The iSCSI initiator platform.'
            region: |-
                - (Optional) The region in which to obtain the V2 Block Storage
                client. A Block Storage client is needed to create a volume attachment.
                If omitted, the region argument of the provider is used. Changing this
                creates a new volume attachment.
            volume_id: '- (Required) The ID of the Volume to attach to an Instance.'
            wwnn: '- (Optional) A wwnn name. Used for Fibre Channel connections.'
            wwpn: |-
                - (Optional) An array of wwpn strings. Used for Fibre Channel
                connections.
        importStatements: []
    openstack_blockstorage_volume_attach_v3:
        subCategory: Block Storage / Cinder
        description: Creates an attachment connection to a Block Storage volume
        name: openstack_blockstorage_volume_attach_v3
        title: openstack_blockstorage_volume_attach_v3
        examples:
            - name: va_1
              manifest: |-
                {
                  "device": "auto",
                  "host_name": "devstack",
                  "initiator": "iqn.1993-08.org.debian:01:e9861fb1859",
                  "ip_address": "192.168.255.10",
                  "os_type": "linux2",
                  "platform": "x86_64",
                  "volume_id": "${openstack_blockstorage_volume_v3.volume_1.id}"
                }
              references:
                volume_id: openstack_blockstorage_volume_v3.volume_1.id
              dependencies:
                openstack_blockstorage_volume_v3.volume_1: |-
                    {
                      "name": "volume_1",
                      "size": 1
                    }
        argumentDocs:
            attach_mode: |-
                - (Optional) Specify whether to attach the volume as Read-Only
                (ro) or Read-Write (rw). Only values of ro and rw are accepted.
                If left unspecified, the Block Storage API will apply a default of rw.
            data: |-
                - This is a map of key/value pairs that contain the connection
                information. You will want to pass this information to a provisioner
                script to finalize the connection. See below for more information.
            device: |-
                - (Optional) The device to tell the Block Storage service this
                volume will be attached as. This is purely for informational purposes.
                You can specify auto or a device such as /dev/vdc.
            driver_volume_type: '- The storage driver that the volume is based on.'
            host_name: '- (Required) The host to attach the volume to.'
            initiator: '- (Optional) The iSCSI initiator string to make the connection.'
            ip_address: '- (Optional) The IP address of the host_name above.'
            mount_point_base: '- A mount point base name for shared storage.'
            multipath: '- (Optional) Whether to connect to this volume via multipath.'
            os_type: '- (Optional) The iSCSI initiator OS type.'
            platform: '- (Optional) The iSCSI initiator platform.'
            region: |-
                - (Optional) The region in which to obtain the V3 Block Storage
                client. A Block Storage client is needed to create a volume attachment.
                If omitted, the region argument of the provider is used. Changing this
                creates a new volume attachment.
            volume_id: '- (Required) The ID of the Volume to attach to an Instance.'
            wwnn: '- (Optional) A wwnn name. Used for Fibre Channel connections.'
            wwpn: |-
                - (Optional) An array of wwpn strings. Used for Fibre Channel
                connections.
        importStatements: []
    openstack_blockstorage_volume_type_access_v3:
        subCategory: Block Storage / Cinder
        description: Manages a V3 volume type access resource within OpenStack.
        name: openstack_blockstorage_volume_type_access_v3
        title: openstack_blockstorage_volume_type_access_v3
        examples:
            - name: volume_type_access
              manifest: |-
                {
                  "project_id": "${openstack_identity_project_v3.project_1.id}",
                  "volume_type_id": "${openstack_blockstorage_volume_type_v3.volume_type_1.id}"
                }
              references:
                project_id: openstack_identity_project_v3.project_1.id
                volume_type_id: openstack_blockstorage_volume_type_v3.volume_type_1.id
              dependencies:
                openstack_blockstorage_volume_type_v3.volume_type_1: |-
                    {
                      "is_public": false,
                      "name": "volume_type_1"
                    }
                openstack_identity_project_v3.project_1: |-
                    {
                      "name": "project_1"
                    }
        argumentDocs:
            project_id: |-
                - (Required) ID of the project to give access to. Changing this
                creates a new resource.
            region: |-
                - (Optional) The region in which to create the volume. If
                omitted, the region argument of the provider is used. Changing this
                creates a new quotaset.
            volume_type_id: |-
                - (Required) ID of the volume type to give access to. Changing
                this creates a new resource.
        importStatements: []
    openstack_blockstorage_volume_type_v3:
        subCategory: Block Storage / Cinder
        description: Manages a V3 volume type resource within OpenStack.
        name: openstack_blockstorage_volume_type_v3
        title: openstack_blockstorage_volume_type_v3
        examples:
            - name: volume_type_1
              manifest: |-
                {
                  "description": "Volume type 1",
                  "extra_specs": {
                    "capabilities": "gpu",
                    "volume_backend_name": "ssd"
                  },
                  "name": "volume_type_1"
                }
        argumentDocs:
            description: |-
                - (Optional) Human-readable description of the port. Changing
                this updates the description of an existing volume type.
            extra_specs: '- (Optional) Key/Value pairs of metadata for the volume type.'
            is_public: |-
                - (Optional) Whether the volume type is public. Changing
                this updates the is_public of an existing volume type.
            name: |-
                - (Required) Name of the volume type.  Changing this
                updates the name of an existing volume type.
            region: |-
                - (Optional) The region in which to create the volume. If
                omitted, the region argument of the provider is used. Changing this
                creates a new quotaset.
        importStatements: []
    openstack_blockstorage_volume_v1:
        subCategory: Deprecated
        description: Manages a V1 volume resource within OpenStack.
        name: openstack_blockstorage_volume_v1
        title: openstack_blockstorage_volume_v1
        examples:
            - name: volume_1
              manifest: |-
                {
                  "description": "first test volume",
                  "name": "tf-test-volume",
                  "region": "RegionOne",
                  "size": 3
                }
        argumentDocs:
            attachment: |-
                - If a volume is attached to an instance, this attribute will
                display the Attachment ID, Instance ID, and the Device as the Instance
                sees it.
            availability_zone: |-
                - (Optional) The availability zone for the volume.
                Changing this creates a new volume.
            description: |-
                - (Optional) A description of the volume. Changing this updates
                the volume's description.
            image_id: |-
                - (Optional) The image ID from which to create the volume.
                Changing this creates a new volume.
            metadata: |-
                - (Optional) Metadata key/value pairs to associate with the volume.
                Changing this updates the existing volume metadata.
            name: |-
                - (Optional) A unique name for the volume. Changing this updates the
                volume's name.
            region: |-
                - (Optional) The region in which to create the volume. If
                omitted, the region argument of the provider is used. Changing this
                creates a new volume.
            size: |-
                - (Required) The size of the volume to create (in gigabytes). Changing
                this creates a new volume.
            snapshot_id: |-
                - (Optional) The snapshot ID from which to create the volume.
                Changing this creates a new volume.
            source_vol_id: |-
                - (Optional) The volume ID from which to create the volume.
                Changing this creates a new volume.
            volume_type: |-
                - (Optional) The type of volume to create.
                Changing this creates a new volume.
        importStatements: []
    openstack_blockstorage_volume_v2:
        subCategory: Deprecated
        description: Manages a V2 volume resource within OpenStack.
        name: openstack_blockstorage_volume_v2
        title: openstack_blockstorage_volume_v2
        examples:
            - name: volume_1
              manifest: |-
                {
                  "description": "first test volume",
                  "name": "volume_1",
                  "region": "RegionOne",
                  "size": 3
                }
        argumentDocs:
            attachment: |-
                - If a volume is attached to an instance, this attribute will
                display the Attachment ID, Instance ID, and the Device as the Instance
                sees it.
            availability_zone: |-
                - (Optional) The availability zone for the volume.
                Changing this creates a new volume.
            consistency_group_id: |-
                - (Optional) The consistency group to place the volume
                in.
            description: |-
                - (Optional) A description of the volume. Changing this updates
                the volume's description.
            image_id: |-
                - (Optional) The image ID from which to create the volume.
                Changing this creates a new volume.
            metadata: |-
                - (Optional) Metadata key/value pairs to associate with the volume.
                Changing this updates the existing volume metadata.
            name: |-
                - (Optional) A unique name for the volume. Changing this updates the
                volume's name.
            region: |-
                - (Optional) The region in which to create the volume. If
                omitted, the region argument of the provider is used. Changing this
                creates a new volume.
            scheduler_hints: |-
                - (Optional) Provide the Cinder scheduler with hints on where
                to instantiate a volume in the OpenStack cloud. The available hints are described below.
            scheduler_hints.additional_properties: |-
                - (Optional) Arbitrary key/value pairs of additional
                properties to pass to the scheduler.
            scheduler_hints.different_host: |-
                - (Optional) The volume should be scheduled on a
                different host from the set of volumes specified in the list provided.
            scheduler_hints.local_to_instance: |-
                - (Optional) An instance UUID. The volume should be
                scheduled on the same host as the instance.
            scheduler_hints.query: |-
                - (Optional) A conditional query that a back-end must pass in
                order to host a volume. The query must use the JsonFilter syntax
                which is described
                here.
                At this time, only simple queries are supported. Compound queries using
                and, or, or not are not supported. An example of a simple query is:
            scheduler_hints.same_host: |-
                - (Optional) A list of volume UUIDs. The volume should be
                scheduled on the same host as another volume specified in the list provided.
            size: |-
                - (Required) The size of the volume to create (in gigabytes). Changing
                this creates a new volume.
            snapshot_id: |-
                - (Optional) The snapshot ID from which to create the volume.
                Changing this creates a new volume.
            source_replica: '- (Optional) The volume ID to replicate with.'
            source_vol_id: |-
                - (Optional) The volume ID from which to create the volume.
                Changing this creates a new volume.
            volume_type: |-
                - (Optional) The type of volume to create.
                Changing this creates a new volume.
        importStatements: []
    openstack_blockstorage_volume_v3:
        subCategory: Block Storage / Cinder
        description: Manages a V3 volume resource within OpenStack.
        name: openstack_blockstorage_volume_v3
        title: openstack_blockstorage_volume_v3
        examples:
            - name: volume_1
              manifest: |-
                {
                  "description": "first test volume",
                  "name": "volume_1",
                  "region": "RegionOne",
                  "size": 3
                }
        argumentDocs:
            attachment: |-
                - If a volume is attached to an instance, this attribute will
                display the Attachment ID, Instance ID, and the Device as the Instance
                sees it.
            availability_zone: |-
                - (Optional) The availability zone for the volume.
                Changing this creates a new volume.
            consistency_group_id: |-
                - (Optional) The consistency group to place the volume
                in.
            description: |-
                - (Optional) A description of the volume. Changing this updates
                the volume's description.
            enable_online_resize: |-
                - (Optional) When this option is set it allows extending
                attached volumes. Note: updating size of an attached volume requires Cinder
                support for version 3.42 and a compatible storage driver.
            image_id: |-
                - (Optional) The image ID from which to create the volume.
                Changing this creates a new volume.
            metadata: |-
                - (Optional) Metadata key/value pairs to associate with the volume.
                Changing this updates the existing volume metadata.
            multiattach: '- (Optional) Allow the volume to be attached to more than one Compute instance.'
            name: |-
                - (Optional) A unique name for the volume. Changing this updates the
                volume's name.
            region: |-
                - (Optional) The region in which to create the volume. If
                omitted, the region argument of the provider is used. Changing this
                creates a new volume.
            scheduler_hints: |-
                - (Optional) Provide the Cinder scheduler with hints on where
                to instantiate a volume in the OpenStack cloud. The available hints are described below.
            scheduler_hints.additional_properties: |-
                - (Optional) Arbitrary key/value pairs of additional
                properties to pass to the scheduler.
            scheduler_hints.different_host: |-
                - (Optional) The volume should be scheduled on a
                different host from the set of volumes specified in the list provided.
            scheduler_hints.local_to_instance: |-
                - (Optional) An instance UUID. The volume should be
                scheduled on the same host as the instance.
            scheduler_hints.query: |-
                - (Optional) A conditional query that a back-end must pass in
                order to host a volume. The query must use the JsonFilter syntax
                which is described
                here.
                At this time, only simple queries are supported. Compound queries using
                and, or, or not are not supported. An example of a simple query is:
            scheduler_hints.same_host: |-
                - (Optional) A list of volume UUIDs. The volume should be
                scheduled on the same host as another volume specified in the list provided.
            size: '- (Required) The size of the volume to create (in gigabytes).'
            snapshot_id: |-
                - (Optional) The snapshot ID from which to create the volume.
                Changing this creates a new volume.
            source_replica: '- (Optional) The volume ID to replicate with.'
            source_vol_id: |-
                - (Optional) The volume ID from which to create the volume.
                Changing this creates a new volume.
            volume_type: |-
                - (Optional) The type of volume to create.
                Changing this creates a new volume.
        importStatements: []
    openstack_compute_aggregate_v2:
        subCategory: Compute / Nova
        description: Manages a Host Aggregate within Openstack Nova
        name: openstack_compute_aggregate_v2
        title: openstack_compute_aggregate_v2
        examples:
            - name: dell_servers
              manifest: |-
                {
                  "hosts": [
                    "myhost01.example.com",
                    "myhost02.example.com"
                  ],
                  "metadata": {
                    "cpus": "56"
                  },
                  "name": "dell_servers",
                  "region": "RegionOne",
                  "zone": "nova"
                }
            - name: test
              manifest: |-
                {
                  "name": "test"
                }
        argumentDocs:
            hosts: |-
                - (Optional) The list of hosts contained in the Host Aggregate. The hosts must be added
                to Openstack and visible in the web interface, or the provider will fail to add them to the host
                aggregate.
            metadata: '- (Optional) The metadata of the Host Aggregate. Can be useful to indicate scheduler hints.'
            name: '- The name of the Host Aggregate'
            region: |-
                - (Optional) The region in which to create the Host Aggregate. If
                omitted, the region argument of the provider is used. Changing this
                creates a new Host Aggregate.
            zone: |-
                - (Optional) The name of the Availability Zone to use. If ommited, it will take the default
                availability zone.
        importStatements: []
    openstack_compute_flavor_access_v2:
        subCategory: Compute / Nova
        description: Manages a project access for flavor V2 resource within OpenStack.
        name: openstack_compute_flavor_access_v2
        title: openstack_compute_flavor_access_v2
        examples:
            - name: access_1
              manifest: |-
                {
                  "flavor_id": "${openstack_compute_flavor_v2.flavor_1.id}",
                  "tenant_id": "${openstack_identity_project_v3.project_1.id}"
                }
              references:
                flavor_id: openstack_compute_flavor_v2.flavor_1.id
                tenant_id: openstack_identity_project_v3.project_1.id
              dependencies:
                openstack_compute_flavor_v2.flavor_1: |-
                    {
                      "disk": "20",
                      "is_public": false,
                      "name": "my-flavor",
                      "ram": "8096",
                      "vcpus": "2"
                    }
                openstack_identity_project_v3.project_1: |-
                    {
                      "name": "my-project"
                    }
        argumentDocs:
            flavor_id: '- (Required) The UUID of flavor to use. Changing this creates a new flavor access.'
            region: |-
                - (Optional) The region in which to obtain the V2 Compute client.
                If omitted, the region argument of the provider is used.
                Changing this creates a new flavor access.
            tenant_id: |-
                - (Required) The UUID of tenant which is allowed to use the flavor.
                Changing this creates a new flavor access.
        importStatements: []
    openstack_compute_flavor_v2:
        subCategory: Compute / Nova
        description: Manages a V2 flavor resource within OpenStack.
        name: openstack_compute_flavor_v2
        title: openstack_compute_flavor_v2
        examples:
            - name: test-flavor
              manifest: |-
                {
                  "disk": "20",
                  "extra_specs": {
                    "hw:cpu_policy": "CPU-POLICY",
                    "hw:cpu_thread_policy": "CPU-THREAD-POLICY"
                  },
                  "name": "my-flavor",
                  "ram": "8096",
                  "vcpus": "2"
                }
        argumentDocs:
            description: |-
                - (Optional) The description of the flavor. Changing this
                updates the description of the flavor. Requires microversion >= 2.55.
            disk: |-
                - (Required) The amount of disk space in GiB to use for the root
                (/) partition. Changing this creates a new flavor.
            ephemeral: |-
                - (Optional) The amount of ephemeral in GiB. If unspecified,
                the default is 0. Changing this creates a new flavor.
            extra_specs: '- (Optional) Key/Value pairs of metadata for the flavor.'
            flavor_id: |-
                - (Optional) Unique ID (integer or UUID) of flavor to create. Changing
                this creates a new flavor.
            is_public: |-
                - (Optional) Whether the flavor is public. Changing this creates
                a new flavor.
            name: |-
                - (Required) A unique name for the flavor. Changing this creates a new
                flavor.
            ram: |-
                - (Required) The amount of RAM to use, in megabytes. Changing this
                creates a new flavor.
            region: |-
                - (Optional) The region in which to obtain the V2 Compute client.
                Flavors are associated with accounts, but a Compute client is needed to
                create one. If omitted, the region argument of the provider is used.
                Changing this creates a new flavor.
            rx_tx_factor: |-
                - (Optional) RX/TX bandwith factor. The default is 1. Changing
                this creates a new flavor.
            swap: |-
                - (Optional) The amount of disk space in megabytes to use. If
                unspecified, the default is 0. Changing this creates a new flavor.
            vcpus: |-
                - (Required) The number of virtual CPUs to use. Changing this creates
                a new flavor.
        importStatements: []
    openstack_compute_floatingip_associate_v2:
        subCategory: Compute / Nova
        description: Associate a floating IP to an instance
        name: openstack_compute_floatingip_associate_v2
        title: openstack_compute_floatingip_associate_v2
        examples:
            - name: fip_1
              manifest: |-
                {
                  "floating_ip": "${openstack_networking_floatingip_v2.fip_1.address}",
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}"
                }
              references:
                floating_ip: openstack_networking_floatingip_v2.fip_1.address
                instance_id: openstack_compute_instance_v2.instance_1.id
              dependencies:
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "flavor_id": 3,
                      "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                      "key_pair": "my_key_pair_name",
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
                openstack_networking_floatingip_v2.fip_1: |-
                    {
                      "pool": "my_pool"
                    }
            - name: fip_1
              manifest: |-
                {
                  "fixed_ip": "${openstack_compute_instance_v2.instance_1.network.1.fixed_ip_v4}",
                  "floating_ip": "${openstack_networking_floatingip_v2.fip_1.address}",
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}"
                }
              references:
                fixed_ip: openstack_compute_instance_v2.instance_1.network.1.fixed_ip_v4
                floating_ip: openstack_networking_floatingip_v2.fip_1.address
                instance_id: openstack_compute_instance_v2.instance_1.id
              dependencies:
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "flavor_id": 3,
                      "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                      "key_pair": "my_key_pair_name",
                      "name": "instance_1",
                      "network": [
                        {
                          "name": "my_network"
                        },
                        {
                          "name": "default"
                        }
                      ],
                      "security_groups": [
                        "default"
                      ]
                    }
                openstack_networking_floatingip_v2.fip_1: |-
                    {
                      "pool": "my_pool"
                    }
        argumentDocs:
            fixed_ip: '- (Optional) The specific IP address to direct traffic to.'
            floating_ip: '- (Required) The floating IP to associate.'
            instance_id: '- (Required) The instance to associte the floating IP with.'
            region: |-
                - (Optional) The region in which to obtain the V2 Compute client.
                Keypairs are associated with accounts, but a Compute client is needed to
                create one. If omitted, the region argument of the provider is used.
                Changing this creates a new floatingip_associate.
            wait_until_associated: |-
                - (Optional) In cases where the OpenStack environment
                does not automatically wait until the association has finished, set this
                option to have Terraform poll the instance until the floating IP has been
                associated. Defaults to false.
        importStatements: []
    openstack_compute_floatingip_v2:
        subCategory: Compute / Nova
        description: Manages a V2 floating IP resource within OpenStack Nova (compute).
        name: openstack_compute_floatingip_v2
        title: openstack_compute_floatingip_v2
        examples:
            - name: floatip_1
              manifest: |-
                {
                  "pool": "public"
                }
        argumentDocs:
            address: '- The actual floating IP address itself.'
            fixed_ip: '- The fixed IP address corresponding to the floating IP.'
            instance_id: '- UUID of the compute instance associated with the floating IP.'
            pool: |-
                - (Required) The name of the pool from which to obtain the floating
                IP. Changing this creates a new floating IP.
            region: |-
                - (Optional) The region in which to obtain the V2 Compute client.
                A Compute client is needed to create a floating IP that can be used with
                a compute instance. If omitted, the region argument of the provider
                is used. Changing this creates a new floating IP (which may or may not
                have a different address).
        importStatements: []
    openstack_compute_instance_v2:
        subCategory: Compute / Nova
        description: Manages a V2 VM instance resource within OpenStack.
        name: openstack_compute_instance_v2
        title: openstack_compute_instance_v2
        examples:
            - name: basic
              manifest: |-
                {
                  "flavor_id": "3",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_pair": "my_key_pair_name",
                  "metadata": {
                    "this": "that"
                  },
                  "name": "basic",
                  "network": [
                    {
                      "name": "my_network"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
            - name: myinstance
              manifest: |-
                {
                  "flavor_id": "3",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_pair": "my_key_pair_name",
                  "name": "myinstance",
                  "network": [
                    {
                      "name": "my_network"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
              dependencies:
                openstack_blockstorage_volume_v3.myvol: |-
                    {
                      "name": "myvol",
                      "size": 1
                    }
                openstack_compute_volume_attach_v2.attached: |-
                    {
                      "instance_id": "${openstack_compute_instance_v2.myinstance.id}",
                      "volume_id": "${openstack_blockstorage_volume_v3.myvol.id}"
                    }
            - name: boot-from-volume
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "image",
                      "uuid": "\u003cimage-id\u003e",
                      "volume_size": 5
                    }
                  ],
                  "flavor_id": "3",
                  "key_pair": "my_key_pair_name",
                  "name": "boot-from-volume",
                  "network": [
                    {
                      "name": "my_network"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
            - name: boot-from-volume
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "volume",
                      "uuid": "${openstack_blockstorage_volume_v3.myvol.id}"
                    }
                  ],
                  "flavor_id": "3",
                  "key_pair": "my_key_pair_name",
                  "name": "bootfromvolume",
                  "network": [
                    {
                      "name": "my_network"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
              references:
                block_device.uuid: openstack_blockstorage_volume_v3.myvol.id
              dependencies:
                openstack_blockstorage_volume_v3.myvol: |-
                    {
                      "image_id": "\u003cimage-id\u003e",
                      "name": "myvol",
                      "size": 5
                    }
            - name: instance_1
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "local",
                      "source_type": "image",
                      "uuid": "\u003cimage-id\u003e"
                    },
                    {
                      "boot_index": 1,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "blank",
                      "volume_size": 1
                    }
                  ],
                  "flavor_id": "3",
                  "image_id": "\u003cimage-id\u003e",
                  "key_pair": "my_key_pair_name",
                  "name": "instance_1",
                  "security_groups": [
                    "default"
                  ]
                }
            - name: instance_1
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "local",
                      "source_type": "image",
                      "uuid": "\u003cimage-id\u003e"
                    },
                    {
                      "boot_index": 1,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "volume",
                      "uuid": "${openstack_blockstorage_volume_v3.volume_1.id}"
                    }
                  ],
                  "flavor_id": "3",
                  "image_id": "\u003cimage-id\u003e",
                  "key_pair": "my_key_pair_name",
                  "name": "instance_1",
                  "security_groups": [
                    "default"
                  ]
                }
              references:
                block_device.uuid: openstack_blockstorage_volume_v3.volume_1.id
              dependencies:
                openstack_blockstorage_volume_v3.volume_1: |-
                    {
                      "name": "volume_1",
                      "size": 1
                    }
            - name: multi-net
              manifest: |-
                {
                  "flavor_id": "3",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_pair": "my_key_pair_name",
                  "name": "multi-net",
                  "network": [
                    {
                      "name": "my_first_network"
                    },
                    {
                      "name": "my_second_network"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
              dependencies:
                openstack_compute_floatingip_associate_v2.myip: |-
                    {
                      "fixed_ip": "${openstack_compute_instance_v2.multi-net.network.1.fixed_ip_v4}",
                      "floating_ip": "${openstack_networking_floatingip_v2.myip.address}",
                      "instance_id": "${openstack_compute_instance_v2.multi-net.id}"
                    }
                openstack_networking_floatingip_v2.myip: |-
                    {
                      "pool": "my_pool"
                    }
            - name: personality
              manifest: |-
                {
                  "flavor_id": "3",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_pair": "my_key_pair_name",
                  "name": "personality",
                  "network": [
                    {
                      "name": "my_network"
                    }
                  ],
                  "personality": [
                    {
                      "content": "contents of file",
                      "file": "/path/to/file/on/instance.txt"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
            - name: multi-eph
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "local",
                      "source_type": "image",
                      "uuid": "\u003cimage-id\u003e"
                    },
                    {
                      "boot_index": -1,
                      "delete_on_termination": true,
                      "destination_type": "local",
                      "guest_format": "ext4",
                      "source_type": "blank",
                      "volume_size": 1
                    },
                    {
                      "boot_index": -1,
                      "delete_on_termination": true,
                      "destination_type": "local",
                      "source_type": "blank",
                      "volume_size": 1
                    }
                  ],
                  "flavor_id": "3",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_pair": "my_key_pair_name",
                  "name": "multi_eph",
                  "security_groups": [
                    "default"
                  ]
                }
            - name: vm-swap
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "local",
                      "source_type": "image",
                      "uuid": "\u003cimage-id\u003e"
                    },
                    {
                      "boot_index": -1,
                      "delete_on_termination": true,
                      "destination_type": "local",
                      "guest_format": "swap",
                      "source_type": "blank",
                      "volume_size": 4
                    }
                  ],
                  "flavor_id": "${openstack_compute_flavor_v2.flavor-with-swap.id}",
                  "key_pair": "my_key_pair_name",
                  "name": "vm_swap",
                  "security_groups": [
                    "default"
                  ]
                }
              references:
                flavor_id: openstack_compute_flavor_v2.flavor-with-swap.id
              dependencies:
                openstack_compute_flavor_v2.flavor-with-swap: |-
                    {
                      "disk": "20",
                      "name": "flavor-with-swap",
                      "ram": "8096",
                      "swap": "4096",
                      "vcpus": "2"
                    }
            - name: instance_1
              manifest: |-
                {
                  "flavor_id": "3",
                  "image_id": "ad091b52-742f-469e-8f3c-fd81cadf0743",
                  "key_pair": "my_key_pair_name",
                  "name": "basic",
                  "network": [
                    {
                      "name": "my_network"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ],
                  "user_data": "#cloud-config\nhostname: instance_1.example.com\nfqdn: instance_1.example.com"
                }
            - name: foo
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "local",
                      "source_type": "image",
                      "uuid": "\u003cimage uuid\u003e"
                    },
                    {
                      "boot_index": -1,
                      "delete_on_termination": true,
                      "destination_type": "local",
                      "source_type": "blank",
                      "volume_size": 1
                    },
                    {
                      "boot_index": -1,
                      "delete_on_termination": true,
                      "destination_type": "local",
                      "source_type": "blank",
                      "volume_size": 1
                    }
                  ],
                  "name": "terraform-test",
                  "security_groups": [
                    "default"
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "name": "terraform-test",
                  "security_groups": [
                    "${openstack_networking_secgroup_v2.sg_1.name}"
                  ]
                }
              dependencies:
                openstack_networking_secgroup_v2.sg_1: |-
                    {
                      "name": "sg_1"
                    }
            - name: instance_1
              manifest: |-
                {
                  "connection": [
                    {
                      "host": "${openstack_networking_port_v2.port_1.fixed_ip.0.ip_address}",
                      "private_key": "~/path/to/key",
                      "user": "root"
                    }
                  ],
                  "name": "instance_1",
                  "network": [
                    {
                      "port": "${openstack_networking_port_v2.port_1.id}"
                    }
                  ],
                  "provisioner": {
                    "remote-exec": [
                      {
                        "inline": [
                          "echo terraform executed \u003e /tmp/foo"
                        ]
                      }
                    ]
                  }
                }
              references:
                connection.host: openstack_networking_port_v2.port_1.fixed_ip.0.ip_address
                network.port: openstack_networking_port_v2.port_1.id
              dependencies:
                openstack_networking_port_v2.port_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "port_1",
                      "network_id": "0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d",
                      "security_group_ids": [
                        "2f02d20a-8dca-49b7-b26f-b6ce9fddaf4f",
                        "ca1e5ed7-dae8-4605-987b-fadaeeb30461"
                      ]
                    }
            - name: basic_instance
              manifest: |-
                {
                  "flavor_id": "\u003cflavor_id\u003e",
                  "image_id": "\u003cimage_id\u003e",
                  "key_pair": "\u003ckeyname\u003e",
                  "name": "basic",
                  "network": [
                    {
                      "name": "\u003cnetwork_name\u003e"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
            - name: boot-from-volume
              manifest: |-
                {
                  "flavor_id": "\u003cflavor_id",
                  "image_id": "\u003cimage_id\u003e",
                  "key_pair": "\u003ckeyname\u003e",
                  "name": "boot-from-volume",
                  "network": [
                    {
                      "name": "\u003cnetwork1\u003e"
                    },
                    {
                      "name": "\u003cnetwork2\u003e"
                    },
                    {
                      "fixed_ip_v4": "\u003cfixed_ip_v4\u003e",
                      "name": "\u003cnetwork1\u003e"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
            - name: instance_2
              manifest: |-
                {
                  "block_device": [
                    {
                      "boot_index": 0,
                      "delete_on_termination": true,
                      "destination_type": "volume",
                      "source_type": "image",
                      "uuid": "\u003cimage_id\u003e"
                    }
                  ],
                  "flavor_id": "\u003cflavor_id\u003e",
                  "image_id": "\u003cimage_id\u003e",
                  "key_pair": "\u003ckeyname\u003e",
                  "name": "instance_2",
                  "network": [
                    {
                      "name": "\u003cnetwork_name\u003e"
                    }
                  ],
                  "security_groups": [
                    "default"
                  ]
                }
              dependencies:
                openstack_blockstorage_volume_v3.volume_1: |-
                    {
                      "name": "\u003cvol_name\u003e",
                      "size": 1
                    }
                openstack_compute_volume_attach_v2.va_1: |-
                    {
                      "instance_id": "${openstack_compute_instance_v2.instance_2.id}",
                      "volume_id": "${openstack_blockstorage_volume_v3.volume_1.id}"
                    }
        argumentDocs:
            access_ip_v4: '- The first detected Fixed IPv4 address.'
            access_ip_v6: '- The first detected Fixed IPv6 address.'
            admin_pass: |-
                - (Optional) The administrative password to assign to the server.
                Changing this changes the root password on the existing server.
            all_metadata: |-
                - Contains all instance metadata, even metadata not set
                by Terraform.
            all_tags: |-
                - The collection of tags assigned on the instance, which have
                been explicitly and implicitly added.
            availability_zone: |-
                - (Optional) The availability zone in which to create
                the server. Conflicts with availability_zone_hints. Changing this creates
                a new server.
            availability_zone_hints: |-
                - (Optional) The availability zone in which to
                create the server. This argument is preferred to availability_zone, when
                scheduling the server on a
                particular
                host or node. Conflicts with availability_zone. Changing this creates a
                new server.
            block_device: |-
                - (Optional) Configuration of block devices. The block_device
                structure is documented below. Changing this creates a new server.
                You can specify multiple block devices which will create an instance with
                multiple disks. This configuration is very flexible, so please see the
                following reference
                for more information.
            block_device.boot_index: |-
                - (Optional) The boot index of the volume. It defaults to 0.
                Changing this creates a new server.
            block_device.delete_on_termination: |-
                - (Optional) Delete the volume / block device upon
                termination of the instance. Defaults to false. Changing this creates a
                new server.
            block_device.destination_type: |-
                - (Optional) The type that gets created. Possible values
                are "volume" and "local". Changing this creates a new server.
            block_device.device_type: |-
                - (Optional) The low-level device type that will be used. Most
                common thing is to leave this empty. Changing this creates a new server.
            block_device.disk_bus: |-
                - (Optional) The low-level disk bus that will be used. Most common
                thing is to leave this empty. Changing this creates a new server.
            block_device.guest_format: |-
                - (Optional) Specifies the guest server disk file system format,
                such as ext2, ext3, ext4, xfs or swap. Swap block device mappings
                have the following restrictions: source_type must be blank and destination_type
                must be local and only one swap disk per server and the size of the swap disk
                must be less than or equal to the swap size of the flavor. Changing this
                creates a new server.
            block_device.multiattach: |-
                - (Optional) Enable the attachment of multiattach-capable
                volumes.
            block_device.source_type: |-
                - (Required) The source type of the device. Must be one of
                "blank", "image", "volume", or "snapshot". Changing this creates a new
                server.
            block_device.uuid: |-
                - (Required unless source_type is set to "blank" ) The UUID of
                the image, volume, or snapshot. Changing this creates a new server.
            block_device.volume_size: |-
                - The size of the volume to create (in gigabytes). Required
                in the following combinations: source=image and destination=volume,
                source=blank and destination=local, and source=blank and destination=volume.
                Changing this creates a new server.
            block_device.volume_type: |-
                - (Optional) The volume type that will be used, for example SSD
                or HDD storage. The available options depend on how your specific OpenStack
                cloud is configured and what classes of storage are provided. Changing this
                creates a new server.
            config_drive: |-
                - (Optional) Whether to use the config_drive feature to
                configure the instance. Changing this creates a new server.
            connection: 'information:'
            created: '- The creation time of the instance.'
            flavor_id: |-
                - (Optional; Required if flavor_name is empty) The flavor ID of
                the desired flavor for the server. Changing this resizes the existing server.
            flavor_name: |-
                - (Optional; Required if flavor_id is empty) The name of the
                desired flavor for the server. Changing this resizes the existing server.
            force_delete: |-
                - (Optional) Whether to force the OpenStack instance to be
                forcefully deleted. This is useful for environments that have reclaim / soft
                deletion enabled.
            image_id: |-
                - (Optional; Required if image_name is empty and not booting
                from a volume. Do not specify if booting from a volume.) The image ID of
                the desired image for the server. Changing this rebuilds the existing
                server.
            image_name: |-
                - (Optional; Required if image_id is empty and not booting
                from a volume. Do not specify if booting from a volume.) The name of the
                desired image for the server. Changing this rebuilds the existing server.
            key_pair: |-
                - (Optional) The name of a key pair to put on the server. The key
                pair must already be created and associated with the tenant's account.
                Changing this creates a new server.
            metadata: |-
                - (Optional) Metadata key/value pairs to make available from
                within the instance. Changing this updates the existing server metadata.
            name: '- (Required) A unique name for the resource.'
            network: |-
                - (Optional) An array of one or more networks to attach to the
                instance. The network object structure is documented below. Changing this
                creates a new server.
            network.access_network: |-
                - (Optional) Specifies if this network should be used for
                provisioning access. Accepts true or false. Defaults to false.
            network.fixed_ip_v4: |-
                - (Optional) Specifies a fixed IPv4 address to be used on this
                network. Changing this creates a new server.
            network.name: |-
                - (Required unless uuid or port is provided) The human-readable
                name of the network. Changing this creates a new server.
            network.port: |-
                - (Required unless uuid or name is provided) The port UUID of a
                network to attach to the server. Changing this creates a new server.
            network.uuid: |-
                - (Required unless port  or name is provided) The network UUID to
                attach to the server. Changing this creates a new server.
            network/fixed_ip_v4: |-
                - The Fixed IPv4 address of the Instance on that
                network.
            network/fixed_ip_v6: |-
                - The Fixed IPv6 address of the Instance on that
                network.
            network/mac: '- The MAC address of the NIC on that network.'
            network/name: '- See Argument Reference above.'
            network/port: '- See Argument Reference above.'
            network/uuid: '- See Argument Reference above.'
            network_mode: |-
                - (Optional) Special string for network option to create
                the server. network_mode can be "auto" or "none".
                Please see the following reference for more information. Conflicts with network.
            openstack_compute_interface_attach_v2: |-
                resource,
                you still need to make sure one of the above points is satisfied. An instance
                cannot be created without a valid network configuration even if you intend to
                use openstack_compute_interface_attach_v2 after the instance has been created.
            personality: |-
                - (Optional) Customize the personality of an instance by
                defining one or more files and their contents. The personality structure
                is described below. Changing this rebuilds the existing server.
            personality.content: '- (Required) The contents of the file. Limited to 255 bytes.'
            personality.file: '- (Required) The absolute path of the destination file.'
            power_state: |-
                - (Optional) Provide the VM state. Only 'active', 'shutoff'
                and 'shelved_offloaded' are supported values.
                Note: If the initial power_state is the shutoff
                the VM will be stopped immediately after build and the provisioners like
                remote-exec or files are not supported.
            region: |-
                - (Optional) The region in which to create the server instance. If
                omitted, the region argument of the provider is used. Changing this
                creates a new server.
            scheduler_hints: |-
                - (Optional) Provide the Nova scheduler with hints on how
                the instance should be launched. The available hints are described below.
            scheduler_hints.additional_properties: |-
                - (Optional) Arbitrary key/value pairs of additional
                properties to pass to the scheduler.
            scheduler_hints.build_near_host_ip: |-
                - (Optional) An IP Address in CIDR form. The instance
                will be placed on a compute node that is in the same subnet.
            scheduler_hints.different_cell: '- (Optional) The names of cells where not to build the instance.'
            scheduler_hints.different_host: |-
                - (Optional) A list of instance UUIDs. The instance will
                be scheduled on a different host than all other instances.
            scheduler_hints.group: |-
                - (Optional) A UUID of a Server Group. The instance will be placed
                into that group.
            scheduler_hints.query: |-
                - (Optional) A conditional query that a compute node must pass in
                order to host an instance. The query must use the JsonFilter syntax
                which is described
                here.
                At this time, only simple queries are supported. Compound queries using
                and, or, or not are not supported. An example of a simple query is:
            scheduler_hints.same_host: |-
                - (Optional) A list of instance UUIDs. The instance will be
                scheduled on the same host of those specified.
            scheduler_hints.target_cell: '- (Optional) The name of a cell to host the instance.'
            security_groups: |-
                - (Optional) An array of one or more security group names
                to associate with the server. Changing this results in adding/removing
                security groups from the existing server. Note: When attaching the
                instance to networks using Ports, place the security groups on the Port
                and not the instance. Note: Names should be used and not ids, as ids
                trigger unnecessary updates.
            stop_before_destroy: |-
                - (Optional) Whether to try stop instance gracefully
                before destroying it, thus giving chance for guest OS daemons to stop correctly.
                If instance doesn't stop within timeout, it will be destroyed anyway.
            tags: |-
                - (Optional) A set of string tags for the instance. Changing this
                updates the existing instance tags.
            updated: '- The time when the instance was last updated.'
            user_data: |-
                - (Optional) The user data to provide when launching the instance.
                Changing this creates a new server.
            vendor_options: |-
                - (Optional) Map of additional vendor-specific options.
                Supported options are described below.
            vendor_options.detach_ports_before_destroy: |-
                - (Optional) Whether to try to detach all attached
                ports to the vm before destroying it to make sure the port state is correct
                after the vm destruction. This is helpful when the port is not deleted.
            vendor_options.ignore_resize_confirmation: |-
                - (Optional) Boolean to control whether
                to ignore manual confirmation of the instance resizing. This can be helpful
                to work with some OpenStack clouds which automatically confirm resizing of
                instances after some timeout.
        importStatements: []
    openstack_compute_interface_attach_v2:
        subCategory: Compute / Nova
        description: Attaches a Network Interface to an Instance.
        name: openstack_compute_interface_attach_v2
        title: openstack_compute_interface_attach_v2
        examples:
            - name: ai_1
              manifest: |-
                {
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}",
                  "network_id": "${openstack_networking_port_v2.network_1.id}"
                }
              references:
                instance_id: openstack_compute_instance_v2.instance_1.id
                network_id: openstack_networking_port_v2.network_1.id
              dependencies:
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
            - name: ai_1
              manifest: |-
                {
                  "fixed_ip": "10.0.10.10",
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}",
                  "network_id": "${openstack_networking_port_v2.network_1.id}"
                }
              references:
                instance_id: openstack_compute_instance_v2.instance_1.id
                network_id: openstack_networking_port_v2.network_1.id
              dependencies:
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
            - name: ai_1
              manifest: |-
                {
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}",
                  "port_id": "${openstack_networking_port_v2.port_1.id}"
                }
              references:
                instance_id: openstack_compute_instance_v2.instance_1.id
                port_id: openstack_networking_port_v2.port_1.id
              dependencies:
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_port_v2.port_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "port_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
            - name: attachments
              manifest: |-
                {
                  "count": 2,
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}",
                  "port_id": "${openstack_networking_port_v2.ports[count.index].id}"
                }
              references:
                instance_id: openstack_compute_instance_v2.instance_1.id
              dependencies:
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_port_v2.ports: |-
                    {
                      "admin_state_up": "true",
                      "count": 2,
                      "name": "${format(\"port-%02d\", count.index + 1)}",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
            - name: ai_1
              manifest: |-
                {
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}",
                  "port_id": "${openstack_networking_port_v2.ports[0].id}"
                }
              references:
                instance_id: openstack_compute_instance_v2.instance_1.id
                port_id: openstack_networking_port_v2.ports[0].id
              dependencies:
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_port_v2.ports: |-
                    {
                      "admin_state_up": "true",
                      "count": 2,
                      "name": "${format(\"port-%02d\", count.index + 1)}",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
            - name: ai_2
              manifest: |-
                {
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}",
                  "port_id": "${openstack_networking_port_v2.ports[1].id}"
                }
              references:
                instance_id: openstack_compute_instance_v2.instance_1.id
                port_id: openstack_networking_port_v2.ports[1].id
              dependencies:
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_port_v2.ports: |-
                    {
                      "admin_state_up": "true",
                      "count": 2,
                      "name": "${format(\"port-%02d\", count.index + 1)}",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
        argumentDocs:
            fixed_ip: |-
                - (Optional) An IP address to assosciate with the port.
                NOTE: This option cannot be used with port_id. You must specifiy a network_id. The IP address must lie in a range on the supplied network.
            instance_id: '- (Required) The ID of the Instance to attach the Port or Network to.'
            network_id: |-
                - (Optional) The ID of the Network to attach to an Instance. A port will be created automatically.
                NOTE: This option and port_id are mutually exclusive.
            port_id: |-
                - (Optional) The ID of the Port to attach to an Instance.
                NOTE: This option and network_id are mutually exclusive.
            region: |-
                - (Optional) The region in which to create the interface attachment.
                If omitted, the region argument of the provider is used. Changing this
                creates a new attachment.
        importStatements: []
    openstack_compute_keypair_v2:
        subCategory: Compute / Nova
        description: Manages a V2 keypair resource within OpenStack.
        name: openstack_compute_keypair_v2
        title: openstack_compute_keypair_v2
        examples:
            - name: test-keypair
              manifest: |-
                {
                  "name": "my-keypair",
                  "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDAjpC1hwiOCCmKEWxJ4qzTTsJbKzndLotBCz5PcwtUnflmU+gHJtWMZKpuEGVi29h0A/+ydKek1O18k10Ff+4tyFjiHDQAnOfgWf7+b1yK+qDip3X1C0UPMbwHlTfSGWLGZqd9LvEFx9k3h/M+VtMvwR1lJ9LUyTAImnNjWG7TaIPmui30HvM2UiFEmqkr4ijq45MyX2+fLIePLRIF61p4whjHAQYufqyno3BS48icQb4p6iVEZPo4AE2o9oIyQvj2mx4dk5Y8CgSETOZTYDOR3rU2fZTRDRgPJDH9FWvQjF5tA0p3d9CoWWd2s6GKKbfoUIi8R/Db1BSPJwkqB"
                }
            - name: test-keypair
              manifest: |-
                {
                  "name": "my-keypair"
                }
        argumentDocs:
            fingerprint: '- The fingerprint of the public key.'
            name: |-
                - (Required) A unique name for the keypair. Changing this creates a new
                keypair.
            private_key: '- The generated private key when no public key is specified.'
            public_key: |-
                - (Optional) A pregenerated OpenSSH-formatted public key.
                Changing this creates a new keypair. If a public key is not specified, then
                a public/private key pair will be automatically generated. If a pair is
                created, then destroying this resource means you will lose access to that
                keypair forever.
            region: |-
                - (Optional) The region in which to obtain the V2 Compute client.
                Keypairs are associated with accounts, but a Compute client is needed to
                create one. If omitted, the region argument of the provider is used.
                Changing this creates a new keypair.
            user_id: |-
                - (Optional) This allows administrative users to operate key-pairs
                of specified user ID. For this feature your need to have openstack microversion
                2.10 (Liberty) or later.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_compute_quotaset_v2:
        subCategory: Compute / Nova
        description: Manages a V2 compute quotaset resource within OpenStack.
        name: openstack_compute_quotaset_v2
        title: openstack_compute_quotaset_v2
        examples:
            - name: quotaset_1
              manifest: |-
                {
                  "cores": 32,
                  "instances": 20,
                  "key_pairs": 10,
                  "project_id": "${openstack_identity_project_v3.project_1.id}",
                  "ram": 40960,
                  "server_group_members": 8,
                  "server_groups": 4
                }
              references:
                project_id: openstack_identity_project_v3.project_1.id
              dependencies:
                openstack_identity_project_v3.project_1: |-
                    {
                      "name": "${project_1}"
                    }
        argumentDocs:
            cores: |-
                - (Optional) Quota value for cores.
                Changing this updates the existing quotaset.
            fixed_ips: |-
                - (Optional) Quota value for fixed IPs.
                Changing this updates the existing quotaset.
            floating_ips: |-
                - (Optional) Quota value for floating IPs.
                Changing this updates the existing quotaset.
            injected_file_content_bytes: |-
                - (Optional) Quota value for content bytes
                of injected files. Changing this updates the existing quotaset.
            injected_file_path_bytes: |-
                - (Optional) Quota value for path bytes of
                injected files. Changing this updates the existing quotaset.
            injected_files: |-
                - (Optional) Quota value for injected files.
                Changing this updates the existing quotaset.
            instances: |-
                - (Optional) Quota value for instances.
                Changing this updates the existing quotaset.
            key_pairs: |-
                - (Optional) Quota value for key pairs.
                Changing this updates the existing quotaset.
            metadata_items: |-
                - (Optional) Quota value for metadata items.
                Changing this updates the existing quotaset.
            project_id: |-
                - (Required) ID of the project to manage quotas.
                Changing this creates a new quotaset.
            ram: |-
                - (Optional) Quota value for RAM.
                Changing this updates the existing quotaset.
            region: |-
                - (Optional) The region in which to create the volume. If
                omitted, the region argument of the provider is used. Changing this
                creates a new quotaset.
            security_group_rules: |-
                - (Optional) Quota value for security group rules.
                Changing this updates the existing quotaset.
            security_groups: |-
                - (Optional) Quota value for security groups.
                Changing this updates the existing quotaset.
            server_group_members: |-
                - (Optional) Quota value for server groups members.
                Changing this updates the existing quotaset.
            server_groups: |-
                - (Optional) Quota value for server groups.
                Changing this updates the existing quotaset.
        importStatements: []
    openstack_compute_secgroup_v2:
        subCategory: Compute / Nova
        description: Manages a V2 security group resource within OpenStack.
        name: openstack_compute_secgroup_v2
        title: openstack_compute_secgroup_v2
        examples:
            - name: secgroup_1
              manifest: |-
                {
                  "description": "my security group",
                  "name": "my_secgroup",
                  "rule": [
                    {
                      "cidr": "0.0.0.0/0",
                      "from_port": 22,
                      "ip_protocol": "tcp",
                      "to_port": 22
                    },
                    {
                      "cidr": "0.0.0.0/0",
                      "from_port": 80,
                      "ip_protocol": "tcp",
                      "to_port": 80
                    }
                  ]
                }
        argumentDocs:
            description: |-
                - (Required) A description for the security group. Changing this
                updates the description of an existing security group.
            name: |-
                - (Required) A unique name for the security group. Changing this
                updates the name of an existing security group.
            region: |-
                - (Optional) The region in which to obtain the V2 Compute client.
                A Compute client is needed to create a security group. If omitted, the
                region argument of the provider is used. Changing this creates a new
                security group.
            rule: |-
                - (Optional) A rule describing how the security group operates. The
                rule object structure is documented below. Changing this updates the
                security group rules. As shown in the example above, multiple rule blocks
                may be used.
            rule.cidr: |-
                - (Optional) Required if from_group_id or self is empty. The IP range
                that will be the source of network traffic to the security group. Use 0.0.0.0/0
                to allow all IP addresses. Changing this creates a new security group rule. Cannot
                be combined with from_group_id or self.
            rule.from_group_id: |-
                - (Optional) Required if cidr or self is empty. The ID of a
                group from which to forward traffic to the parent group. Changing this creates a
                new security group rule. Cannot be combined with cidr or self.
            rule.from_port: |-
                - (Required) An integer representing the lower bound of the port
                range to open. Changing this creates a new security group rule.
            rule.ip_protocol: |-
                - (Required) The protocol type that will be allowed. Changing
                this creates a new security group rule.
            rule.self: |-
                - (Optional) Required if cidr and from_group_id is empty. If true,
                the security group itself will be added as a source to this ingress rule. Cannot
                be combined with cidr or from_group_id.
            rule.to_port: |-
                - (Required) An integer representing the upper bound of the port
                range to open. Changing this creates a new security group rule.
        importStatements: []
    openstack_compute_servergroup_v2:
        subCategory: Compute / Nova
        description: Manages a V2 Server Group resource within OpenStack.
        name: openstack_compute_servergroup_v2
        title: openstack_compute_servergroup_v2
        examples:
            - name: test-sg
              manifest: |-
                {
                  "name": "my-sg",
                  "policies": [
                    "anti-affinity"
                  ]
                }
            - name: test-sg
              manifest: |-
                {
                  "name": "my-sg",
                  "policies": [
                    "anti-affinity"
                  ],
                  "rules": [
                    {
                      "max_server_per_host": 3
                    }
                  ]
                }
        argumentDocs:
            affinity: |-
                - All instances/servers launched in this group will be hosted on
                the same compute node.
            anti-affinity: |-
                - All instances/servers launched in this group will be
                hosted on different compute nodes.
            members: '- The instances that are part of this server group.'
            name: |-
                - (Required) A unique name for the server group. Changing this creates
                a new server group.
            policies: |-
                - (Optional) A list of exactly one policy name to associate with
                the server group. See the Policies section for more information. Changing this
                creates a new server group.
            region: |-
                - (Optional) The region in which to obtain the V2 Compute client.
                If omitted, the region argument of the provider is used. Changing
                this creates a new server group.
            rules: |-
                - (Optional) The rules which are applied to specified policy. Currently,
                only the max_server_per_host rule is supported for the anti-affinity policy.
            soft-affinity: |-
                - All instances/servers launched in this group will be hosted
                on the same compute node if possible, but if not possible they
                still will be scheduled instead of failure. To use this policy your
                OpenStack environment should support Compute service API 2.15 or above.
            soft-anti-affinity: |-
                - All instances/servers launched in this group will be
                hosted on different compute nodes if possible, but if not possible they
                still will be scheduled instead of failure. To use this policy your
                OpenStack environment should support Compute service API 2.15 or above.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_compute_volume_attach_v2:
        subCategory: Compute / Nova
        description: Attaches a Block Storage Volume to an Instance.
        name: openstack_compute_volume_attach_v2
        title: openstack_compute_volume_attach_v2
        examples:
            - name: va_1
              manifest: |-
                {
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}",
                  "volume_id": "${openstack_blockstorage_volume_v3.volume_1.id}"
                }
              references:
                instance_id: openstack_compute_instance_v2.instance_1.id
                volume_id: openstack_blockstorage_volume_v3.volume_1.id
              dependencies:
                openstack_blockstorage_volume_v3.volume_1: |-
                    {
                      "name": "volume_1",
                      "size": 1
                    }
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
            - name: attachments
              manifest: |-
                {
                  "count": 2,
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}",
                  "volume_id": "${openstack_blockstorage_volume_v3.volumes[count.index].id}"
                }
              references:
                instance_id: openstack_compute_instance_v2.instance_1.id
              dependencies:
                openstack_blockstorage_volume_v3.volumes: |-
                    {
                      "count": 2,
                      "name": "${format(\"vol-%02d\", count.index + 1)}",
                      "size": 1
                    }
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
            - name: attach_1
              manifest: |-
                {
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}",
                  "volume_id": "${openstack_blockstorage_volume_v3.volumes.0.id}"
                }
              references:
                instance_id: openstack_compute_instance_v2.instance_1.id
                volume_id: openstack_blockstorage_volume_v3.volumes.0.id
              dependencies:
                openstack_blockstorage_volume_v3.volumes: |-
                    {
                      "count": 2,
                      "name": "${format(\"vol-%02d\", count.index + 1)}",
                      "size": 1
                    }
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
            - name: attach_2
              manifest: |-
                {
                  "depends_on": [
                    "openstack_compute_volume_attach_v2.attach_1"
                  ],
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}",
                  "volume_id": "${openstack_blockstorage_volume_v3.volumes.1.id}"
                }
              references:
                instance_id: openstack_compute_instance_v2.instance_1.id
                volume_id: openstack_blockstorage_volume_v3.volumes.1.id
              dependencies:
                openstack_blockstorage_volume_v3.volumes: |-
                    {
                      "count": 2,
                      "name": "${format(\"vol-%02d\", count.index + 1)}",
                      "size": 1
                    }
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
            - name: va_1
              manifest: |-
                {
                  "instance_id": "${openstack_compute_instance_v2.instance_1.id}",
                  "multiattach": true,
                  "volume_id": "${openstack_blockstorage_volume_v3.volume_1.id}"
                }
              references:
                instance_id: openstack_compute_instance_v2.instance_1.id
                volume_id: openstack_blockstorage_volume_v3.volume_1.id
              dependencies:
                openstack_blockstorage_volume_v3.volume_1: |-
                    {
                      "multiattach": true,
                      "name": "volume_1",
                      "size": 1
                    }
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
                openstack_compute_instance_v2.instance_2: |-
                    {
                      "name": "instance_2",
                      "security_groups": [
                        "default"
                      ]
                    }
            - name: va_2
              manifest: |-
                {
                  "depends_on": [
                    "openstack_compute_volume_attach_v2.va_1"
                  ],
                  "instance_id": "${openstack_compute_instance_v2.instance_2.id}",
                  "multiattach": true,
                  "volume_id": "${openstack_blockstorage_volume_v3.volume_1.id}"
                }
              references:
                instance_id: openstack_compute_instance_v2.instance_2.id
                volume_id: openstack_blockstorage_volume_v3.volume_1.id
              dependencies:
                openstack_blockstorage_volume_v3.volume_1: |-
                    {
                      "multiattach": true,
                      "name": "volume_1",
                      "size": 1
                    }
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "security_groups": [
                        "default"
                      ]
                    }
                openstack_compute_instance_v2.instance_2: |-
                    {
                      "name": "instance_2",
                      "security_groups": [
                        "default"
                      ]
                    }
        argumentDocs:
            device: |-
                - (Optional) The device of the volume attachment (ex: /dev/vdc).
                NOTE: Being able to specify a device is dependent upon the hypervisor in
                use. There is a chance that the device specified in Terraform will not be
                the same device the hypervisor chose. If this happens, Terraform will wish
                to update the device upon subsequent applying which will cause the volume
                to be detached and reattached indefinitely. Please use with caution.
            instance_id: '- (Required) The ID of the Instance to attach the Volume to.'
            multiattach: '- (Optional) Enable attachment of multiattach-capable volumes.'
            region: |-
                - (Optional) The region in which to obtain the V2 Compute client.
                A Compute client is needed to create a volume attachment. If omitted, the
                region argument of the provider is used. Changing this creates a
                new volume attachment.
            vendor_options: |-
                - (Optional) Map of additional vendor-specific options.
                Supported options are described below.
            vendor_options.ignore_volume_confirmation: |-
                - (Optional) Boolean to control whether
                to ignore volume status confirmation of the attached volume. This can be helpful
                to work with some OpenStack clouds which don't have the Block Storage V3 API available.
            volume_id: '- (Required) The ID of the Volume to attach to an Instance.'
        importStatements: []
    openstack_containerinfra_cluster_v1:
        subCategory: Container Infra / Magnum
        description: Manages a V1 Magnum node group resource within OpenStack.
        name: openstack_containerinfra_cluster_v1
        title: openstack_containerinfra_cluster_v1
        argumentDocs:
            cluster_id: |-
                - (Required) The UUID of the V1 Container Infra cluster.
                Changing this creates a new node group.
            created_at: '- The time at which node group was created.'
            docker_volume_size: |-
                - (Optional) The size (in GB) of the Docker volume.
                Changing this creates a new node group.
            flavor_id: |-
                - (Optional) The flavor for the nodes of the node group. Can be set
                via the OS_MAGNUM_FLAVOR environment variable. Changing this creates a new
                node group.
            image_id: |-
                - (Required) The reference to an image that is used for nodes of the
                node group. Can be set via the OS_MAGNUM_IMAGE environment variable.
                Changing this updates the image attribute of the existing node group.
            labels: |-
                - (Optional) The list of key value pairs representing additional
                properties of the node group. Changing this creates a new node group.
            max_node_count: |-
                - (Optional) The maximum number of nodes for the node group.
                Changing this update the maximum number of nodes of the node group.
            merge_labels: |-
                - (Optional) Indicates whether the provided labels should be
                merged with cluster labels. Changing this creates a new nodegroup.
            min_node_count: |-
                - (Optional) The minimum number of nodes for the node group.
                Changing this update the minimum number of nodes of the node group.
            name: |-
                - (Required) The name of the node group. Changing this creates a new
                node group.
            node_count: |-
                - (Optional) The number of nodes for the node group. Changing
                this update the number of nodes of the node group.
            project_id: |-
                - (Optional) The project of the node group. Required if admin
                wants to create a cluster in another project. Changing this creates a new
                node group.
            region: |-
                - (Optional) The region in which to obtain the V1 Container Infra
                client. A Container Infra client is needed to create a cluster. If omitted,
                the region argument of the provider is used. Changing this creates a new
                node group.
            role: |-
                - (Optional) The role of nodes in the node group. Changing this
                creates a new node group.
            updated_at: '- The time at which node group was created.'
        importStatements: []
    openstack_containerinfra_clustertemplate_v1:
        subCategory: Container Infra / Magnum
        description: Manages a V1 Magnum cluster template resource within OpenStack.
        name: openstack_containerinfra_clustertemplate_v1
        title: openstack_containerinfra_clustertemplate_v1
        examples:
            - name: clustertemplate_1
              manifest: |-
                {
                  "coe": "kubernetes",
                  "dns_nameserver": "1.1.1.1",
                  "docker_storage_driver": "devicemapper",
                  "docker_volume_size": 10,
                  "flavor": "m1.small",
                  "floating_ip_enabled": false,
                  "image": "Fedora-Atomic-27",
                  "labels": {
                    "influx_grafana_dashboard_enabled": "true",
                    "kube_dashboard_enabled": "true",
                    "kube_tag": "1.11.1",
                    "prometheus_monitoring": "true"
                  },
                  "master_flavor": "m1.medium",
                  "master_lb_enabled": true,
                  "name": "clustertemplate_1",
                  "network_driver": "flannel",
                  "server_type": "vm",
                  "volume_driver": "cinder"
                }
        argumentDocs:
            apiserver_port: |-
                - (Optional) The API server port for the Container
                Orchestration Engine for this cluster template. Changing this updates the
                API server port of the existing cluster template.
            cluster_distro: |-
                - (Optional) The distro for the cluster (fedora-atomic,
                coreos, etc.). Changing this updates the cluster distro of the existing
                cluster template.
            coe: |-
                - (Required) The Container Orchestration Engine for this cluster
                template. Changing this updates the engine of the existing cluster
                template.
            created_at: '- The time at which cluster template was created.'
            dns_nameserver: |-
                - (Optional) Address of the DNS nameserver that is used in
                nodes of the cluster. Changing this updates the DNS nameserver of the
                existing cluster template.
            docker_storage_driver: |-
                - (Optional) Docker storage driver. Changing this
                updates the Docker storage driver of the existing cluster template.
            docker_volume_size: |-
                - (Optional) The size (in GB) of the Docker volume.
                Changing this updates the Docker volume size of the existing cluster
                template.
            external_network_id: |-
                - (Optional) The ID of the external network that will
                be used for the cluster. Changing this updates the external network ID of
                the existing cluster template.
            fixed_network: |-
                - (Optional) The fixed network that will be attached to the
                cluster. Changing this updates the fixed network of the existing cluster
                template.
            fixed_subnet: |-
                - (Optional) The fixed subnet that will be attached to the
                cluster. Changing this updates the fixed subnet of the existing cluster
                template.
            flavor: |-
                - (Optional) The flavor for the nodes of the cluster. Can be set via
                the OS_MAGNUM_FLAVOR environment variable. Changing this updates the
                flavor of the existing cluster template.
            floating_ip_enabled: |-
                - (Optional) Indicates whether created cluster should
                create floating IP for every node or not. Changing this updates the
                floating IP enabled attribute of the existing cluster template.
            hidden: |-
                - (Optional) Indicates whether the ClusterTemplate is hidden or not.
                Changing this updates the hidden attribute of the existing cluster
                template.
            http_proxy: |-
                - (Optional) The address of a proxy for receiving all HTTP
                requests and relay them. Changing this updates the HTTP proxy address of
                the existing cluster template.
            https_proxy: |-
                - (Optional) The address of a proxy for receiving all HTTPS
                requests and relay them. Changing this updates the HTTPS proxy address of
                the existing cluster template.
            image: |-
                - (Required) The reference to an image that is used for nodes of the
                cluster. Can be set via the OS_MAGNUM_IMAGE environment variable.
                Changing this updates the image attribute of the existing cluster template.
            insecure_registry: |-
                - (Optional) The insecure registry URL for the cluster
                template. Changing this updates the insecure registry attribute of the
                existing cluster template.
            keypair_id: |-
                - (Optional) The name of the Compute service SSH keypair.
                Changing this updates the keypair of the existing cluster template.
            labels: |-
                - (Optional) The list of key value pairs representing additional
                properties of the cluster template. Changing this updates the labels of the
                existing cluster template.
            links: '- A list containing associated cluster template links.'
            master_flavor: |-
                - (Optional) The flavor for the master nodes. Can be set via
                the OS_MAGNUM_MASTER_FLAVOR environment variable. Changing this updates
                the master flavor of the existing cluster template.
            master_lb_enabled: |-
                - (Optional) Indicates whether created cluster should
                has a loadbalancer for master nodes or not. Changing this updates the
                attribute of the existing cluster template.
            name: |-
                - (Required) The name of the cluster template. Changing this updates
                the name of the existing cluster template.
            network_driver: |-
                - (Optional) The name of the driver for the container
                network. Changing this updates the network driver of the existing cluster
                template.
            no_proxy: |-
                - (Optional) A comma-separated list of IP addresses that shouldn't
                be used in the cluster. Changing this updates the no proxy list of the
                existing cluster template.
            project_id: |-
                - (Optional) The project of the cluster template. Required if
                admin wants to create a cluster template in another project. Changing this
                creates a new cluster template.
            public: |-
                - (Optional) Indicates whether cluster template should be public.
                Changing this updates the public attribute of the existing cluster
                template.
            region: |-
                - (Optional) The region in which to obtain the V1 Container Infra
                client. A Container Infra client is needed to create a cluster template. If
                omitted,the region argument of the provider is used. Changing this
                creates a new cluster template.
            registry_enabled: |-
                - (Optional) Indicates whether Docker registry is enabled
                in the cluster. Changing this updates the registry enabled attribute of the
                existing cluster template.
            server_type: |-
                - (Optional) The server type for the cluster template. Changing
                this updates the server type of the existing cluster template.
            tls_disabled: |-
                - (Optional) Indicates whether the TLS should be disabled in
                the cluster. Changing this updates the attribute of the existing cluster.
            updated_at: '- The time at which cluster template was created.'
            user_id: |-
                - (Optional) The user of the cluster template. Required if admin
                wants to create a cluster template for another user. Changing this creates
                a new cluster template.
            volume_driver: |-
                - (Optional) The name of the driver that is used for the
                volumes of the cluster nodes. Changing this updates the volume driver of
                the existing cluster template.
        importStatements: []
    openstack_db_configuration_v1:
        subCategory: Databases / Trove
        description: Manages a V1 DB configuration resource within OpenStack.
        name: openstack_db_configuration_v1
        title: openstack_db_configuration_v1
        examples:
            - name: test
              manifest: |-
                {
                  "configuration": [
                    {
                      "name": "max_connections",
                      "value": 200
                    }
                  ],
                  "datastore": [
                    {
                      "type": "mysql",
                      "version": "mysql-5.7"
                    }
                  ],
                  "description": "description",
                  "name": "test"
                }
        argumentDocs:
            configuration: '- (Optional) An array of configuration parameter name and value. Can be specified multiple times. The configuration object structure is documented below.'
            configuration.name: '- (Optional) Configuration parameter name. Changing this creates a new resource.'
            configuration.string_type: '- (Optional) Whether or not to store configuration parameter value as string. Changing this creates a new resource. See the below note for more information.'
            configuration.value: '- (Optional) Configuration parameter value. Changing this creates a new resource.'
            configuration/name: '- See Argument Reference above.'
            configuration/string_type: '- See Argument Reference above.'
            configuration/value: '- See Argument Reference above.'
            datastore: |-
                - (Required) An array of database engine type and version. The datastore
                object structure is documented below. Changing this creates resource.
            datastore.type: '- (Required) Database engine type to be used with this configuration. Changing this creates a new resource.'
            datastore.version: '- (Required) Version of database engine type to be used with this configuration. Changing this creates a new resource.'
            datastore/type: '- See Argument Reference above.'
            datastore/version: '- See Argument Reference above.'
            description: '- (Optional) Description of the resource.'
            name: '- (Required) A unique name for the resource.'
            region: |-
                - (Required) The region in which to create the db instance. Changing this
                creates a new instance.
        importStatements: []
    openstack_db_database_v1:
        subCategory: Databases / Trove
        description: Manages a V1 database resource within OpenStack.
        name: openstack_db_database_v1
        title: openstack_db_database_v1
        examples:
            - name: mydb
              manifest: |-
                {
                  "instance_id": "${openstack_db_instance_v1.basic.id}",
                  "name": "mydb"
                }
              references:
                instance_id: openstack_db_instance_v1.basic.id
        argumentDocs:
            instance_id: '- (Required) The ID for the database instance.'
            name: '- (Required) A unique name for the resource.'
            region: '- Openstack region resource is created in.'
        importStatements: []
    openstack_db_instance_v1:
        subCategory: Databases / Trove
        description: Manages a V1 DB instance resource within OpenStack.
        name: openstack_db_instance_v1
        title: openstack_db_instance_v1
        examples:
            - name: test
              manifest: |-
                {
                  "datastore": [
                    {
                      "type": "mysql",
                      "version": "mysql-5.7"
                    }
                  ],
                  "flavor_id": "31792d21-c355-4587-9290-56c1ed0ca376",
                  "name": "test",
                  "network": [
                    {
                      "uuid": "c0612505-caf2-4fb0-b7cb-56a0240a2b12"
                    }
                  ],
                  "region": "region-test",
                  "size": 8
                }
        argumentDocs:
            addresses: '- A list of IP addresses assigned to the instance.'
            configuration_id: |-
                - (Optional) Configuration ID to be attached to the instance. Database instance
                will be rebooted when configuration is detached.
            database: |-
                - (Optional) An array of database name, charset and collate. The database
                object structure is documented below.
            database.charset: |-
                - (Optional) Database character set. Changing this creates a
                new instance.
            database.collate: '- (Optional) Database collation. Changing this creates a new instance.'
            database.name: |-
                - (Optional) Database to be created on new instance. Changing this creates a
                new instance.
            database/charset: '- See Argument Reference above.'
            database/collate: '- See Argument Reference above.'
            database/name: '- See Argument Reference above.'
            datastore: |-
                - (Required) An array of database engine type and version. The datastore
                object structure is documented below. Changing this creates a new instance.
            datastore.type: |-
                - (Required) Database engine type to be used in new instance. Changing this
                creates a new instance.
            datastore.version: |-
                - (Required) Version of database engine type to be used in new instance.
                Changing this creates a new instance.
            datastore/type: '- See Argument Reference above.'
            datastore/version: '- See Argument Reference above.'
            flavor_id: |-
                - (Required) The flavor ID of the desired flavor for the instance.
                Changing this creates new instance.
            name: '- (Required) A unique name for the resource.'
            network: |-
                - (Optional) An array of one or more networks to attach to the
                instance. The network object structure is documented below. Changing this
                creates a new instance.
            network.fixed_ip_v4: |-
                - (Optional) Specifies a fixed IPv4 address to be used on this
                network. Changing this creates a new instance.
            network.fixed_ip_v6: |-
                - (Optional) Specifies a fixed IPv6 address to be used on this
                network. Changing this creates a new instance.
            network.port: |-
                - (Required unless uuid is provided) The port UUID of a
                network to attach to the instance. Changing this creates a new instance.
            network.uuid: |-
                - (Required unless port is provided) The network UUID to
                attach to the instance. Changing this creates a new instance.
            network/fixed_ip_v4: |-
                - The Fixed IPv4 address of the Instance on that
                network.
            network/fixed_ip_v6: '- The Fixed IPv6 address of the Instance on that'
            network/port: '- See Argument Reference above.'
            network/uuid: '- See Argument Reference above.'
            region: |-
                - (Required) The region in which to create the db instance. Changing this
                creates a new instance.
            size: '- (Required) Specifies the volume size in GB. Changing this creates new instance.'
            user: |-
                - (Optional) An array of username, password, host and databases. The user
                object structure is documented below.
            user.databases: |-
                - (Optional) A list of databases that user will have access to. If not specified,
                user has access to all databases on th einstance. Changing this creates a new instance.
            user.host: |-
                - (Optional) An ip address or % sign indicating what ip addresses can connect with
                this user credentials. Changing this creates a new instance.
            user.name: |-
                - (Optional) Username to be created on new instance. Changing this creates a
                new instance.
            user.password: |-
                - (Optional) User's password. Changing this creates a
                new instance.
            user/databases: '- See Argument Reference above.'
            user/host: '- See Argument Reference above.'
            user/name: '- See Argument Reference above.'
            user/password: '- See Argument Reference above.'
        importStatements: []
    openstack_db_user_v1:
        subCategory: Databases / Trove
        description: Manages a V1 database user resource within OpenStack.
        name: openstack_db_user_v1
        title: openstack_db_user_v1
        examples:
            - name: basic
              manifest: |-
                {
                  "databases": [
                    "testdb"
                  ],
                  "instance_id": "${openstack_db_instance_v1.basic.id}",
                  "name": "basic",
                  "password": "password"
                }
              references:
                instance_id: openstack_db_instance_v1.basic.id
        argumentDocs:
            databases: '- (Optional) A list of database user should have access to.'
            instance_id: '- (Required) The ID for the database instance.'
            name: '- (Required) A unique name for the resource.'
            password: '- (Required) User''s password.'
            region: '- Openstack region resource is created in.'
        importStatements: []
    openstack_dns_recordset_v2:
        subCategory: DNS / Designate
        description: Manages a DNS record set in the OpenStack DNS Service
        name: openstack_dns_recordset_v2
        title: openstack_dns_recordset_v2
        examples:
            - name: rs_example_com
              manifest: |-
                {
                  "description": "An example record set",
                  "name": "rs.example.com.",
                  "records": [
                    "10.0.0.1"
                  ],
                  "ttl": 3000,
                  "type": "A",
                  "zone_id": "${openstack_dns_zone_v2.example_zone.id}"
                }
              references:
                zone_id: openstack_dns_zone_v2.example_zone.id
              dependencies:
                openstack_dns_zone_v2.example_zone: |-
                    {
                      "description": "a zone",
                      "email": "email2@example.com",
                      "name": "example.com.",
                      "ttl": 6000,
                      "type": "PRIMARY"
                    }
        argumentDocs:
            description: '- (Optional) A description of the  record set.'
            disable_status_check: |-
                - (Optional) Disable wait for recordset to reach ACTIVE
                status. This argumen is disabled by default. If it is set to true, the recordset
                will be considered as created/updated/deleted if OpenStack request returned success.
            name: |-
                - (Required) The name of the record set. Note the . at the end of the name.
                Changing this creates a new DNS  record set.
            project_id: |-
                - (Optional) The ID of the project DNS zone is created
                for, sets X-Auth-Sudo-Tenant-ID header (requires an assigned
                user role in target project)
            records: '- (Required) An array of DNS records.'
            region: |-
                - (Optional) The region in which to obtain the V2 DNS client.
                If omitted, the region argument of the provider is used.
                Changing this creates a new DNS  record set.
            ttl: '- (Optional) The time to live (TTL) of the record set.'
            type: |-
                - (Optional) The type of record set. Examples: "A", "MX".
                Changing this creates a new DNS  record set.
            value_specs: |-
                - (Optional) Map of additional options. Changing this creates a
                new record set.
            zone_id: |-
                - (Required) The ID of the zone in which to create the record set.
                Changing this creates a new DNS  record set.
        importStatements: []
    openstack_dns_transfer_accept_v2:
        subCategory: DNS / Designate
        description: Manages a DNS zone Transfer accept in the OpenStack DNS Service
        name: openstack_dns_transfer_accept_v2
        title: openstack_dns_transfer_accept_v2
        examples:
            - name: accept_1
              manifest: |-
                {
                  "key": "${openstack_dns_transfer_request_v2.request_1.key}",
                  "zone_transfer_request_id": "${openstack_dns_transfer_request_v2.request_1.id}"
                }
              references:
                key: openstack_dns_transfer_request_v2.request_1.key
                zone_transfer_request_id: openstack_dns_transfer_request_v2.request_1.id
              dependencies:
                openstack_dns_transfer_request_v2.request_1: |-
                    {
                      "description": "a transfer accept",
                      "zone_id": "${openstack_dns_zone_v2.example_zone.id}"
                    }
                openstack_dns_zone_v2.example_zone: |-
                    {
                      "description": "An example zone",
                      "email": "jdoe@example.com",
                      "name": "example.com.",
                      "ttl": 3000,
                      "type": "PRIMARY"
                    }
        argumentDocs:
            disable_status_check: |-
                - (Optional) Disable wait for zone to reach ACTIVE
                status. The check is enabled by default. If this argument is true, zone
                will be considered as created/updated if OpenStack accept returned success.
            key: '- (Required) The transfer key.'
            region: |-
                - (Optional) The region in which to obtain the V2 Compute client.
                Keypairs are associated with accounts, but a Compute client is needed to
                create one. If omitted, the region argument of the provider is used.
                Changing this creates a new DNS zone.
            value_specs: |-
                - (Optional) Map of additional options. Changing this creates a
                new transfer accept.
            zone_transfer_request_id: '- (Required) The ID of the zone transfer request.'
        importStatements: []
    openstack_dns_transfer_request_v2:
        subCategory: DNS / Designate
        description: Manages a DNS zone Transfer request in the OpenStack DNS Service
        name: openstack_dns_transfer_request_v2
        title: openstack_dns_transfer_request_v2
        examples:
            - name: request_1
              manifest: |-
                {
                  "description": "a transfer request",
                  "zone_id": "${openstack_dns_zone_v2.example_zone.id}"
                }
              references:
                zone_id: openstack_dns_zone_v2.example_zone.id
              dependencies:
                openstack_dns_zone_v2.example_zone: |-
                    {
                      "description": "An example zone",
                      "email": "jdoe@example.com",
                      "name": "example.com.",
                      "ttl": 3000,
                      "type": "PRIMARY"
                    }
        argumentDocs:
            description: '- (Optional) A description of the zone tranfer request.'
            disable_status_check: |-
                - (Optional) Disable wait for zone to reach ACTIVE
                status. The check is enabled by default. If this argument is true, zone
                will be considered as created/updated if OpenStack request returned success.
            region: |-
                - (Optional) The region in which to obtain the V2 Compute client.
                Keypairs are associated with accounts, but a Compute client is needed to
                create one. If omitted, the region argument of the provider is used.
                Changing this creates a new DNS zone.
            target_project_id: '- (Optional) The target Project ID to transfer to.'
            value_specs: |-
                - (Optional) Map of additional options. Changing this creates a
                new transfer request.
            zone_id: |-
                - (Required) The ID of the zone for which to create the transfer
                request.
        importStatements: []
    openstack_dns_zone_v2:
        subCategory: DNS / Designate
        description: Manages a DNS zone in the OpenStack DNS Service
        name: openstack_dns_zone_v2
        title: openstack_dns_zone_v2
        examples:
            - name: example_com
              manifest: |-
                {
                  "description": "An example zone",
                  "email": "jdoe@example.com",
                  "name": "example.com.",
                  "ttl": 3000,
                  "type": "PRIMARY"
                }
        argumentDocs:
            attributes: |-
                - (Optional) Attributes for the DNS Service scheduler.
                Changing this creates a new zone.
            description: '- (Optional) A description of the zone.'
            disable_status_check: |-
                - (Optional) Disable wait for zone to reach ACTIVE
                status. The check is enabled by default. If this argument is true, zone
                will be considered as created/updated if OpenStack request returned success.
            email: '- (Optional) The email contact for the zone record.'
            masters: |-
                - (Optional) An array of master DNS servers. For when type is
                SECONDARY.
            name: |-
                - (Required) The name of the zone. Note the . at the end of the name.
                Changing this creates a new DNS zone.
            project_id: |-
                - (Optional) The ID of the project DNS zone is created
                for, sets X-Auth-Sudo-Tenant-ID header (requires an assigned
                user role in target project)
            region: |-
                - (Optional) The region in which to obtain the V2 Compute client.
                Keypairs are associated with accounts, but a Compute client is needed to
                create one. If omitted, the region argument of the provider is used.
                Changing this creates a new DNS zone.
            ttl: '- (Optional) The time to live (TTL) of the zone.'
            type: |-
                - (Optional) The type of zone. Can either be PRIMARY or SECONDARY.
                Changing this creates a new zone.
            value_specs: |-
                - (Optional) Map of additional options. Changing this creates a
                new zone.
        importStatements: []
    openstack_fw_firewall_v1:
        subCategory: Deprecated
        description: Manages a v1 firewall resource within OpenStack.
        name: openstack_fw_firewall_v1
        title: openstack_fw_firewall_v1
        examples:
            - name: firewall_1
              manifest: |-
                {
                  "name": "my-firewall",
                  "policy_id": "${openstack_fw_policy_v1.policy_1.id}"
                }
              references:
                policy_id: openstack_fw_policy_v1.policy_1.id
              dependencies:
                openstack_fw_policy_v1.policy_1: |-
                    {
                      "name": "my-policy",
                      "rules": [
                        "${openstack_fw_rule_v1.rule_1.id}",
                        "${openstack_fw_rule_v1.rule_2.id}"
                      ]
                    }
                openstack_fw_rule_v1.rule_1: |-
                    {
                      "action": "deny",
                      "description": "drop TELNET traffic",
                      "destination_port": "23",
                      "enabled": "true",
                      "name": "my-rule-1",
                      "protocol": "tcp"
                    }
                openstack_fw_rule_v1.rule_2: |-
                    {
                      "action": "deny",
                      "description": "drop NTP traffic",
                      "destination_port": "123",
                      "enabled": "false",
                      "name": "my-rule-2",
                      "protocol": "udp"
                    }
        argumentDocs:
            admin_state_up: |-
                - (Optional) Administrative up/down status for the firewall
                (must be "true" or "false" if provided - defaults to "true").
                Changing this updates the admin_state_up of an existing firewall.
            associated_routers: |-
                - (Optional) Router(s) to associate this firewall instance
                with. Must be a list of strings. Changing this updates the associated routers
                of an existing firewall. Conflicts with no_routers.
            description: |-
                - (Required) A description for the firewall. Changing this
                updates the description of an existing firewall.
            name: |-
                - (Optional) A name for the firewall. Changing this
                updates the name of an existing firewall.
            no_routers: |-
                - (Optional) Should this firewall not be associated with any routers
                (must be "true" or "false" if provide - defaults to "false").
                Conflicts with associated_routers.
            policy_id: |-
                - (Required) The policy resource id for the firewall. Changing
                this updates the policy_id of an existing firewall.
            region: |-
                - (Optional) The region in which to obtain the v1 networking client.
                A networking client is needed to create a firewall. If omitted, the
                region argument of the provider is used. Changing this creates a new
                firewall.
            tenant_id: |-
                - (Optional) The owner of the floating IP. Required if admin wants
                to create a firewall for another tenant. Changing this creates a new
                firewall.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_fw_group_v2:
        subCategory: FWaaS / Neutron
        description: Manages a v2 firewall group resource within OpenStack.
        name: openstack_fw_group_v2
        title: openstack_fw_group_v2
        examples:
            - name: group_1
              manifest: |-
                {
                  "egress_firewall_policy_id": "${openstack_fw_policy_v2.policy_2.id}",
                  "ingress_firewall_policy_id": "${openstack_fw_policy_v2.policy_1.id}",
                  "name": "firewall_group"
                }
              references:
                egress_firewall_policy_id: openstack_fw_policy_v2.policy_2.id
                ingress_firewall_policy_id: openstack_fw_policy_v2.policy_1.id
              dependencies:
                openstack_fw_policy_v2.policy_1: |-
                    {
                      "name": "firewall_ingress_policy",
                      "rules": [
                        "${openstack_fw_rule_v2.rule_1.id}"
                      ]
                    }
                openstack_fw_policy_v2.policy_2: |-
                    {
                      "name": "firewall_egress_policy",
                      "rules": [
                        "${openstack_fw_rule_v2.rule_2.id}"
                      ]
                    }
                openstack_fw_rule_v2.rule_1: |-
                    {
                      "action": "deny",
                      "description": "drop TELNET traffic",
                      "destination_port": "23",
                      "enabled": "true",
                      "name": "firewall_rule_2",
                      "protocol": "tcp"
                    }
                openstack_fw_rule_v2.rule_2: |-
                    {
                      "action": "deny",
                      "description": "drop NTP traffic",
                      "destination_port": "123",
                      "enabled": "false",
                      "name": "firewall_rule_1",
                      "protocol": "udp"
                    }
        argumentDocs:
            admin_state_up: |-
                - (Optional) Administrative up/down status for the firewall
                group (must be "true" or "false" if provided - defaults to "true").
                Changing this updates the admin_state_up of an existing firewall group.
            description: |-
                - (Optional) A description for the firewall group. Changing this
                updates the description of an existing firewall group.
            egress_firewall_policy_id: |-
                - (Optional) The egress firewall policy resource
                id for the firewall group. Changing this updates the
                egress_firewall_policy_id of an existing firewall group.
            ingress_firewall_policy_id: |-
                - (Optional) The ingress firewall policy resource
                id for the firewall group. Changing this updates the
                ingress_firewall_policy_id of an existing firewall group.
            name: |-
                - (Optional) A name for the firewall group. Changing this
                updates the name of an existing firewall.
            ports: |-
                - (Optional) Port(s) to associate this firewall group
                with. Must be a list of strings. Changing this updates the associated ports
                of an existing firewall group.
            project_id: |-
                - (Optional) - This argument conflicts and  is interchangeable
                with tenant_id. The owner of the firewall group. Required if admin wants
                to create a firewall group for another project. Changing this creates a new
                firewall group.
            region: |-
                - (Optional) The region in which to obtain the v2 networking client.
                A networking client is needed to create a firewall group. If omitted, the
                region argument of the provider is used. Changing this creates a new
                firewall group.
            shared: |-
                - (Optional) Sharing status of the firewall group (must be "true"
                or "false" if provided). If this is "true" the firewall group is visible to,
                and can be used in, firewalls in other tenants. Changing this updates the
                shared status of an existing firewall group. Only administrative users
                can specify if the firewall group should be shared.
            status: '- The status of the firewall group.'
            tenant_id: |-
                - (Optional) - This argument conflicts and is interchangeable with
                project_id. The owner of the firewall group. Required if admin wants to
                create a firewall group for another tenant. Changing this creates a new
                firewall group.
        importStatements: []
    openstack_fw_policy_v1:
        subCategory: Deprecated
        description: Manages a v1 firewall policy resource within OpenStack.
        name: openstack_fw_policy_v1
        title: openstack_fw_policy_v1
        examples:
            - name: policy_1
              manifest: |-
                {
                  "name": "my-policy",
                  "rules": [
                    "${openstack_fw_rule_v1.rule_1.id}",
                    "${openstack_fw_rule_v1.rule_2.id}"
                  ]
                }
              dependencies:
                openstack_fw_rule_v1.rule_1: |-
                    {
                      "action": "deny",
                      "description": "drop TELNET traffic",
                      "destination_port": "23",
                      "enabled": "true",
                      "name": "my-rule-1",
                      "protocol": "tcp"
                    }
                openstack_fw_rule_v1.rule_2: |-
                    {
                      "action": "deny",
                      "description": "drop NTP traffic",
                      "destination_port": "123",
                      "enabled": "false",
                      "name": "my-rule-2",
                      "protocol": "udp"
                    }
        argumentDocs:
            audited: |-
                - (Optional) Audit status of the firewall policy
                (must be "true" or "false" if provided - defaults to "false").
                This status is set to "false" whenever the firewall policy or any of its
                rules are changed. Changing this updates the audited status of an existing
                firewall policy.
            description: |-
                - (Optional) A description for the firewall policy. Changing
                this updates the description of an existing firewall policy.
            name: |-
                - (Optional) A name for the firewall policy. Changing this
                updates the name of an existing firewall policy.
            region: |-
                - (Optional) The region in which to obtain the v1 networking client.
                A networking client is needed to create a firewall policy. If omitted, the
                region argument of the provider is used. Changing this creates a new
                firewall policy.
            rules: |-
                - (Optional) An array of one or more firewall rules that comprise
                the policy. Changing this results in adding/removing rules from the
                existing firewall policy.
            shared: |-
                - (Optional) Sharing status of the firewall policy (must be "true"
                or "false" if provided). If this is "true" the policy is visible to, and
                can be used in, firewalls in other tenants. Changing this updates the
                shared status of an existing firewall policy. Only administrative users
                can specify if the policy should be shared.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_fw_policy_v2:
        subCategory: FWaaS / Neutron
        description: Manages a v2 firewall policy resource within OpenStack.
        name: openstack_fw_policy_v2
        title: openstack_fw_policy_v2
        examples:
            - name: policy_1
              manifest: |-
                {
                  "name": "firewall_policy",
                  "rules": [
                    "${openstack_fw_rule_v2.rule_1.id}",
                    "${openstack_fw_rule_v2.rule_2.id}"
                  ]
                }
              dependencies:
                openstack_fw_rule_v2.rule_1: |-
                    {
                      "action": "deny",
                      "description": "drop TELNET traffic",
                      "destination_port": "23",
                      "enabled": "true",
                      "name": "firewall_rule_1",
                      "protocol": "tcp"
                    }
                openstack_fw_rule_v2.rule_2: |-
                    {
                      "action": "deny",
                      "description": "drop NTP traffic",
                      "destination_port": "123",
                      "enabled": "false",
                      "name": "firewall_rule_2",
                      "protocol": "udp"
                    }
        argumentDocs:
            audited: |-
                - (Optional) Audit status of the firewall policy
                (must be "true" or "false" if provided - defaults to "false").
                This status is set to "false" whenever the firewall policy or any of its
                rules are changed. Changing this updates the audited status of an existing
                firewall policy.
            description: |-
                - (Optional) A description for the firewall policy. Changing
                this updates the description of an existing firewall policy.
            name: |-
                - (Optional) A name for the firewall policy. Changing this
                updates the name of an existing firewall policy.
            project_id: |-
                - (Optional) - This argument conflicts and is interchangeable
                with tenant_id. The owner of the firewall policy. Required if admin wants
                to create a firewall policy for another project. Changing this creates a new
                firewall policy.
            region: |-
                - (Optional) The region in which to obtain the v2 networking client.
                A networking client is needed to create a firewall policy. If omitted, the
                region argument of the provider is used. Changing this creates a new
                firewall policy.
            rules: |-
                - (Optional) An array of one or more firewall rules that comprise
                the policy. Changing this results in adding/removing rules from the
                existing firewall policy.
            shared: |-
                - (Optional) Sharing status of the firewall policy (must be "true"
                or "false" if provided). If this is "true" the policy is visible to, and
                can be used in, firewalls in other tenants. Changing this updates the
                shared status of an existing firewall policy. Only administrative users
                can specify if the policy should be shared.
            tenant_id: |-
                - (Optional) - This argument conflicts and is interchangeable
                with project_id. The owner of the firewall policy. Required if admin wants
                to create a firewall policy for another tenant. Changing this creates a new
                firewall policy.
        importStatements: []
    openstack_fw_rule_v1:
        subCategory: Deprecated
        description: Manages a v1 firewall rule resource within OpenStack.
        name: openstack_fw_rule_v1
        title: openstack_fw_rule_v1
        examples:
            - name: rule_1
              manifest: |-
                {
                  "action": "deny",
                  "description": "drop TELNET traffic",
                  "destination_port": "23",
                  "enabled": "true",
                  "name": "my_rule",
                  "protocol": "tcp"
                }
        argumentDocs:
            action: |-
                - (Required) Action to be taken ( must be "allow" or "deny") when the
                firewall rule matches. Changing this updates the action of an existing
                firewall rule.
            description: |-
                - (Optional) A description for the firewall rule. Changing this
                updates the description of an existing firewall rule.
            destination_ip_address: |-
                - (Optional) The destination IP address on which the
                firewall rule operates. Changing this updates the destination_ip_address
                of an existing firewall rule.
            destination_port: |-
                - (Optional) The destination port on which the firewall
                rule operates. Changing this updates the destination_port of an existing
                firewall rule.
            enabled: |-
                - (Optional) Enabled status for the firewall rule (must be "true"
                or "false" if provided - defaults to "true"). Changing this updates the
                enabled status of an existing firewall rule.
            ip_version: |-
                - (Optional) IP version, either 4 (default) or 6. Changing this
                updates the ip_version of an existing firewall rule.
            name: |-
                - (Optional) A unique name for the firewall rule. Changing this
                updates the name of an existing firewall rule.
            protocol: |-
                - (Required) The protocol type on which the firewall rule operates.
                Valid values are: tcp, udp, icmp, and any. Changing this updates the
                protocol of an existing firewall rule.
            region: |-
                - (Optional) The region in which to obtain the v1 Compute client.
                A Compute client is needed to create a firewall rule. If omitted, the
                region argument of the provider is used. Changing this creates a new
                firewall rule.
            source_ip_address: |-
                - (Optional) The source IP address on which the firewall
                rule operates. Changing this updates the source_ip_address of an existing
                firewall rule.
            source_port: |-
                - (Optional) The source port on which the firewall
                rule operates. Changing this updates the source_port of an existing
                firewall rule.
            tenant_id: |-
                - (Optional) The owner of the firewall rule. Required if admin
                wants to create a firewall rule for another tenant. Changing this creates a
                new firewall rule.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_fw_rule_v2:
        subCategory: FWaaS / Neutron
        description: Manages a v2 firewall rule resource within OpenStack.
        name: openstack_fw_rule_v2
        title: openstack_fw_rule_v2
        examples:
            - name: rule_2
              manifest: |-
                {
                  "action": "deny",
                  "description": "drop TELNET traffic",
                  "destination_port": "23",
                  "enabled": "true",
                  "name": "firewall_rule",
                  "protocol": "tcp"
                }
        argumentDocs:
            action: |-
                - (Optional) Action to be taken (must be "allow", "deny" or "reject")
                when the firewall rule matches. Changing this updates the action of an
                existing firewall rule. Default is deny.
            description: |-
                - (Optional) A description for the firewall rule. Changing this
                updates the description of an existing firewall rule.
            destination_ip_address: |-
                - (Optional) The destination IP address on which the
                firewall rule operates. Changing this updates the destination_ip_address
                of an existing firewall rule.
            destination_port: |-
                - (Optional) The destination port on which the firewall
                rule operates. Changing this updates the destination_port of an existing
                firewall rule. Require not any or empty protocol.
            enabled: |-
                - (Optional) Enabled status for the firewall rule (must be "true"
                or "false" if provided - defaults to "true"). Changing this updates the
                enabled status of an existing firewall rule.
            ip_version: |-
                - (Optional) IP version, either 4 or 6. Changing this
                updates the ip_version of an existing firewall rule. Default is 4.
            name: |-
                - (Optional) A unique name for the firewall rule. Changing this
                updates the name of an existing firewall rule.
            project_id: |-
                - (Optional) - This argument conflicts and is interchangeable
                with tenant_id. The owner of the firewall rule. Required if admin wants
                to create a firewall rule for another project. Changing this creates a new
                firewall rule.
            protocol: |-
                - (Optional; Required if source_port or destination_port is not
                empty) The protocol type on which the firewall rule operates.
                Valid values are: tcp, udp, icmp, and any. Changing this updates the
                protocol of an existing firewall rule. Default is any.
            region: |-
                - (Optional) The region in which to obtain the v2 networking client.
                A networking client is needed to create a firewall rule. If omitted, the
                region argument of the provider is used. Changing this creates a new
                firewall rule.
            shared: |-
                - (Optional) Sharing status of the firewall rule (must be "true"
                or "false" if provided). If this is "true" the policy is visible to, and
                can be used in, firewalls in other tenants. Changing this updates the
                shared status of an existing firewall policy. On
            source_ip_address: |-
                - (Optional) The source IP address on which the firewall
                rule operates. Changing this updates the source_ip_address of an existing
                firewall rule.
            source_port: |-
                - (Optional) The source port on which the firewall
                rule operates. Changing this updates the source_port of an existing
                firewall rule. Require not any or empty protocol.
            tenant_id: |-
                - (Optional) - This argument conflicts and is interchangeable
                with project_id. The owner of the firewall rule. Required if admin wants
                to create a firewall rule for another tenant. Changing this creates a new
                firewall rule.
        importStatements: []
    openstack_identity_application_credential_v3:
        subCategory: Identity / Keystone
        description: Manages a V3 Application Credential resource within OpenStack Keystone.
        name: openstack_identity_application_credential_v3
        title: openstack_identity_application_credential_v3
        examples:
            - name: swift
              manifest: |-
                {
                  "description": "Swift technical application credential",
                  "expires_at": "2019-02-13T12:12:12Z",
                  "name": "swift",
                  "roles": [
                    "swiftoperator"
                  ],
                  "secret": "supersecret"
                }
            - name: unrestricted
              manifest: |-
                {
                  "description": "Unrestricted application credential",
                  "name": "unrestricted",
                  "unrestricted": true
                }
            - name: monitoring
              manifest: |-
                {
                  "access_rules": [
                    {
                      "method": "GET",
                      "path": "/v2.0/metrics",
                      "service": "monitoring"
                    },
                    {
                      "method": "PUT",
                      "path": "/v2.0/metrics",
                      "service": "monitoring"
                    }
                  ],
                  "expires_at": "2019-02-13T12:12:12Z",
                  "name": "monitoring"
                }
        argumentDocs:
            access_rules: |-
                - (Optional) A collection of one or more access rules, which
                this application credential allows to follow. The structure is described
                below. Changing this creates a new application credential.
            access_rules.id: |-
                - (Computed) The ID of the existing access rule. The access rule ID of
                another application credential can be provided.
            access_rules.method: |-
                - (Optional) The request method that the application credential is
                permitted to use for a given API endpoint. Allowed values: POST, GET,
                HEAD, PATCH, PUT and DELETE.
            access_rules.path: |-
                - (Optional) The API path that the application credential is permitted
                to access. May use named wildcards such as {tag} or the unnamed wildcard
                * to match against any string in the path up to a /, or the recursive
                wildcard ** to include / in the matched path.
            access_rules.service: |-
                - (Optional) The service type identifier for the service that the
                application credential is granted to access. Must be a service type that is
                listed in the service catalog and not a code name for a service. E.g.
                identity, compute, volumev3, image, network,
                object-store, sharev2, dns, key-manager, monitoring, etc.
            description: |-
                - (Optional) A description of the application credential.
                Changing this creates a new application credential.
            expires_at: |-
                - (Optional) The expiration time of the application credential
                in the RFC3339 timestamp format (e.g. 2019-03-09T12:58:49Z). If omitted,
                an application credential will never expire. Changing this creates a new
                application credential.
            name: |-
                - (Required) A name of the application credential. Changing this
                creates a new application credential.
            project_id: |-
                - The ID of the project the application credential was created
                for and that authentication requests using this application credential will
                be scoped to.
            region: |-
                - (Optional) The region in which to obtain the V3 Keystone client.
                If omitted, the region argument of the provider is used. Changing this
                creates a new application credential.
            roles: |-
                - (Optional) A collection of one or more role names, which this
                application credential has to be associated with its project. If omitted,
                all the current user's roles within the scoped project will be inherited by
                a new application credential. Changing this creates a new application
                credential.
            secret: |-
                - (Optional) The secret for the application credential. If omitted,
                it will be generated by the server. Changing this creates a new application
                credential.
            unrestricted: |-
                - (Optional) A flag indicating whether the application
                credential may be used for creation or destruction of other application
                credentials or trusts. Changing this creates a new application credential.
        importStatements: []
    openstack_identity_ec2_credential_v3:
        subCategory: Identity / Keystone
        description: Manages a V3 EC2 Credential resource within OpenStack Keystone.
        name: openstack_identity_ec2_credential_v3
        title: openstack_identity_ec2_credential_v3
        examples:
            - name: ec2_key1
              manifest: '{}'
            - name: ec2_key1
              manifest: |-
                {
                  "project_id": "f7ac731cc11f40efbc03a9f9e1d1d21f"
                }
        argumentDocs:
            access: '- contains an EC2 credential access UUID'
            project_id: |-
                - (Optional) The ID of the project the EC2 credential is created
                for and that authentication requests using this EC2 credential will
                be scoped to. Only administrative users can specify a project ID different
                from the current auth scope.
            region: |-
                - (Optional) The region in which to obtain the V3 Keystone client.
                If omitted, the region argument of the provider is used. Changing this
                creates a new EC2 credential.
            secret: '- contains an EC2 credential secret UUID'
            trust_id: '- contains an EC2 credential trust ID scope'
            user_id: |-
                - (Optional) The ID of the user the EC2 credential is created for.
                Only administrative users can specify a user ID different from the current
                auth scope.
        importStatements: []
    openstack_identity_endpoint_v3:
        subCategory: Identity / Keystone
        description: Manages a V3 Endpoint resource within OpenStack Keystone.
        name: openstack_identity_endpoint_v3
        title: openstack_identity_endpoint_v3
        examples:
            - name: endpoint_1
              manifest: |-
                {
                  "endpoint_region": "${openstack_identity_service_v3.service_1.region}",
                  "name": "my-endpoint",
                  "service_id": "${openstack_identity_service_v3.service_1.id}",
                  "url": "http://my-endpoint"
                }
              references:
                endpoint_region: openstack_identity_service_v3.service_1.region
                service_id: openstack_identity_service_v3.service_1.id
              dependencies:
                openstack_identity_service_v3.service_1: |-
                    {
                      "name": "my-service",
                      "type": "my-service-type"
                    }
        argumentDocs:
            endpoint_region: |-
                - (Required) The endpoint region. The region and
                endpoint_region can be different.
            interface: |-
                - (Optional) The endpoint interface. Valid values are public,
                internal and admin. Default value is public
            name: '- (Optional) The endpoint name.'
            region: |-
                - (Optional) The region in which to obtain the V3 Keystone client.
                If omitted, the region argument of the provider is used.
            service_id: '- (Required) The endpoint service ID.'
            service_name: '- The service name of the endpoint.'
            service_type: '- The service type of the endpoint.'
            url: '- (Required) The endpoint url.'
        importStatements: []
    openstack_identity_group_v3:
        subCategory: Identity / Keystone
        description: Manages a V3 group resource within OpenStack Keystone.
        name: openstack_identity_group_v3
        title: openstack_identity_group_v3
        examples:
            - name: group_1
              manifest: |-
                {
                  "description": "group 1",
                  "name": "group_1"
                }
        argumentDocs:
            description: '- (Optional) A description of the group.'
            domain_id: '- (Optional) The domain the group belongs to.'
            name: '- The name of the group.'
            region: |-
                - (Optional) The region in which to obtain the V3 Keystone client.
                If omitted, the region argument of the provider is used. Changing this
                creates a new group.
        importStatements: []
    openstack_identity_inherit_role_assignment_v3:
        subCategory: Identity / Keystone
        description: Manages a V3 Inherit Role assignment within OpenStack Keystone.
        name: openstack_identity_inherit_role_assignment_v3
        title: openstack_identity_inherit_role_assignment_v3
        examples:
            - name: role_assignment_1
              manifest: |-
                {
                  "domain_id": "default",
                  "role_id": "${openstack_identity_role_v3.role_1.id}",
                  "user_id": "${openstack_identity_user_v3.user_1.id}"
                }
              references:
                role_id: openstack_identity_role_v3.role_1.id
                user_id: openstack_identity_user_v3.user_1.id
              dependencies:
                openstack_identity_role_v3.role_1: |-
                    {
                      "domain_id": "default",
                      "name": "role_1"
                    }
                openstack_identity_user_v3.user_1: |-
                    {
                      "domain_id": "default",
                      "name": "user_1"
                    }
        argumentDocs:
            domain_id: '- (Optional; Required if project_id is empty) The domain to assign the role in.'
            group_id: '- (Optional; Required if user_id is empty) The group to assign the role to.'
            project_id: |-
                - (Optional; Required if domain_id is empty) The project to assign the role in.
                The project should be able to containt child projects.
            role_id: '- (Required) The role to assign.'
            user_id: '- (Optional; Required if group_id is empty) The user to assign the role to.'
        importStatements: []
    openstack_identity_project_v3:
        subCategory: Identity / Keystone
        description: Manages a V3 Project resource within OpenStack Keystone.
        name: openstack_identity_project_v3
        title: openstack_identity_project_v3
        examples:
            - name: project_1
              manifest: |-
                {
                  "description": "A project",
                  "name": "project_1"
                }
        argumentDocs:
            description: '- (Optional) A description of the project.'
            domain_id: '- (Optional) The domain this project belongs to.'
            enabled: |-
                - (Optional) Whether the project is enabled or disabled. Valid
                values are true and false. Default is true.
            is_domain: |-
                - (Optional) Whether this project is a domain. Valid values
                are true and false. Default is false. Changing this creates a new
                project/domain.
            name: '- (Optional) The name of the project.'
            parent_id: |-
                - (Optional) The parent of this project. Changing this creates
                a new project.
            region: |-
                - (Optional) The region in which to obtain the V3 Keystone client.
                If omitted, the region argument of the provider is used. Changing this
                creates a new project.
            tags: |-
                - (Optional) Tags for the project. Changing this updates the existing
                project.
        importStatements: []
    openstack_identity_role_assignment_v3:
        subCategory: Identity / Keystone
        description: Manages a V3 Role assignment within OpenStack Keystone.
        name: openstack_identity_role_assignment_v3
        title: openstack_identity_role_assignment_v3
        examples:
            - name: role_assignment_1
              manifest: |-
                {
                  "project_id": "${openstack_identity_project_v3.project_1.id}",
                  "role_id": "${openstack_identity_role_v3.role_1.id}",
                  "user_id": "${openstack_identity_user_v3.user_1.id}"
                }
              references:
                project_id: openstack_identity_project_v3.project_1.id
                role_id: openstack_identity_role_v3.role_1.id
                user_id: openstack_identity_user_v3.user_1.id
              dependencies:
                openstack_identity_project_v3.project_1: |-
                    {
                      "name": "project_1"
                    }
                openstack_identity_role_v3.role_1: |-
                    {
                      "name": "role_1"
                    }
                openstack_identity_user_v3.user_1: |-
                    {
                      "default_project_id": "${openstack_identity_project_v3.project_1.id}",
                      "name": "user_1"
                    }
        argumentDocs:
            domain_id: '- (Optional; Required if project_id is empty) The domain to assign the role in.'
            group_id: '- (Optional; Required if user_id is empty) The group to assign the role to.'
            project_id: '- (Optional; Required if domain_id is empty) The project to assign the role in.'
            role_id: '- (Required) The role to assign.'
            user_id: '- (Optional; Required if group_id is empty) The user to assign the role to.'
        importStatements: []
    openstack_identity_role_v3:
        subCategory: Identity / Keystone
        description: Manages a V3 Role resource within OpenStack Keystone.
        name: openstack_identity_role_v3
        title: openstack_identity_role_v3
        examples:
            - name: role_1
              manifest: |-
                {
                  "name": "role_1"
                }
        argumentDocs:
            domain_id: '- (Optional) The domain the role belongs to.'
            name: '- The name of the role.'
            region: |-
                - (Optional) The region in which to obtain the V3 Keystone client.
                If omitted, the region argument of the provider is used. Changing this
                creates a new Role.
        importStatements: []
    openstack_identity_service_v3:
        subCategory: Identity / Keystone
        description: Manages a V3 Service resource within OpenStack Keystone.
        name: openstack_identity_service_v3
        title: openstack_identity_service_v3
        examples:
            - name: service_1
              manifest: |-
                {
                  "name": "custom",
                  "type": "custom"
                }
        argumentDocs:
            description: '- (Optional) The service description.'
            enabled: '- (Optional) The service status. Defaults to true.'
            name: '- (Required) The service name.'
            region: |-
                - (Optional) The region in which to obtain the V3 Keystone client.
                If omitted, the region argument of the provider is used.
            type: '- (Required) The service type.'
        importStatements: []
    openstack_identity_user_membership_v3:
        subCategory: Identity / Keystone
        description: Manages a user membership to group V3 resource within OpenStack.
        name: openstack_identity_user_membership_v3
        title: openstack_identity_user_membership_v3
        examples:
            - name: user_membership_1
              manifest: |-
                {
                  "group_id": "${openstack_identity_group_v3.group_1.id}",
                  "user_id": "${openstack_identity_user_v3.user_1.id}"
                }
              references:
                group_id: openstack_identity_group_v3.group_1.id
                user_id: openstack_identity_user_v3.user_1.id
              dependencies:
                openstack_identity_group_v3.group_1: |-
                    {
                      "description": "group 1",
                      "name": "group_1"
                    }
                openstack_identity_project_v3.project_1: |-
                    {
                      "name": "project_1"
                    }
                openstack_identity_role_assignment_v3.role_assignment_1: |-
                    {
                      "group_id": "${openstack_identity_group_v3.group_1.id}",
                      "project_id": "${openstack_identity_project_v3.project_1.id}",
                      "role_id": "${openstack_identity_role_v3.role_1.id}"
                    }
                openstack_identity_role_v3.role_1: |-
                    {
                      "name": "role_1"
                    }
                openstack_identity_user_v3.user_1: |-
                    {
                      "default_project_id": "${openstack_identity_project_v3.project_1.id}",
                      "name": "user_1"
                    }
        argumentDocs:
            group_id: |-
                - (Required) The UUID of group to which the user will be added.
                Changing this creates a new user membership.
            region: |-
                - (Optional) The region in which to obtain the V3 Identity client.
                If omitted, the region argument of the provider is used.
                Changing this creates a new user membership.
            user_id: '- (Required) The UUID of user to use. Changing this creates a new user membership.'
        importStatements: []
    openstack_identity_user_v3:
        subCategory: Identity / Keystone
        description: Manages a V3 User resource within OpenStack Keystone.
        name: openstack_identity_user_v3
        title: openstack_identity_user_v3
        examples:
            - name: user_1
              manifest: |-
                {
                  "default_project_id": "${openstack_identity_project_v3.project_1.id}",
                  "description": "A user",
                  "extra": {
                    "email": "user_1@foobar.com"
                  },
                  "ignore_change_password_upon_first_use": true,
                  "multi_factor_auth_enabled": true,
                  "multi_factor_auth_rule": [
                    {
                      "rule": [
                        "password",
                        "totp"
                      ]
                    },
                    {
                      "rule": [
                        "password"
                      ]
                    }
                  ],
                  "name": "user_1",
                  "password": "password123"
                }
              references:
                default_project_id: openstack_identity_project_v3.project_1.id
              dependencies:
                openstack_identity_project_v3.project_1: |-
                    {
                      "name": "project_1"
                    }
        argumentDocs:
            default_project_id: '- (Optional) The default project this user belongs to.'
            description: '- (Optional) A description of the user.'
            domain_id: '- (Optional) The domain this user belongs to.'
            enabled: |-
                - (Optional) Whether the user is enabled or disabled. Valid
                values are true and false.
            extra: '- (Optional) Free-form key/value pairs of extra information.'
            ignore_change_password_upon_first_use: |-
                - (Optional) User will not have to
                change their password upon first use. Valid values are true and false.
            ignore_lockout_failure_attempts: |-
                - (Optional) User will not have a failure
                lockout placed on their account. Valid values are true and false.
            ignore_password_expiry: |-
                - (Optional) User's password will not expire.
                Valid values are true and false.
            multi_factor_auth_enabled: |-
                - (Optional) Whether to enable multi-factor
                authentication. Valid values are true and false.
            multi_factor_auth_rule: |-
                - (Optional) A multi-factor authentication rule.
                The structure is documented below. Please see the
                Ocata release notes
                for more information on how to use mulit-factor rules.
            multi_factor_auth_rule.rule: |-
                - (Required) A list of authentication plugins that the user must
                authenticate with.
            name: '- (Optional) The name of the user.'
            password: '- (Optional) The password for the user.'
            region: |-
                - (Optional) The region in which to obtain the V3 Keystone client.
                If omitted, the region argument of the provider is used. Changing this
                creates a new User.
        importStatements: []
    openstack_images_image_access_accept_v2:
        subCategory: Images / Glance
        description: Manages a V2 Image membership proposal resource within OpenStack Glance.
        name: openstack_images_image_access_accept_v2
        title: openstack_images_image_access_accept_v2
        examples:
            - name: rancheros_member
              manifest: |-
                {
                  "image_id": "${data.openstack_images_image_v2.rancheros.id}",
                  "status": "accepted"
                }
              references:
                image_id: data.openstack_images_image_v2.rancheros.id
        argumentDocs:
            created_at: '- The date the image membership was created.'
            image_id: '- (Required) The proposed image ID.'
            member_id: |-
                - (Optional) The member ID, e.g. the target project ID. Optional
                for admin accounts. Defaults to the current scope project ID.
            region: |-
                - (Optional) The region in which to obtain the V2 Glance client.
                A Glance client is needed to manage Image memberships. If omitted, the
                region argument of the provider is used. Changing this creates a new
                membership.
            schema: '- The membership schema.'
            status: |-
                - (Required) The membership proposal status. Can either be
                accepted, rejected or pending.
            updated_at: '- The date the image membership was last updated.'
        importStatements: []
    openstack_images_image_access_v2:
        subCategory: Images / Glance
        description: Manages a V2 Image member resource within OpenStack Glance.
        name: openstack_images_image_access_v2
        title: openstack_images_image_access_v2
        examples:
            - name: rancheros_member
              manifest: |-
                {
                  "image_id": "${openstack_images_image_v2.rancheros.id}",
                  "member_id": "bed6b6cbb86a4e2d8dc2735c2f1000e4"
                }
              references:
                image_id: openstack_images_image_v2.rancheros.id
              dependencies:
                openstack_images_image_v2.rancheros: |-
                    {
                      "container_format": "bare",
                      "disk_format": "qcow2",
                      "image_source_url": "https://releases.rancher.com/os/latest/rancheros-openstack.img",
                      "name": "RancherOS",
                      "properties": {
                        "key": "value"
                      },
                      "visibility": "shared"
                    }
            - name: rancheros_member
              manifest: |-
                {
                  "image_id": "${openstack_images_image_v2.rancheros.id}",
                  "member_id": "bed6b6cbb86a4e2d8dc2735c2f1000e4",
                  "status": "accepted"
                }
              references:
                image_id: openstack_images_image_v2.rancheros.id
              dependencies:
                openstack_images_image_v2.rancheros: |-
                    {
                      "container_format": "bare",
                      "disk_format": "qcow2",
                      "image_source_url": "https://releases.rancher.com/os/latest/rancheros-openstack.img",
                      "name": "RancherOS",
                      "properties": {
                        "key": "value"
                      },
                      "visibility": "shared"
                    }
        argumentDocs:
            created_at: '- The date the image access was created.'
            image_id: '- (Required) The image ID.'
            member_id: '- (Required) The member ID, e.g. the target project ID.'
            region: |-
                - (Optional) The region in which to obtain the V2 Glance client.
                A Glance client is needed to manage Image members. If omitted, the region
                argument of the provider is used. Changing this creates a new resource.
            schema: '- The member schema.'
            status: |-
                - (Optional) The member proposal status. Optional if admin wants to
                force the member proposal acceptance. Can either be accepted, rejected or
                pending. Defaults to pending. Foridden for non-admin users.
            updated_at: '- The date the image access was last updated.'
        importStatements: []
    openstack_images_image_v2:
        subCategory: Images / Glance
        description: Manages a V2 Image resource within OpenStack Glance.
        name: openstack_images_image_v2
        title: openstack_images_image_v2
        examples:
            - name: rancheros
              manifest: |-
                {
                  "container_format": "bare",
                  "disk_format": "qcow2",
                  "image_source_url": "https://releases.rancher.com/os/latest/rancheros-openstack.img",
                  "name": "RancherOS",
                  "properties": {
                    "key": "value"
                  }
                }
        argumentDocs:
            checksum: '- The checksum of the data associated with the image.'
            container_format: |-
                - (Required) The container format. Must be one of
                "ami", "ari", "aki", "bare", "ovf".
            created_at: '- The date the image was created.'
            decompress: |-
                - (Optional) If true, this provider will decompress downloaded
                image before uploading it to OpenStack. Decompression algorithm is chosen by
                checking "Content-Type" header, supported algorithm are: gzip, bzip2 and xz.
                Defaults to false. Changing this creates a new Image.
            disk_format: |-
                - (Required) The disk format. Must be one of
                "ami", "ari", "aki", "vhd", "vmdk", "raw", "qcow2", "vdi", "iso".
            file: |-
                - the trailing path after the glance
                endpoint that represent the location of the image
                or the path to retrieve it.
            hidden: |-
                - (Optional) If true, image will be hidden from public list.
                Defaults to false.
            id: '- A unique ID assigned by Glance.'
            image_cache_path: |-
                - (Optional) This is the directory where the images will
                be downloaded. Images will be stored with a filename corresponding to
                the url's md5 hash. Defaults to "$HOME/.terraform/image_cache"
            image_id: |-
                - (Optional) Unique ID (valid UUID) of image to create. Changing
                this creates a new image.
            image_source_password: '- (Optional) The password of basic auth to download image_source_url.'
            image_source_url: |-
                - (Optional) This is the url of the raw image. If web_download
                is not used, then the image will be downloaded in the image_cache_path before
                being uploaded to Glance.
                Conflicts with local_file_path.
            image_source_username: '- (Optional) The username of basic auth to download image_source_url.'
            local_file_path: |-
                - (Optional) This is the filepath of the raw image file
                that will be uploaded to Glance. Conflicts with image_source_url and
                web_download.
            metadata: |-
                - The metadata associated with the image.
                Image metadata allow for meaningfully define the image properties
                and tags. See https://docs.openstack.org/glance/latest/user/metadefs-concepts.html.
            min_disk_gb: |-
                - (Optional) Amount of disk space (in GB) required to boot image.
                Defaults to 0.
            min_ram_mb: |-
                - (Optional) Amount of ram (in MB) required to boot image.
                Defauts to 0.
            name: '- (Required) The name of the image.'
            owner: '- The id of the openstack user who owns the image.'
            properties: |-
                - (Optional) A map of key/value pairs to set freeform
                information about an image. See the "Notes" section for further
                information about properties.
            protected: |-
                - (Optional) If true, image will not be deletable.
                Defaults to false.
            region: |-
                - (Optional) The region in which to obtain the V2 Glance client.
                A Glance client is needed to create an Image that can be used with
                a compute instance. If omitted, the region argument of the provider
                is used. Changing this creates a new Image.
            schema: |-
                - The path to the JSON-schema that represent
                the image or image
            size_bytes: '- The size in bytes of the data associated with the image.'
            status: |-
                - The status of the image. It can be "queued", "active"
                or "saving".
            tags: |-
                - (Optional) The tags of the image. It must be a list of strings.
                At this time, it is not possible to delete all tags of an image.
            update_at: '- (Deprecated - use updated_at instead)'
            updated_at: '- The date the image was last updated.'
            verify_checksum: |-
                - (Optional) If false, the checksum will not be verified
                once the image is finished uploading. Conflicts with web_download.
                Defaults to true when not using web_download.
            visibility: |-
                - (Optional) The visibility of the image. Must be one of
                "public", "private", "community", or "shared". The ability to set the
                visibility depends upon the configuration of the OpenStack cloud.
            web_download: |-
                - (Optional) If true, the "web-download" import method will
                be used to let Openstack download the image directly from the remote source.
                Conflicts with local_file_path. Defaults to false.
        importStatements: []
    openstack_keymanager_container_v1:
        subCategory: Key Manager / Barbican
        description: Manages a V1 Barbican container resource within OpenStack.
        name: openstack_keymanager_container_v1
        title: openstack_keymanager_container_v1
        examples:
            - name: tls_1
              manifest: |-
                {
                  "name": "tls",
                  "secret_refs": [
                    {
                      "name": "certificate",
                      "secret_ref": "${openstack_keymanager_secret_v1.certificate_1.secret_ref}"
                    },
                    {
                      "name": "private_key",
                      "secret_ref": "${openstack_keymanager_secret_v1.private_key_1.secret_ref}"
                    },
                    {
                      "name": "intermediates",
                      "secret_ref": "${openstack_keymanager_secret_v1.intermediate_1.secret_ref}"
                    }
                  ],
                  "type": "certificate"
                }
              references:
                secret_refs.secret_ref: openstack_keymanager_secret_v1.intermediate_1.secret_ref
              dependencies:
                openstack_keymanager_secret_v1.certificate_1: |-
                    {
                      "name": "certificate",
                      "payload": "${file(\"cert.pem\")}",
                      "payload_content_type": "text/plain",
                      "secret_type": "certificate"
                    }
                openstack_keymanager_secret_v1.intermediate_1: |-
                    {
                      "name": "intermediate",
                      "payload": "${file(\"intermediate-ca.pem\")}",
                      "payload_content_type": "text/plain",
                      "secret_type": "certificate"
                    }
                openstack_keymanager_secret_v1.private_key_1: |-
                    {
                      "name": "private_key",
                      "payload": "${file(\"cert-key.pem\")}",
                      "payload_content_type": "text/plain",
                      "secret_type": "private"
                    }
                openstack_lb_listener_v2.listener_1: |-
                    {
                      "default_tls_container_ref": "${openstack_keymanager_container_v1.tls_1.container_ref}",
                      "loadbalancer_id": "${openstack_lb_loadbalancer_v2.lb_1.id}",
                      "name": "https",
                      "protocol": "TERMINATED_HTTPS",
                      "protocol_port": 443
                    }
                openstack_lb_loadbalancer_v2.lb_1: |-
                    {
                      "name": "loadbalancer",
                      "vip_subnet_id": "${data.openstack_networking_subnet_v2.subnet_1.id}"
                    }
            - name: tls_1
              manifest: |-
                {
                  "acl": [
                    {
                      "read": [
                        {
                          "project_access": false,
                          "users": [
                            "userid1",
                            "userid2"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "tls",
                  "secret_refs": [
                    {
                      "name": "certificate",
                      "secret_ref": "${openstack_keymanager_secret_v1.certificate_1.secret_ref}"
                    },
                    {
                      "name": "private_key",
                      "secret_ref": "${openstack_keymanager_secret_v1.private_key_1.secret_ref}"
                    },
                    {
                      "name": "intermediates",
                      "secret_ref": "${openstack_keymanager_secret_v1.intermediate_1.secret_ref}"
                    }
                  ],
                  "type": "certificate"
                }
              references:
                secret_refs.secret_ref: openstack_keymanager_secret_v1.intermediate_1.secret_ref
        argumentDocs:
            acl: |-
                - (Optional) Allows to control an access to a container. Currently only
                the read operation is supported. If not specified, the container is
                accessible project wide. The read structure is described below.
            acl.created_at: '- (Computed) The date the container ACL was created.'
            acl.project_access: |-
                - (Optional) Whether the container is accessible project wide.
                Defaults to true.
            acl.updated_at: '- (Computed) The date the container ACL was last updated.'
            acl.users: |-
                - (Optional) The list of user IDs, which are allowed to access the
                container, when project_access is set to false.
            consumers: '- The list of the container consumers. The structure is described below.'
            consumers.name: '- The name of the consumer.'
            consumers.url: '- The consumer URL.'
            container_ref: '- The container reference / where to find the container.'
            created_at: '- The date the container was created.'
            creator_id: '- The creator of the container.'
            name: |-
                - (Optional) Human-readable name for the Container. Does not have
                to be unique.
            region: |-
                - (Optional) The region in which to obtain the V1 KeyManager client.
                A KeyManager client is needed to create a container. If omitted, the
                region argument of the provider is used. Changing this creates a new
                V1 container.
            secret_refs: |-
                - (Optional) A set of dictionaries containing references to secrets. The structure is described
                below.
            secret_refs.name: '- (Optional) The name of the secret reference. The reference names must correspond the container type, more details are available here.'
            secret_refs.secret_ref: '- (Required) The secret reference / where to find the secret, URL.'
            status: '- The status of the container.'
            type: '- (Required) Used to indicate the type of container. Must be one of generic, rsa or certificate.'
            updated_at: '- The date the container was last updated.'
        importStatements: []
    openstack_keymanager_order_v1:
        subCategory: Key Manager / Barbican
        description: Manages a V1 Barbican order resource within OpenStack.
        name: openstack_keymanager_order_v1
        title: openstack_keymanager_order_v1
        examples:
            - name: order_1
              manifest: |-
                {
                  "meta": [
                    {
                      "algorithm": "aes",
                      "bit_length": 256,
                      "mode": "cbc",
                      "name": "mysecret"
                    }
                  ],
                  "type": "key"
                }
            - name: order_1
              manifest: |-
                {
                  "meta": [
                    {
                      "algorithm": "rsa",
                      "bit_length": 4096,
                      "name": "mysecret"
                    }
                  ],
                  "type": "asymmetric"
                }
        argumentDocs:
            container_ref: '- The container reference / where to find the container.'
            created: '- The date the order was created.'
            creator_id: '- The creator of the order.'
            meta: '- (Required) Dictionary containing the order metadata used to generate the order. The structure is described below.'
            meta.algorithm: '- (Required) Algorithm to use for key generation.'
            meta.bit_length: '- (Required) - Bit lenght of key to be generated.'
            meta.expiration: '- (Optional) This is a UTC timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ. If set, the secret will not be available after this time.'
            meta.mode: '- (Optional) The mode to use for key generation.'
            meta.name: '- (Optional) The name of the secret set by the user.'
            meta.payload_content_type: '- (Optional) The media type for the content of the secrets payload. Must be one of text/plain, text/plain;charset=utf-8, text/plain; charset=utf-8, application/octet-stream, application/pkcs8.'
            order_ref: '- The order reference / where to find the order.'
            region: |-
                - (Optional) The region in which to obtain the V1 KeyManager client.
                A KeyManager client is needed to create a order. If omitted, the
                region argument of the provider is used. Changing this creates a new
                V1 order.
            secret_ref: '- The secret reference / where to find the secret.'
            status: '- The status of the order.'
            sub_status: '- The sub status of the order.'
            sub_status_message: '- The sub status message of the order.'
            type: '- (Required) The type of key to be generated. Must be one of asymmetric, key.'
            updated: '- The date the order was last updated.'
        importStatements: []
    openstack_keymanager_secret_v1:
        subCategory: Key Manager / Barbican
        description: Manages a V1 Barbican secret resource within OpenStack.
        name: openstack_keymanager_secret_v1
        title: openstack_keymanager_secret_v1
        examples:
            - name: secret_1
              manifest: |-
                {
                  "algorithm": "aes",
                  "bit_length": 256,
                  "metadata": {
                    "key": "foo"
                  },
                  "mode": "cbc",
                  "name": "mysecret",
                  "payload": "foobar",
                  "payload_content_type": "text/plain",
                  "secret_type": "passphrase"
                }
            - name: secret_1
              manifest: |-
                {
                  "name": "password",
                  "payload": "${base64encode(\"password with the whitespace at the end \")}",
                  "payload_content_encoding": "base64",
                  "payload_content_type": "application/octet-stream",
                  "secret_type": "passphrase"
                }
            - name: secret_1
              manifest: |-
                {
                  "expiration": "${timeadd(timestamp(), format(\"%dh\", 8760))}",
                  "lifecycle": [
                    {
                      "ignore_changes": [
                        "${expiration}"
                      ]
                    }
                  ],
                  "name": "certificate",
                  "payload": "${file(\"certificate.pem\")}",
                  "payload_content_type": "text/plain",
                  "secret_type": "certificate"
                }
            - name: secret_1
              manifest: |-
                {
                  "acl": [
                    {
                      "read": [
                        {
                          "project_access": false,
                          "users": [
                            "userid1",
                            "userid2"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "certificate",
                  "payload": "${file(\"certificate.pem\")}",
                  "payload_content_type": "text/plain",
                  "secret_type": "certificate"
                }
        argumentDocs:
            acl: |-
                - (Optional) Allows to control an access to a secret. Currently only the
                read operation is supported. If not specified, the secret is accessible
                project wide.
            acl.created_at: '- (Computed) The date the secret ACL was created.'
            acl.project_access: |-
                - (Optional) Whether the secret is accessible project wide.
                Defaults to true.
            acl.updated_at: '- (Computed) The date the secret ACL was last updated.'
            acl.users: |-
                - (Optional) The list of user IDs, which are allowed to access the
                secret, when project_access is set to false.
            algorithm: '- (Optional) Metadata provided by a user or system for informational purposes.'
            all_metadata: |-
                - The map of metadata, assigned on the secret, which has been
                explicitly and implicitly added.
            bit_length: '- (Optional) Metadata provided by a user or system for informational purposes.'
            content_types: '- The map of the content types, assigned on the secret.'
            created_at: '- The date the secret was created.'
            creator_id: '- The creator of the secret.'
            expiration: '- (Optional) The expiration time of the secret in the RFC3339 timestamp format (e.g. 2019-03-09T12:58:49Z). If omitted, a secret will never expire. Changing this creates a new secret.'
            metadata: '- (Optional) Additional Metadata for the secret.'
            mode: '- (Optional) Metadata provided by a user or system for informational purposes.'
            name: |-
                - (Optional) Human-readable name for the Secret. Does not have
                to be unique.
            payload: '- (Optional) The secret''s data to be stored. payload_content_type must also be supplied if payload is included.'
            payload_content_encoding: '- (Optional) (required if payload is encoded) The encoding used for the payload to be able to include it in the JSON request. Must be either base64 or binary.'
            payload_content_type: '- (Optional) (required if payload is included) The media type for the content of the payload. Must be one of text/plain, text/plain;charset=utf-8, text/plain; charset=utf-8, application/octet-stream, application/pkcs8.'
            region: |-
                - (Optional) The region in which to obtain the V1 KeyManager client.
                A KeyManager client is needed to create a secret. If omitted, the
                region argument of the provider is used. Changing this creates a new
                V1 secret.
            secret_ref: '- The secret reference / where to find the secret.'
            secret_type: '- (Optional) Used to indicate the type of secret being stored. For more information see Secret types.'
            status: '- The status of the secret.'
            updated_at: '- The date the secret was last updated.'
        importStatements: []
    openstack_lb_l7policy_v2:
        subCategory: Load Balancing as a Service / Octavia
        description: Manages a V2 L7 Policy resource within OpenStack.
        name: openstack_lb_l7policy_v2
        title: openstack_lb_l7policy_v2
        examples:
            - name: l7policy_1
              manifest: |-
                {
                  "action": "REDIRECT_TO_POOL",
                  "description": "test l7 policy",
                  "listener_id": "${openstack_lb_listener_v2.listener_1.id}",
                  "name": "test",
                  "position": 1,
                  "redirect_pool_id": "${openstack_lb_pool_v2.pool_1.id}"
                }
              references:
                listener_id: openstack_lb_listener_v2.listener_1.id
                redirect_pool_id: openstack_lb_pool_v2.pool_1.id
              dependencies:
                openstack_lb_listener_v2.listener_1: |-
                    {
                      "loadbalancer_id": "${openstack_lb_loadbalancer_v2.loadbalancer_1.id}",
                      "name": "listener_1",
                      "protocol": "HTTP",
                      "protocol_port": 8080
                    }
                openstack_lb_loadbalancer_v2.loadbalancer_1: |-
                    {
                      "name": "loadbalancer_1",
                      "vip_subnet_id": "${openstack_networking_subnet_v2.subnet_1.id}"
                    }
                openstack_lb_pool_v2.pool_1: |-
                    {
                      "lb_method": "ROUND_ROBIN",
                      "loadbalancer_id": "${openstack_lb_loadbalancer_v2.loadbalancer_1.id}",
                      "name": "pool_1",
                      "protocol": "HTTP"
                    }
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
        argumentDocs:
            action: |-
                - (Required) The L7 Policy action - can either be REDIRECT_TO_POOL,
                REDIRECT_TO_URL or REJECT.
            admin_state_up: |-
                - (Optional) The administrative state of the L7 Policy.
                A valid value is true (UP) or false (DOWN).
            description: '- (Optional) Human-readable description for the L7 Policy.'
            id: '- The unique ID for the L7 Policy.'
            listener_id: |-
                - (Required) The Listener on which the L7 Policy will be associated with.
                Changing this creates a new L7 Policy.
            name: |-
                - (Optional) Human-readable name for the L7 Policy. Does not have
                to be unique.
            position: '- (Optional) The position of this policy on the listener. Positions start at 1.'
            redirect_pool_id: |-
                - (Optional) Requests matching this policy will be redirected to the
                pool with this ID. Only valid if action is REDIRECT_TO_POOL.
            redirect_url: |-
                - (Optional) Requests matching this policy will be redirected to this URL.
                Only valid if action is REDIRECT_TO_URL.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an . If omitted, the
                region argument of the provider is used. Changing this creates a new
                L7 Policy.
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the L7 Policy.  Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new L7 Policy.
        importStatements: []
    openstack_lb_l7rule_v2:
        subCategory: Load Balancing as a Service / Octavia
        description: Manages a V2 l7rule resource within OpenStack.
        name: openstack_lb_l7rule_v2
        title: openstack_lb_l7rule_v2
        examples:
            - name: l7rule_1
              manifest: |-
                {
                  "compare_type": "EQUAL_TO",
                  "l7policy_id": "${openstack_lb_l7policy_v2.l7policy_1.id}",
                  "type": "PATH",
                  "value": "/api"
                }
              references:
                l7policy_id: openstack_lb_l7policy_v2.l7policy_1.id
              dependencies:
                openstack_lb_l7policy_v2.l7policy_1: |-
                    {
                      "action": "REDIRECT_TO_URL",
                      "description": "test description",
                      "listener_id": "${openstack_lb_listener_v2.listener_1.id}",
                      "name": "test",
                      "position": 1,
                      "redirect_url": "http://www.example.com"
                    }
                openstack_lb_listener_v2.listener_1: |-
                    {
                      "loadbalancer_id": "${openstack_lb_loadbalancer_v2.loadbalancer_1.id}",
                      "name": "listener_1",
                      "protocol": "HTTP",
                      "protocol_port": 8080
                    }
                openstack_lb_loadbalancer_v2.loadbalancer_1: |-
                    {
                      "name": "loadbalancer_1",
                      "vip_subnet_id": "${openstack_networking_subnet_v2.subnet_1.id}"
                    }
                openstack_lb_pool_v2.pool_1: |-
                    {
                      "lb_method": "ROUND_ROBIN",
                      "loadbalancer_id": "${openstack_lb_loadbalancer_v2.loadbalancer_1.id}",
                      "name": "pool_1",
                      "protocol": "HTTP"
                    }
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the L7 Rule.
                A valid value is true (UP) or false (DOWN).
            compare_type: |-
                - (Required) The comparison type for the L7 rule - can either be
                CONTAINS, STARTS_WITH, ENDS_WITH, EQUAL_TO or REGEX
            description: '- (Optional) Human-readable description for the L7 Rule.'
            id: '- The unique ID for the L7 Rule.'
            invert: |-
                - (Optional) When true the logic of the rule is inverted. For example, with invert
                true, equal to would become not equal to. Default is false.
            key: |-
                - (Optional) The key to use for the comparison. For example, the name of the cookie to
                evaluate. Valid when type is set to COOKIE or HEADER.
            l7policy_id: |-
                - (Required) The ID of the L7 Policy to query. Changing this creates a new
                L7 Rule.
            listener_id: '- The ID of the Listener owning this resource.'
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an . If omitted, the
                region argument of the provider is used. Changing this creates a new
                L7 Rule.
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the L7 Rule.  Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new L7 Rule.
            type: |-
                - (Required) The L7 Rule type - can either be COOKIE, FILE_TYPE, HEADER,
                HOST_NAME or PATH.
            value: |-
                - (Required) The value to use for the comparison. For example, the file type to
                compare.
        importStatements: []
    openstack_lb_listener_v2:
        subCategory: Load Balancing as a Service / Octavia
        description: Manages a V2 listener resource within OpenStack.
        name: openstack_lb_listener_v2
        title: openstack_lb_listener_v2
        examples:
            - name: listener_1
              manifest: |-
                {
                  "insert_headers": {
                    "X-Forwarded-For": "true"
                  },
                  "loadbalancer_id": "d9415786-5f1a-428b-b35f-2f1523e146d2",
                  "protocol": "HTTP",
                  "protocol_port": 8080
                }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the Listener.
                A valid value is true (UP) or false (DOWN).
            allowed_cidrs: |-
                - (Optional) A list of CIDR blocks that are permitted to connect to this listener, denying
                all other source addresses. If not present, defaults to allow all.
            connection_limit: |-
                - (Optional) The maximum number of connections allowed
                for the Listener.
            default_pool_id: |-
                - (Optional) The ID of the default pool with which the
                Listener is associated.
            default_port_id: '- See Argument Reference above.'
            default_tls_container_ref: |-
                - (Optional) A reference to a Barbican Secrets
                container which stores TLS information. This is required if the protocol
                is TERMINATED_HTTPS. See
                here
                for more information.
            description: '- (Optional) Human-readable description for the Listener.'
            id: '- The unique ID for the Listener.'
            insert_headers: |-
                - (Optional) The list of key value pairs representing headers to insert
                into the request before it is sent to the backend members. Changing this updates the headers of the
                existing listener.
            loadbalancer_id: |-
                - (Required) The load balancer on which to provision this
                Listener. Changing this creates a new Listener.
            name: |-
                - (Optional) Human-readable name for the Listener. Does not have
                to be unique.
            protocol: |-
                - (Required) The protocol - can either be TCP, HTTP, HTTPS,
                TERMINATED_HTTPS, UDP (supported only in Octavia), SCTP (supported only
                in Octavia minor version >= 2.23) or PROMETHEUS (supported only in
                Octavia minor version >=2.25). Changing this creates a new Listener.
            protocol_port: |-
                - (Required) The port on which to listen for client traffic.
                Changing this creates a new Listener.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an . If omitted, the
                region argument of the provider is used. Changing this creates a new
                Listener.
            sni_container_refs: |-
                - (Optional) A list of references to Barbican Secrets
                containers which store SNI information. See
                here
                for more information.
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the Listener.  Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new Listener.
            timeout_client_data: '- (Optional) The client inactivity timeout in milliseconds.'
            timeout_member_connect: '- (Optional) The member connection timeout in milliseconds.'
            timeout_member_data: '- (Optional) The member inactivity timeout in milliseconds.'
            timeout_tcp_inspect: |-
                - (Optional) The time in milliseconds, to wait for additional
                TCP packets for content inspection.
        importStatements: []
    openstack_lb_loadbalancer_v2:
        subCategory: Load Balancing as a Service / Octavia
        description: Manages a V2 loadbalancer resource within OpenStack.
        name: openstack_lb_loadbalancer_v2
        title: openstack_lb_loadbalancer_v2
        examples:
            - name: lb_1
              manifest: |-
                {
                  "vip_subnet_id": "d9415786-5f1a-428b-b35f-2f1523e146d2"
                }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the Loadbalancer.
                A valid value is true (UP) or false (DOWN).
            availability_zone: |-
                - (Optional) The availability zone of the Loadbalancer.
                Changing this creates a new loadbalancer. Available only for Octavia
                minor version 2.14 or later.
            description: '- (Optional) Human-readable description for the Loadbalancer.'
            flavor_id: |-
                - (Optional) The UUID of a flavor. Changing this creates a new
                loadbalancer.
            loadbalancer_provider: |-
                - (Optional) The name of the provider. Changing this
                creates a new loadbalancer.
            name: |-
                - (Optional) Human-readable name for the Loadbalancer. Does not have
                to be unique.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an LB member. If omitted, the
                region argument of the provider is used. Changing this creates a new
                LB member.
            security_group_ids: |-
                - (Optional) A list of security group IDs to apply to the
                loadbalancer. The security groups must be specified by ID and not name (as
                opposed to how they are configured with the Compute Instance).
            tags: |-
                - (Optional) A list of simple strings assigned to the loadbalancer.
                Available only for Octavia minor version 2.5 or later.
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the Loadbalancer.  Only administrative users can specify a tenant UUID
                other than their own.  Changing this creates a new loadbalancer.
            vip_address: |-
                - (Optional) The ip address of the load balancer.
                Changing this creates a new loadbalancer.
            vip_network_id: |-
                - (Optional) The network on which to allocate the
                Loadbalancer's address. A tenant can only create Loadbalancers on networks
                authorized by policy (e.g. networks that belong to them or networks that
                are shared).  Changing this creates a new loadbalancer.
                It is available only for Octavia.
            vip_port_id: |-
                - (Optional) The port UUID that the loadbalancer will use.
                Changing this creates a new loadbalancer. It is available only for Octavia.
            vip_subnet_id: |-
                - (Optional) The subnet on which to allocate the
                Loadbalancer's address. A tenant can only create Loadbalancers on networks
                authorized by policy (e.g. networks that belong to them or networks that
                are shared).  Changing this creates a new loadbalancer.
                It is required to Neutron LBaaS but optional for Octavia.
        importStatements: []
    openstack_lb_member_v1:
        subCategory: Deprecated
        description: Manages a V1 load balancer member resource within OpenStack.
        name: openstack_lb_member_v1
        title: openstack_lb_member_v1
        examples:
            - name: member_1
              manifest: |-
                {
                  "address": "192.168.0.10",
                  "pool_id": "d9415786-5f1a-428b-b35f-2f1523e146d2",
                  "port": 80
                }
        argumentDocs:
            address: |-
                - (Required) The IP address of the member. Changing this creates a
                new member.
            admin_state_up: |-
                - (Optional) The administrative state of the member.
                Acceptable values are 'true' and 'false'. Changing this value updates the
                state of the existing member.
            pool_id: |-
                - (Required)  The ID of the LB pool. Changing this creates a new
                member.
            port: |-
                - (Required) An integer representing the port on which the member is
                hosted. Changing this creates a new member.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an LB member. If omitted, the
                region argument of the provider is used. Changing this creates a new
                LB member.
            tenant_id: |-
                - (Optional) The owner of the member. Required if admin wants to
                create a member for another tenant. Changing this creates a new member.
            weight: |-
                - The load balancing weight of the member. This is currently unable
                to be set through Terraform.
        importStatements: []
    openstack_lb_member_v2:
        subCategory: Load Balancing as a Service / Octavia
        description: Manages a V2 member resource within OpenStack.
        name: openstack_lb_member_v2
        title: openstack_lb_member_v2
        examples:
            - name: member_1
              manifest: |-
                {
                  "address": "192.168.199.23",
                  "pool_id": "935685fb-a896-40f9-9ff4-ae531a3a00fe",
                  "protocol_port": 8080
                }
        argumentDocs:
            address: |-
                - (Required) The IP address of the member to receive traffic from
                the load balancer. Changing this creates a new member.
            admin_state_up: |-
                - (Optional) The administrative state of the member.
                A valid value is true (UP) or false (DOWN). Defaults to true.
            backup: |-
                - (Optional) Boolean that indicates whether that member works as a backup or not. Available
                only for Octavia >= 2.1.
            id: '- The unique ID for the member.'
            monitor_address: |-
                - (Optional) An alternate IP address used for health monitoring a backend member.
                Available only for Octavia
            monitor_port: |-
                - (Optional) An alternate protocol port used for health monitoring a backend member.
                Available only for Octavia
            name: '- (Optional) Human-readable name for the member.'
            pool_id: |-
                - (Required) The id of the pool that this member will be assigned
                to. Changing this creates a new member.
            protocol_port: |-
                - (Required) The port on which to listen for client traffic.
                Changing this creates a new member.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a member. If omitted, the region
                argument of the provider is used. Changing this creates a new member.
            subnet_id: |-
                - (Optional) The subnet in which to access the member. Changing
                this creates a new member.
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the member.  Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new member.
            weight: |-
                - (Optional)  A positive integer value that indicates the relative
                portion of traffic that this member should receive from the pool. For
                example, a member with a weight of 10 receives five times as much traffic
                as a member with a weight of 2. Defaults to 1.
        importStatements: []
    openstack_lb_members_v2:
        subCategory: Load Balancing as a Service / Octavia
        description: Manages a V2 members resource within OpenStack (batch members update).
        name: openstack_lb_members_v2
        title: openstack_lb_members_v2
        examples:
            - name: members_1
              manifest: |-
                {
                  "member": [
                    {
                      "address": "192.168.199.23",
                      "protocol_port": 8080
                    },
                    {
                      "address": "192.168.199.24",
                      "protocol_port": 8080
                    }
                  ],
                  "pool_id": "935685fb-a896-40f9-9ff4-ae531a3a00fe"
                }
        argumentDocs:
            id: '- The unique ID for the members.'
            member: |-
                - (Optional) A set of dictionaries containing member parameters. The
                structure is described below.
            member.address: |-
                - (Required) The IP address of the members to receive traffic from
                the load balancer.
            member.admin_state_up: |-
                - (Optional) The administrative state of the member.
                A valid value is true (UP) or false (DOWN). Defaults to true.
            member.backup: |-
                - (Optional) A bool that indicates whether the member is
                backup. Requires octavia minor version 2.1 or later.
            member.monitor_address: |-
                - (Optional) An alternate IP address used for health
                monitoring a backend member.
            member.monitor_port: |-
                - (Optional) An alternate protocol port used for health
                monitoring a backend member.
            member.name: '- (Optional) Human-readable name for the member.'
            member.protocol_port: '- (Required) The port on which to listen for client traffic.'
            member.subnet_id: '- (Optional) The subnet in which to access the member.'
            member.weight: |-
                - (Optional)  A positive integer value that indicates the relative
                portion of traffic that this members should receive from the pool. For
                example, a member with a weight of 10 receives five times as much traffic
                as a member with a weight of 2. Defaults to 1.
            pool_id: |-
                - (Required) The id of the pool that members will be assigned to.
                Changing this creates a new members resource.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create pool members. If omitted, the
                region argument of the provider is used. Changing this creates a new
                members resource.
        importStatements: []
    openstack_lb_monitor_v1:
        subCategory: Deprecated
        description: Manages a V1 load balancer monitor resource within OpenStack.
        name: openstack_lb_monitor_v1
        title: openstack_lb_monitor_v1
        examples:
            - name: monitor_1
              manifest: |-
                {
                  "admin_state_up": "true",
                  "delay": 30,
                  "max_retries": 3,
                  "timeout": 5,
                  "type": "PING"
                }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the monitor.
                Acceptable values are "true" and "false". Changing this value updates the
                state of the existing monitor.
            delay: |-
                - (Required) The time, in seconds, between sending probes to members.
                Changing this creates a new monitor.
            expected_codes: |-
                - (Optional) Required for HTTP(S) types. Expected HTTP codes
                for a passing HTTP(S) monitor. You can either specify a single status like
                "200", or a range like "200-202". Changing this updates the expected_codes
                of the existing monitor.
            http_method: |-
                - (Optional) Required for HTTP(S) types. The HTTP method used
                for requests by the monitor. If this attribute is not specified, it defaults
                to "GET". Changing this updates the http_method of the existing monitor.
            max_retries: |-
                - (Required) Number of permissible ping failures before changing
                the member's status to INACTIVE. Must be a number between 1 and 10. Changing
                this updates the max_retries of the existing monitor.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an LB monitor. If omitted, the
                region argument of the provider is used. Changing this creates a new
                LB monitor.
            tenant_id: |-
                - (Optional) The owner of the monitor. Required if admin wants to
                create a monitor for another tenant. Changing this creates a new monitor.
            timeout: |-
                - (Required) Maximum number of seconds for a monitor to wait for a
                ping reply before it times out. The value must be less than the delay value.
                Changing this updates the timeout of the existing monitor.
            type: |-
                - (Required) The type of probe, which is PING, TCP, HTTP, or HTTPS,
                that is sent by the monitor to verify the member state. Changing this
                creates a new monitor.
            url_path: |-
                - (Optional) Required for HTTP(S) types. URI path that will be
                accessed if monitor type is HTTP or HTTPS. Changing this updates the
                url_path of the existing monitor.
        importStatements: []
    openstack_lb_monitor_v2:
        subCategory: Load Balancing as a Service / Octavia
        description: Manages a V2 monitor resource within OpenStack.
        name: openstack_lb_monitor_v2
        title: openstack_lb_monitor_v2
        examples:
            - name: monitor_1
              manifest: |-
                {
                  "delay": 20,
                  "max_retries": 5,
                  "pool_id": "${openstack_lb_pool_v2.pool_1.id}",
                  "timeout": 10,
                  "type": "PING"
                }
              references:
                pool_id: openstack_lb_pool_v2.pool_1.id
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the monitor.
                A valid value is true (UP) or false (DOWN).
            delay: '- (Required) The time, in seconds, between sending probes to members.'
            expected_codes: |-
                - (Optional) Required for HTTP(S) types. Expected HTTP codes
                for a passing HTTP(S) monitor. You can either specify a single status like
                "200", or a range like "200-202".
            http_method: |-
                - (Optional) Required for HTTP(S) types. The HTTP method used
                for requests by the monitor. If this attribute is not specified, it
                defaults to "GET".
            id: '- The unique ID for the monitor.'
            max_retries: |-
                - (Required) Number of permissible ping failures before
                changing the member's status to INACTIVE. Must be a number between 1
                and 10.
            max_retries_down: |-
                - (Optional) Number of permissible ping failures befor changing the member's
                status to ERROR. Must be a number between 1 and 10 (supported only in Octavia).
                Changing this updates the max_retries_down of the existing monitor.
            name: '- (Optional) The Name of the Monitor.'
            pool_id: '- (Required) The id of the pool that this monitor will be assigned to.'
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an . If omitted, the
                region argument of the provider is used. Changing this creates a new
                monitor.
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the monitor.  Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new monitor.
            timeout: |-
                - (Required) Maximum number of seconds for a monitor to wait for a
                ping reply before it times out. The value must be less than the delay
                value.
            type: |-
                - (Required) The type of probe, which is PING, TCP, HTTP, HTTPS,
                TLS-HELLO or UDP-CONNECT (supported only in Octavia), that is sent by the load
                balancer to verify the member state. Changing this creates a new monitor.
            url_path: |-
                - (Optional) Required for HTTP(S) types. URI path that will be
                accessed if monitor type is HTTP or HTTPS.
        importStatements: []
    openstack_lb_pool_v1:
        subCategory: Deprecated
        description: Manages a V1 load balancer pool resource within OpenStack.
        name: openstack_lb_pool_v1
        title: openstack_lb_pool_v1
        examples:
            - name: pool_1
              manifest: |-
                {
                  "lb_method": "ROUND_ROBIN",
                  "lb_provider": "haproxy",
                  "monitor_ids": [
                    "67890"
                  ],
                  "name": "tf_test_lb_pool",
                  "protocol": "HTTP",
                  "subnet_id": "12345"
                }
        argumentDocs:
            lb_method: |-
                - (Required) The algorithm used to distribute load between the
                members of the pool. The current specification supports 'ROUND_ROBIN' and
                'LEAST_CONNECTIONS' as valid values for this attribute.
            lb_provider: |-
                - (Optional) The backend load balancing provider. For example:
                haproxy, F5, etc.
            member: |-
                - (Optional) An existing node to add to the pool. Changing this
                updates the members of the pool. The member object structure is documented
                below. Please note that the member block is deprecated in favor of the
                openstack_lb_member_v1 resource.
            member.address: |-
                - (Required) The IP address of the member. Changing this creates a
                new member.
            member.admin_state_up: |-
                - (Required) The administrative state of the member.
                Acceptable values are 'true' and 'false'. Changing this value updates the
                state of the existing member.
            member.port: |-
                - (Required) An integer representing the port on which the member is
                hosted. Changing this creates a new member.
            member.tenant_id: |-
                - (Optional) The owner of the member. Required if admin wants to
                create a pool member for another tenant. Changing this creates a new member.
            monitor_id: '- See Argument Reference above.'
            monitor_ids: |-
                - (Optional) A list of IDs of monitors to associate with the
                pool.
            name: |-
                - (Required) The name of the pool. Changing this updates the name of
                the existing pool.
            protocol: |-
                - (Required)  The protocol used by the pool members, you can use
                either 'TCP, 'HTTP', or 'HTTPS'. Changing this creates a new pool.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an LB pool. If omitted, the
                region argument of the provider is used. Changing this creates a new
                LB pool.
            subnet_id: |-
                - (Required) The network on which the members of the pool will be
                located. Only members that are on this network can be added to the pool.
                Changing this creates a new pool.
            tenant_id: |-
                - (Optional) The owner of the pool. Required if admin wants to
                create a pool member for another tenant. Changing this creates a new pool.
        importStatements: []
    openstack_lb_pool_v2:
        subCategory: Load Balancing as a Service / Octavia
        description: Manages a V2 pool resource within OpenStack.
        name: openstack_lb_pool_v2
        title: openstack_lb_pool_v2
        examples:
            - name: pool_1
              manifest: |-
                {
                  "lb_method": "ROUND_ROBIN",
                  "listener_id": "d9415786-5f1a-428b-b35f-2f1523e146d2",
                  "persistence": [
                    {
                      "cookie_name": "testCookie",
                      "type": "APP_COOKIE"
                    }
                  ],
                  "protocol": "HTTP"
                }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the pool.
                A valid value is true (UP) or false (DOWN).
            cookie_name: |-
                - (Optional) The name of the cookie if persistence mode is set
                appropriately. Required if type = APP_COOKIE.
            description: '- (Optional) Human-readable description for the pool.'
            id: '- The unique ID for the pool.'
            lb_method: |-
                - (Required) The load balancing algorithm to
                distribute traffic to the pool's members. Must be one of
                ROUND_ROBIN, LEAST_CONNECTIONS, SOURCE_IP, or SOURCE_IP_PORT (supported only
                in Octavia).
            listener_id: |-
                - (Optional) The Listener on which the members of the pool
                will be associated with. Changing this creates a new pool.
                Note:  One of LoadbalancerID or ListenerID must be provided.
            loadbalancer_id: |-
                - (Optional) The load balancer on which to provision this
                pool. Changing this creates a new pool.
                Note:  One of LoadbalancerID or ListenerID must be provided.
            name: '- (Optional) Human-readable name for the pool.'
            persistence: |-
                - Omit this field to prevent session persistence.  Indicates
                whether connections in the same session will be processed by the same Pool
                member or not. Changing this creates a new pool.
            protocol: |-
                - (Required) The protocol - can either be TCP, HTTP, HTTPS, PROXY,
                UDP (supported only in Octavia), PROXYV2 (Octavia minor version >= 2.22)
                or SCTP (Octavia minor version >= 2.23). Changing this creates a new pool.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an . If omitted, the
                region argument of the provider is used. Changing this creates a new
                pool.
            tenant_id: |-
                - (Optional) Required for admins. The UUID of the tenant who owns
                the pool.  Only administrative users can specify a tenant UUID
                other than their own. Changing this creates a new pool.
            type: |-
                - (Required) The type of persistence mode. The current specification
                supports SOURCE_IP, HTTP_COOKIE, and APP_COOKIE.
        importStatements: []
    openstack_lb_quota_v2:
        subCategory: Load Balancing as a Service / Octavia
        description: Manages a V2 quota resource within OpenStack.
        name: openstack_lb_quota_v2
        title: openstack_lb_quota_v2
        examples:
            - name: quota_1
              manifest: |-
                {
                  "health_monitor": 10,
                  "l7_policy": 11,
                  "l7_rule": 12,
                  "listener": 7,
                  "loadbalancer": 6,
                  "member": 8,
                  "pool": 9,
                  "project_id": "${openstack_identity_project_v3.project_1.id}"
                }
              references:
                project_id: openstack_identity_project_v3.project_1.id
              dependencies:
                openstack_identity_project_v3.project_1: |-
                    {
                      "name": "project_1"
                    }
        argumentDocs:
            health_monitor: |-
                - (Optional) Quota value for health_monitors. Changing
                this updates the existing quota. Omitting it sets it to 0.
            l7_policy: |-
                - (Optional) Quota value for l7_policies. Changing this
                updates the existing quota. Omitting it sets it to 0. Available in
                Octavia minor version 2.19.
            l7_rule: |-
                - (Optional) Quota value for l7_rules. Changing this
                updates the existing quota. Omitting it sets it to 0. Available in
                Octavia minor version 2.19.
            listener: |-
                - (Optional) Quota value for listeners. Changing this updates
                the existing quota. Omitting it sets it to 0.
            loadbalancer: |-
                - (Optional) Quota value for loadbalancers. Changing this
                updates the existing quota. Omitting it sets it to 0.
            member: |-
                - (Optional) Quota value for members. Changing this updates
                the existing quota. Omitting it sets it to 0.
            pool: |-
                - (Optional) Quota value for pools. Changing this updates the
                the existing quota. Omitting it sets it to 0.
            project_id: |-
                - (Required) ID of the project to manage quotas. Changing this
                creates a new quota.
            region: |-
                - (Optional) Region in which to manage quotas. Changing this
                creates a new quota. If ommited, the region of the credentials is used.
        importStatements: []
    openstack_lb_vip_v1:
        subCategory: Deprecated
        description: Manages a V1 load balancer vip resource within OpenStack.
        name: openstack_lb_vip_v1
        title: openstack_lb_vip_v1
        examples:
            - name: vip_1
              manifest: |-
                {
                  "name": "tf_test_lb_vip",
                  "pool_id": "67890",
                  "port": 80,
                  "protocol": "HTTP",
                  "subnet_id": "12345"
                }
        argumentDocs:
            address: |-
                - (Optional)  The IP address of the vip. Changing this creates a new
                vip.
            admin_state_up: |-
                - (Optional) The administrative state of the vip.
                Acceptable values are "true" and "false". Changing this value updates the
                state of the existing vip.
            conn_limit: |-
                - (Optional) The maximum number of connections allowed for the
                vip. Default is -1, meaning no limit. Changing this updates the conn_limit
                of the existing vip.
            description: |-
                - (Optional) Human-readable description for the vip. Changing
                this updates the description of the existing vip.
            floating_ip: |-
                - (Optional) A Networking Floating IP that will be associated
                with the vip. The Floating IP must be provisioned already.
            name: |-
                - (Required) The name of the vip. Changing this updates the name of
                the existing vip.
            persistence: |-
                - (Optional) Omit this field to prevent session persistence.
                The persistence object structure is documented below. Changing this updates
                the persistence of the existing vip.
            persistence.cookie_name: |-
                - (Optional) The name of the cookie if persistence mode is set
                appropriately.
            persistence.type: |-
                - (Required) The type of persistence mode. Valid values are "SOURCE_IP",
                "HTTP_COOKIE", or "APP_COOKIE".
            pool_id: |-
                - (Required) The ID of the pool with which the vip is associated.
                Changing this updates the pool_id of the existing vip.
            port: |-
                - (Required) The port on which to listen for client traffic. Changing
                this creates a new vip.
            port_id: '- Port UUID for this VIP at associated floating IP (if any).'
            protocol: |-
                - (Required)  The protocol - can be either 'TCP, 'HTTP', or
                HTTPS'. Changing this creates a new vip.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a VIP. If omitted, the
                region argument of the provider is used. Changing this creates a new
                VIP.
            subnet_id: |-
                - (Required) The network on which to allocate the vip's address. A
                tenant can only create vips on networks authorized by policy (e.g. networks
                that belong to them or networks that are shared). Changing this creates a
                new vip.
            tenant_id: |-
                - (Optional) The owner of the vip. Required if admin wants to
                create a vip member for another tenant. Changing this creates a new vip.
        importStatements: []
    openstack_networking_addressscope_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 Neutron addressscope resource within OpenStack.
        name: openstack_networking_addressscope_v2
        title: openstack_networking_addressscope_v2
        examples:
            - name: addressscope_1
              manifest: |-
                {
                  "ip_version": 6,
                  "name": "addressscope_1"
                }
            - name: addressscope_1
              manifest: |-
                {
                  "ip_version": 6,
                  "name": "addressscope_1"
                }
              dependencies:
                openstack_networking_subnetpool_v2.subnetpool_1: |-
                    {
                      "address_scope_id": "${openstack_networking_addressscope_v2.addressscope_1.id}",
                      "name": "subnetpool_1",
                      "prefixes": [
                        "fdf7:b13d:dead:beef::/64",
                        "fd65:86cc:a334:39b7::/64"
                      ]
                    }
        argumentDocs:
            ip_version: |-
                - (Optional) IP version, either 4 (default) or 6. Changing this
                creates a new address-scope.
            name: |-
                - (Required) The name of the address-scope. Changing this updates the
                name of the existing address-scope.
            project_id: |-
                - (Optional) The owner of the address-scope. Required if admin
                wants to create a address-scope for another project. Changing this creates a
                new address-scope.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a Neutron address-scope. If omitted,
                the region argument of the provider is used. Changing this creates a new
                address-scope.
            shared: |-
                - (Optional) Indicates whether this address-scope is shared across
                all projects. Changing this updates the shared status of the existing
                address-scope.
        importStatements: []
    openstack_networking_floatingip_associate_v2:
        subCategory: Networking / Neutron
        description: Associates a Floating IP to a Port
        name: openstack_networking_floatingip_associate_v2
        title: openstack_networking_floatingip_associate_v2
        examples:
            - name: fip_1
              manifest: |-
                {
                  "floating_ip": "1.2.3.4",
                  "port_id": "${openstack_networking_port_v2.port_1.id}"
                }
              references:
                port_id: openstack_networking_port_v2.port_1.id
              dependencies:
                openstack_networking_port_v2.port_1: |-
                    {
                      "network_id": "a5bbd213-e1d3-49b6-aed1-9df60ea94b9a"
                    }
        argumentDocs:
            floating_ip: '- (Required) IP Address of an existing floating IP.'
            port_id: |-
                - (Required) ID of an existing port with at least one IP address to
                associate with this floating IP.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a floating IP that can be used with
                another networking resource, such as a load balancer. If omitted, the
                region argument of the provider is used. Changing this creates a new
                floating IP (which may or may not have a different address).
        importStatements: []
    openstack_networking_floatingip_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 floating IP resource within OpenStack Neutron (networking).
        name: openstack_networking_floatingip_v2
        title: openstack_networking_floatingip_v2
        examples:
            - name: floatip_1
              manifest: |-
                {
                  "pool": "public"
                }
            - name: floatip_1
              manifest: |-
                {
                  "pool": "${data.openstack_networking_network_v2.ext_network.name}",
                  "subnet_ids": "${data.openstack_networking_subnet_ids_v2.ext_subnets.ids}"
                }
              references:
                pool: data.openstack_networking_network_v2.ext_network.name
                subnet_ids: data.openstack_networking_subnet_ids_v2.ext_subnets.ids
        argumentDocs:
            address: |-
                - (Optional) The actual/specific floating IP to obtain. By default,
                non-admin users are not able to specify a floating IP, so you must either be
                an admin user or have had a custom policy or role applied to your OpenStack
                user or project.
            all_tags: |-
                - The collection of tags assigned on the floating IP, which have
                been explicitly and implicitly added.
            description: '- (Optional) Human-readable description for the floating IP.'
            dns_domain: |-
                - (Optional) The floating IP DNS domain. Available, when Neutron
                DNS extension is enabled. The data in this attribute will be published in an
                external DNS service when Neutron is configured to integrate with such a
                service. Changing this creates a new floating IP.
            dns_name: |-
                - (Optional) The floating IP DNS name. Available, when Neutron DNS
                extension is enabled. The data in this attribute will be published in an
                external DNS service when Neutron is configured to integrate with such a
                service. Changing this creates a new floating IP.
            fixed_ip: |-
                - Fixed IP of the port to associate with this floating IP. Required if
                the port has multiple fixed IPs.
            pool: |-
                - (Required) The name of the pool from which to obtain the floating
                IP. Changing this creates a new floating IP.
            port_id: |-
                - (Optional) ID of an existing port with at least one IP address to
                associate with this floating IP.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a floating IP that can be used with
                another networking resource, such as a load balancer. If omitted, the
                region argument of the provider is used. Changing this creates a new
                floating IP (which may or may not have a different address).
            subnet_id: |-
                - (Optional) The subnet ID of the floating IP pool. Specify this if
                the floating IP network has multiple subnets.
            subnet_ids: |-
                - (Optional) A list of external subnet IDs to try over each to
                allocate a floating IP address. If a subnet ID in a list has exhausted
                floating IP pool, the next subnet ID will be tried. This argument is used only
                during the resource creation. Conflicts with a subnet_id argument.
            tags: '- (Optional) A set of string tags for the floating IP.'
            tenant_id: |-
                - (Optional) The target tenant ID in which to allocate the floating
                IP, if you specify this together with a port_id, make sure the target port
                belongs to the same tenant. Changing this creates a new floating IP (which
                may or may not have a different address)
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_networking_network_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 Neutron network resource within OpenStack.
        name: openstack_networking_network_v2
        title: openstack_networking_network_v2
        examples:
            - name: network_1
              manifest: |-
                {
                  "admin_state_up": "true",
                  "name": "network_1"
                }
              dependencies:
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "network": [
                        {
                          "port": "${openstack_networking_port_v2.port_1.id}"
                        }
                      ],
                      "security_groups": [
                        "${openstack_compute_secgroup_v2.secgroup_1.name}"
                      ]
                    }
                openstack_compute_secgroup_v2.secgroup_1: |-
                    {
                      "description": "a security group",
                      "name": "secgroup_1",
                      "rule": [
                        {
                          "cidr": "0.0.0.0/0",
                          "from_port": 22,
                          "ip_protocol": "tcp",
                          "to_port": 22
                        }
                      ]
                    }
                openstack_networking_port_v2.port_1: |-
                    {
                      "admin_state_up": "true",
                      "fixed_ip": [
                        {
                          "ip_address": "192.168.199.10",
                          "subnet_id": "${openstack_networking_subnet_v2.subnet_1.id}"
                        }
                      ],
                      "name": "port_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}",
                      "security_group_ids": [
                        "${openstack_compute_secgroup_v2.secgroup_1.id}"
                      ]
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the network.
                Acceptable values are "true" and "false". Changing this value updates the
                state of the existing network.
            all_tags: |-
                - The collection of tags assigned on the network, which have been
                explicitly and implicitly added.
            availability_zone_hints: |-
                -  (Optional) An availability zone is used to make
                network resources highly available. Used for resources with high availability
                so that they are scheduled on different availability zones. Changing this
                creates a new network.
            description: |-
                - (Optional) Human-readable description of the network. Changing this
                updates the name of the existing network.
            dns_domain: |-
                - (Optional) The network DNS domain. Available, when Neutron DNS
                extension is enabled. The dns_domain of a network in conjunction with the
                dns_name attribute of its ports will be published in an external DNS
                service when Neutron is configured to integrate with such a service.
            external: |-
                - (Optional) Specifies whether the network resource has the
                external routing facility. Valid values are true and false. Defaults to
                false. Changing this updates the external attribute of the existing network.
            mtu: |-
                - (Optional) The network MTU. Available for read-only, when Neutron
                net-mtu extension is enabled. Available for the modification, when
                Neutron net-mtu-writable extension is enabled.
            name: |-
                - (Optional) The name of the network. Changing this updates the name of
                the existing network.
            port_security_enabled: |-
                - (Optional) Whether to explicitly enable or disable
                port security on the network. Port Security is usually enabled by default, so
                omitting this argument will usually result in a value of "true". Setting this
                explicitly to false will disable port security. Valid values are true and
                false.
            qos_policy_id: '- (Optional) Reference to the associated QoS policy.'
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a Neutron network. If omitted, the
                region argument of the provider is used. Changing this creates a new
                network.
            segments: |-
                - (Optional) An array of one or more provider segment objects.
                Note: most Networking plug-ins (e.g. ML2 Plugin) and drivers do not support
                updating any provider related segments attributes. Check your plug-in whether
                it supports updating.
            segments.network_type: '- The type of physical network.'
            segments.physical_network: '- The physical network where this network is implemented.'
            segments.segmentation_id: '- An isolated segment on the physical network.'
            shared: |-
                - (Optional) Specifies whether the network resource can be accessed
                by any tenant or not. Changing this updates the sharing capabilities of the
                existing network.
            tags: '- (Optional) A set of string tags for the network.'
            tenant_id: |-
                - (Optional) The owner of the network. Required if admin wants to
                create a network for another tenant. Changing this creates a new network.
            transparent_vlan: |-
                - (Optional) Specifies whether the network resource has the
                VLAN transparent attribute set. Valid values are true and false. Defaults to
                false. Changing this updates the transparent_vlan attribute of the existing
                network.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_networking_port_secgroup_associate_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 port's security groups within OpenStack.
        name: openstack_networking_port_secgroup_associate_v2
        title: openstack_networking_port_secgroup_associate_v2
        examples:
            - name: port_1
              manifest: |-
                {
                  "port_id": "${data.openstack_networking_port_v2.system_port.id}",
                  "security_group_ids": [
                    "${data.openstack_networking_secgroup_v2.secgroup.id}"
                  ]
                }
              references:
                port_id: data.openstack_networking_port_v2.system_port.id
            - name: port_1
              manifest: |-
                {
                  "enforce": "true",
                  "port_id": "${data.openstack_networking_port_v2.system_port.id}",
                  "security_group_ids": [
                    "${data.openstack_networking_secgroup_v2.secgroup.id}"
                  ]
                }
              references:
                port_id: data.openstack_networking_port_v2.system_port.id
            - name: port_1
              manifest: |-
                {
                  "enforce": "true",
                  "port_id": "${data.openstack_networking_port_v2.system_port.id}",
                  "security_group_ids": []
                }
              references:
                port_id: data.openstack_networking_port_v2.system_port.id
        argumentDocs:
            all_security_group_ids: |-
                - The collection of Security Group IDs on the port
                which have been explicitly and implicitly added.
            enforce: |-
                - (Optional) Whether to replace or append the list of security
                groups, specified in the security_group_ids. Defaults to false.
            port_id: '- (Required) An UUID of the port to apply security groups to.'
            region: |-
                - (Optional) The region in which to obtain the V2 networking client.
                A networking client is needed to manage a port. If omitted, the
                region argument of the provider is used. Changing this creates a new
                resource.
            security_group_ids: |-
                - (Required) A list of security group IDs to apply to
                the port. The security groups must be specified by ID and not name (as
                opposed to how they are configured with the Compute Instance).
        importStatements: []
    openstack_networking_port_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 port resource within OpenStack.
        name: openstack_networking_port_v2
        title: openstack_networking_port_v2
        examples:
            - name: port_1
              manifest: |-
                {
                  "admin_state_up": "true",
                  "name": "port_1",
                  "network_id": "${openstack_networking_network_v2.network_1.id}"
                }
              references:
                network_id: openstack_networking_network_v2.network_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
            - name: port_1
              manifest: |-
                {
                  "admin_state_up": "true",
                  "binding": [
                    {
                      "host_id": "b080b9cf-46e0-4ce8-ad47-0fd4accc872b",
                      "profile": "{\n  \"local_link_information\": [\n    {\n      \"switch_info\": \"info1\",\n      \"port_id\": \"Ethernet3/4\",\n      \"switch_id\": \"12:34:56:78:9A:BC\"\n    },\n    {\n      \"switch_info\": \"info2\",\n      \"port_id\": \"Ethernet3/4\",\n      \"switch_id\": \"12:34:56:78:9A:BD\"\n    }\n  ],\n  \"vlan_type\": \"allowed\"\n}\n",
                      "vnic_type": "baremetal"
                    }
                  ],
                  "device_id": "cdf70fcf-c161-4f24-9c70-96b3f5a54b71",
                  "device_owner": "baremetal:none",
                  "name": "port_1",
                  "network_id": "${openstack_networking_network_v2.network_1.id}"
                }
              references:
                network_id: openstack_networking_network_v2.network_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
        argumentDocs:
            admin_state_up: |-
                - (Optional) Administrative up/down status for the port
                (must be true or false if provided). Changing this updates the
                admin_state_up of an existing port.
            all_fixed_ips: |-
                - The collection of Fixed IP addresses on the port in the
                order returned by the Network v2 API.
            all_security_group_ids: |-
                - The collection of Security Group IDs on the port
                which have been explicitly and implicitly added.
            all_tags: |-
                - The collection of tags assigned on the port, which have been
                explicitly and implicitly added.
            allowed_address_pairs: |-
                - (Optional) An IP/MAC Address pair of additional IP
                addresses that can be active on this port. The structure is described
                below.
            allowed_address_pairs.ip_address: '- (Required) The additional IP address.'
            allowed_address_pairs.mac_address: '- (Optional) The additional MAC address.'
            binding: |-
                - (Optional) The port binding allows to specify binding information
                for the port. The structure is described below.
            binding.host_id: '- (Optional) The ID of the host to allocate port on.'
            binding.profile: |-
                - (Optional) Custom data to be passed as binding:profile. Data
                must be passed as JSON.
            binding.vif_details: |-
                - (Computed) A map of JSON strings containing additional
                details for this specific binding.
            binding.vif_type: '- (Computed) The VNIC type of the port binding.'
            binding.vnic_type: |-
                - (Optional) VNIC type for the port. Can either be direct,
                direct-physical, macvtap, normal, baremetal or virtio-forwarder.
                Default value is normal.
            description: |-
                - (Optional) Human-readable description of the port. Changing
                this updates the description of an existing port.
            device_id: |-
                - (Optional) The ID of the device attached to the port. Changing this
                creates a new port.
            device_owner: |-
                - (Optional) The device owner of the port. Changing this creates
                a new port.
            dns_assignment: '- The list of maps representing port DNS assignments.'
            dns_name: |-
                - (Optional) The port DNS name. Available, when Neutron DNS extension
                is enabled.
            extra_dhcp_option: |-
                - (Optional) An extra DHCP option that needs to be configured
                on the port. The structure is described below. Can be specified multiple
                times.
            extra_dhcp_option.ip_version: '- (Optional) IP protocol version. Defaults to 4.'
            extra_dhcp_option.name: '- (Required) Name of the DHCP option.'
            extra_dhcp_option.value: '- (Required) Value of the DHCP option.'
            fixed_ip: |-
                - (Optional - Conflicts with no_fixed_ip) An array of desired IPs for
                this port. The structure is described below.
            fixed_ip.ip_address: |-
                - (Optional) IP address desired in the subnet for this port. If
                you don't specify ip_address, an available IP address from the specified
                subnet will be allocated to this port. This field will not be populated if it
                is left blank or omitted. To retrieve the assigned IP address, use the
                all_fixed_ips attribute.
            fixed_ip.subnet_id: |-
                - (Required) Subnet in which to allocate IP address for
                this port.
            mac_address: |-
                - (Optional) Specify a specific MAC address for the port. Changing
                this creates a new port.
            name: |-
                - (Optional) A unique name for the port. Changing this
                updates the name of an existing port.
            network_id: |-
                - (Required) The ID of the network to attach the port to. Changing
                this creates a new port.
            no_fixed_ip: |-
                - (Optional - Conflicts with fixed_ip) Create a port with no fixed
                IP address. This will also remove any fixed IPs previously set on a port. true
                is the only valid value for this argument.
            no_security_groups: |-
                - (Optional - Conflicts with security_group_ids) If set to
                true, then no security groups are applied to the port. If set to false and
                no security_group_ids are specified, then the port will yield to the default
                behavior of the Networking service, which is to usually apply the "default"
                security group.
            port_security_enabled: |-
                - (Optional) Whether to explicitly enable or disable
                port security on the port. Port Security is usually enabled by default, so
                omitting argument will usually result in a value of true. Setting this
                explicitly to false will disable port security. In order to disable port
                security, the port must not have any security groups. Valid values are true
                and false.
            qos_policy_id: '- (Optional) Reference to the associated QoS policy.'
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a port. If omitted, the
                region argument of the provider is used. Changing this creates a new
                port.
            security_group_ids: |-
                - (Optional - Conflicts with no_security_groups) A list
                of security group IDs to apply to the port. The security groups must be
                specified by ID and not name (as opposed to how they are configured with
                the Compute Instance).
            tags: '- (Optional) A set of string tags for the port.'
            tenant_id: |-
                - (Optional) The owner of the port. Required if admin wants
                to create a port for another tenant. Changing this creates a new port.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_networking_portforwarding_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 port forwarding resource within OpenStack.
        name: openstack_networking_portforwarding_v2
        title: openstack_networking_portforwarding_v2
        examples:
            - name: pf_1
              manifest: |-
                {
                  "external_port": 7233,
                  "floatingip_id": "7a52eb59-7d47-415d-a884-046666a6fbae",
                  "internal_port": 25,
                  "internal_port_id": "b930d7f6-ceb7-40a0-8b81-a425dd994ccf",
                  "protocol": "tcp"
                }
        argumentDocs:
            description: |-
                - (Optional) A text describing the port forwarding. Changing this
                updates the description of an existing port forwarding.
            external_port: |-
                - The TCP/UDP/other protocol port number of the port forwarding. Changing this
                updates the external_port of an existing port forwarding.
            floatingip_id: '- The ID of the Neutron floating IP address. Changing this creates a new port forwarding.'
            id: '- The ID of the floating IP port forwarding.'
            internal_ip_address: |-
                - The fixed IPv4 address of the Neutron port associated with the port forwarding.
                Changing this updates the internal_ip_address of an existing port forwarding.
            internal_port: |-
                - The TCP/UDP/other protocol port number of the Neutron port fixed IP address associated to the
                port forwarding. Changing this updates the internal_port of an existing port forwarding.
            internal_port_id: |-
                - The ID of the Neutron port associated with the port forwarding. Changing
                this updates the internal_port_id of an existing port forwarding.
            protocol: |-
                - The IP protocol used in the port forwarding. Changing this updates the protocol
                of an existing port forwarding.
            region: |-
                - (Optional) The region in which to obtain the V2 networking client.
                A networking client is needed to create a port forwarding. If omitted, the
                region argument of the provider is used. Changing this creates a new
                port forwarding.
            tenant_id: |-
                - (Optional) The owner of the port forwarding. Required if admin wants
                to create a port forwarding for another tenant. Changing this creates a new port forwarding.
        importStatements: []
    openstack_networking_qos_bandwidth_limit_rule_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 Neutron QoS bandwidth limit rule resource within OpenStack.
        name: openstack_networking_qos_bandwidth_limit_rule_v2
        title: openstack_networking_qos_bandwidth_limit_rule_v2
        examples:
            - name: bw_limit_rule_1
              manifest: |-
                {
                  "direction": "egress",
                  "max_burst_kbps": 300,
                  "max_kbps": 3000,
                  "qos_policy_id": "${openstack_networking_qos_policy_v2.qos_policy_1.id}"
                }
              references:
                qos_policy_id: openstack_networking_qos_policy_v2.qos_policy_1.id
              dependencies:
                openstack_networking_qos_policy_v2.qos_policy_1: |-
                    {
                      "description": "bw_limit",
                      "name": "qos_policy_1"
                    }
        argumentDocs:
            direction: |-
                - (Optional) The direction of traffic. Defaults to "egress". Changing this updates the direction of the
                existing QoS bandwidth limit rule.
            max_burst_kbps: |-
                - (Optional) The maximum burst size in kilobits of a QoS bandwidth limit rule. Changing this updates the
                maximum burst size in kilobits of the existing QoS bandwidth limit rule.
            max_kbps: |-
                - (Required) The maximum kilobits per second of a QoS bandwidth limit rule. Changing this updates the
                maximum kilobits per second of the existing QoS bandwidth limit rule.
            qos_policy_id: '- (Required) The QoS policy reference. Changing this creates a new QoS bandwidth limit rule.'
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a Neutron QoS bandwidth limit rule. If omitted, the
                region argument of the provider is used. Changing this creates a new QoS bandwidth limit rule.
        importStatements: []
    openstack_networking_qos_dscp_marking_rule_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 Neutron QoS DSCP marking rule resource within OpenStack.
        name: openstack_networking_qos_dscp_marking_rule_v2
        title: openstack_networking_qos_dscp_marking_rule_v2
        examples:
            - name: dscp_marking_rule_1
              manifest: |-
                {
                  "dscp_mark": 26,
                  "qos_policy_id": "${openstack_networking_qos_policy_v2.qos_policy_1.id}"
                }
              references:
                qos_policy_id: openstack_networking_qos_policy_v2.qos_policy_1.id
              dependencies:
                openstack_networking_qos_policy_v2.qos_policy_1: |-
                    {
                      "description": "dscp_mark",
                      "name": "qos_policy_1"
                    }
        argumentDocs:
            dscp_mark: |-
                - (Required) The value of DSCP mark. Changing this updates the DSCP mark value existing
                QoS DSCP marking rule.
            qos_policy_id: '- (Required) The QoS policy reference. Changing this creates a new QoS DSCP marking rule.'
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a Neutron QoS DSCP marking rule. If omitted, the
                region argument of the provider is used. Changing this creates a new QoS DSCP marking rule.
        importStatements: []
    openstack_networking_qos_minimum_bandwidth_rule_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 Neutron QoS minimum bandwidth rule resource within OpenStack.
        name: openstack_networking_qos_minimum_bandwidth_rule_v2
        title: openstack_networking_qos_minimum_bandwidth_rule_v2
        examples:
            - name: minimum_bandwidth_rule_1
              manifest: |-
                {
                  "min_kbps": 200,
                  "qos_policy_id": "${openstack_networking_qos_policy_v2.qos_policy_1.id}"
                }
              references:
                qos_policy_id: openstack_networking_qos_policy_v2.qos_policy_1.id
              dependencies:
                openstack_networking_qos_policy_v2.qos_policy_1: |-
                    {
                      "description": "min_kbps",
                      "name": "qos_policy_1"
                    }
        argumentDocs:
            direction: |-
                - (Optional) The direction of traffic. Defaults to "egress". Changing this updates the direction of the
                existing QoS minimum bandwidth rule.
            min_kbps: |-
                - (Required) The minimum kilobits per second. Changing this updates the min kbps value of the existing
                QoS minimum bandwidth rule.
            qos_policy_id: '- (Required) The QoS policy reference. Changing this creates a new QoS minimum bandwidth rule.'
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a Neutron QoS minimum bandwidth rule. If omitted, the
                region argument of the provider is used. Changing this creates a new QoS minimum bandwidth rule.
        importStatements: []
    openstack_networking_qos_policy_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 Neutron QoS policy resource within OpenStack.
        name: openstack_networking_qos_policy_v2
        title: openstack_networking_qos_policy_v2
        examples:
            - name: qos_policy_1
              manifest: |-
                {
                  "description": "bw_limit",
                  "name": "qos_policy_1"
                }
        argumentDocs:
            all_tags: |-
                - The collection of tags assigned on the QoS policy, which have been
                explicitly and implicitly added.
            created_at: '- The time at which QoS policy was created.'
            description: |-
                - (Optional) The human-readable description for the QoS policy.
                Changing this updates the description of the existing QoS policy.
            is_default: |-
                - (Optional) Indicates whether the QoS policy is default
                QoS policy or not. Changing this updates the default status of the existing
                QoS policy.
            name: |-
                - (Required) The name of the QoS policy. Changing this updates the name of
                the existing QoS policy.
            project_id: |-
                - (Optional) The owner of the QoS policy. Required if admin wants to
                create a QoS policy for another project. Changing this creates a new QoS policy.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a Neutron Qos policy. If omitted, the
                region argument of the provider is used. Changing this creates a new
                QoS policy.
            revision_number: '- The revision number of the QoS policy.'
            shared: |-
                - (Optional) Indicates whether this QoS policy is shared across
                all projects. Changing this updates the shared status of the existing
                QoS policy.
            tags: '- (Optional) A set of string tags for the QoS policy.'
            updated_at: '- The time at which QoS policy was created.'
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_networking_quota_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 networking quota resource within OpenStack.
        name: openstack_networking_quota_v2
        title: openstack_networking_quota_v2
        examples:
            - name: quota_1
              manifest: |-
                {
                  "floatingip": 10,
                  "network": 4,
                  "port": 100,
                  "project_id": "${openstack_identity_project_v3.project_1.id}",
                  "rbac_policy": 10,
                  "router": 4,
                  "security_group": 10,
                  "security_group_rule": 100,
                  "subnet": 8,
                  "subnetpool": 2
                }
              references:
                project_id: openstack_identity_project_v3.project_1.id
              dependencies:
                openstack_identity_project_v3.project_1: |-
                    {
                      "name": "${project_1}"
                    }
        argumentDocs:
            floatingip: |-
                - (Optional) Quota value for floating IPs. Changing this updates the
                existing quota.
            network: |-
                - (Optional) Quota value for networks. Changing this updates the
                existing quota.
            port: |-
                - (Optional) Quota value for ports. Changing this updates the
                existing quota.
            project_id: |-
                - (Required) ID of the project to manage quota. Changing this
                creates new quota.
            rbac_policy: |-
                - (Optional) Quota value for RBAC policies.
                Changing this updates the existing quota.
            region: |-
                - (Optional) The region in which to create the quota. If
                omitted, the region argument of the provider is used. Changing this
                creates new quota.
            router: |-
                - (Optional) Quota value for routers. Changing this updates the
                existing quota.
            security_group: |-
                - (Optional) Quota value for security groups. Changing
                this updates the existing quota.
            security_group_rule: |-
                - (Optional) Quota value for security group rules.
                Changing this updates the existing quota.
            subnet: |-
                - (Optional) Quota value for subnets. Changing
                this updates the existing quota.
            subnetpool: |-
                - (Optional) Quota value for subnetpools.
                Changing this updates the existing quota.
        importStatements: []
    openstack_networking_rbac_policy_v2:
        subCategory: Networking / Neutron
        description: Creates an RBAC policy for an OpenStack V2 resource.
        name: openstack_networking_rbac_policy_v2
        title: openstack_networking_rbac_policy_v2
        examples:
            - name: rbac_policy_1
              manifest: |-
                {
                  "action": "access_as_shared",
                  "object_id": "${openstack_networking_network_v2.network_1.id}",
                  "object_type": "network",
                  "target_tenant": "20415a973c9e45d3917f078950644697"
                }
              references:
                object_id: openstack_networking_network_v2.network_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
        argumentDocs:
            action: |-
                - (Required) Action for the RBAC policy. Can either be
                access_as_external or access_as_shared.
            object_id: |-
                - (Required) The ID of the object_type resource. An
                object_type of network returns a network ID and an object_type of
                qos_policy returns a QoS ID.
            object_type: |-
                - (Required) The type of the object that the RBAC policy
                affects. Can be one of the following: address_scope, address_group,
                network, qos_policy, security_group or subnetpool.
            region: |-
                - (Optional) The region in which to obtain the V2 networking client.
                A networking client is needed to configure a routing entry on a subnet. If omitted, the
                region argument of the provider is used. Changing this creates a new
                routing entry.
            target_tenant: |-
                - (Required) The ID of the tenant to which the RBAC policy
                will be enforced.
            tenant_id: '- The owner of the RBAC policy.'
        importStatements: []
    openstack_networking_router_interface_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 router interface resource within OpenStack.
        name: openstack_networking_router_interface_v2
        title: openstack_networking_router_interface_v2
        examples:
            - name: router_interface_1
              manifest: |-
                {
                  "router_id": "${openstack_networking_router_v2.router_1.id}",
                  "subnet_id": "${openstack_networking_subnet_v2.subnet_1.id}"
                }
              references:
                router_id: openstack_networking_router_v2.router_1.id
                subnet_id: openstack_networking_subnet_v2.subnet_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "tf_test_network"
                    }
                openstack_networking_router_v2.router_1: |-
                    {
                      "external_network_id": "f67f0d72-0ddf-11e4-9d95-e1f29f417e2f",
                      "name": "my_router"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
        argumentDocs:
            force_destroy: |-
                - A boolean indicating whether the routes from the
                corresponding router ID should be deleted so that the router interface can
                be destroyed without any errors. The default value is false.
            port_id: |-
                - ID of the port this interface connects to. Changing
                this creates a new router interface.
            region: |-
                - (Optional) The region in which to obtain the V2 networking client.
                A networking client is needed to create a router. If omitted, the
                region argument of the provider is used. Changing this creates a new
                router interface.
            router_id: |-
                - (Required) ID of the router this interface belongs to. Changing
                this creates a new router interface.
            subnet_id: |-
                - ID of the subnet this interface connects to. Changing
                this creates a new router interface.
        importStatements: []
    openstack_networking_router_route_v2:
        subCategory: Networking / Neutron
        description: Creates a routing entry on a OpenStack V2 router.
        name: openstack_networking_router_route_v2
        title: openstack_networking_router_route_v2
        examples:
            - name: router_route_1
              manifest: |-
                {
                  "depends_on": [
                    "openstack_networking_router_interface_v2.int_1"
                  ],
                  "destination_cidr": "10.0.1.0/24",
                  "next_hop": "192.168.199.254",
                  "router_id": "${openstack_networking_router_v2.router_1.id}"
                }
              references:
                router_id: openstack_networking_router_v2.router_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_router_interface_v2.int_1: |-
                    {
                      "router_id": "${openstack_networking_router_v2.router_1.id}",
                      "subnet_id": "${openstack_networking_subnet_v2.subnet_1.id}"
                    }
                openstack_networking_router_v2.router_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "router_1"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
        argumentDocs:
            destination_cidr: |-
                - (Required) CIDR block to match on the packet’s destination IP. Changing
                this creates a new routing entry.
            next_hop: |-
                - (Required) IP address of the next hop gateway.  Changing
                this creates a new routing entry.
            region: |-
                - (Optional) The region in which to obtain the V2 networking client.
                A networking client is needed to configure a routing entry on a router. If omitted, the
                region argument of the provider is used. Changing this creates a new
                routing entry.
            router_id: |-
                - (Required) ID of the router this routing entry belongs to. Changing
                this creates a new routing entry.
        importStatements: []
    openstack_networking_router_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 router resource within OpenStack.
        name: openstack_networking_router_v2
        title: openstack_networking_router_v2
        examples:
            - name: router_1
              manifest: |-
                {
                  "admin_state_up": true,
                  "external_network_id": "f67f0d72-0ddf-11e4-9d95-e1f29f417e2f",
                  "name": "my_router"
                }
        argumentDocs:
            admin_state_up: |-
                - (Optional) Administrative up/down status for the router
                (must be "true" or "false" if provided). Changing this updates the
                admin_state_up of an existing router.
            all_tags: |-
                - The collection of tags assigned on the router, which have been
                explicitly and implicitly added.
            availability_zone_hints: |-
                -  (Optional) An availability zone is used to make
                network resources highly available. Used for resources with high availability
                so that they are scheduled on different availability zones. Changing this
                creates a new router.
            description: '- (Optional) Human-readable description for the router.'
            distributed: |-
                - (Optional) Indicates whether or not to create a
                distributed router. The default policy setting in Neutron restricts
                usage of this property to administrative users only.
            enable_snat: |-
                - (Optional) Enable Source NAT for the router. Valid values are
                "true" or "false". An external_network_id has to be set in order to
                set this property. Changing this updates the enable_snat of the router.
                Setting this value requires an ext-gw-mode extension to be enabled
                in OpenStack Neutron.
            external_fixed_ip: |-
                - (Optional) An external fixed IP for the router. This
                can be repeated. The structure is described below. An external_network_id
                has to be set in order to set this property. Changing this updates the
                external fixed IPs of the router.
            external_fixed_ip.ip_address: '- (Optional) The IP address to set on the router.'
            external_fixed_ip.subnet_id: '- (Optional) Subnet in which the fixed IP belongs to.'
            external_gateway: |-
                - (Deprecated - use external_network_id instead) The
                network UUID of an external gateway for the router. A router with an
                external gateway is required if any compute instances or load balancers
                will be using floating IPs. Changing this updates the external gateway
                of an existing router.
            external_network_id: |-
                - (Optional) The network UUID of an external gateway
                for the router. A router with an external gateway is required if any
                compute instances or load balancers will be using floating IPs. Changing
                this updates the external gateway of the router.
            external_subnet_ids: |-
                - (Optional) A list of external subnet IDs to try over
                each to obtain a fixed IP for the router. If a subnet ID in a list has
                exhausted floating IP pool, the next subnet ID will be tried. This argument is
                used only during the router creation and allows to set only one external fixed
                IP. Conflicts with an external_fixed_ip argument.
            id: '- ID of the router.'
            name: |-
                - (Optional) A unique name for the router. Changing this
                updates the name of an existing router.
            region: |-
                - (Optional) The region in which to obtain the V2 networking client.
                A networking client is needed to create a router. If omitted, the
                region argument of the provider is used. Changing this creates a new
                router.
            tags: '- (Optional) A set of string tags for the router.'
            tenant_id: |-
                - (Optional) The owner of the floating IP. Required if admin wants
                to create a router for another tenant. Changing this creates a new router.
            value_specs: '- (Optional) Map of additional driver-specific options.'
            vendor_options: |-
                - (Optional) Map of additional vendor-specific options.
                Supported options are described below.
            vendor_options.set_router_gateway_after_create: |-
                - (Optional) Boolean to control whether
                the Router gateway is assigned during creation or updated after creation.
        importStatements: []
    openstack_networking_secgroup_rule_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 Neutron security group rule resource within OpenStack.
        name: openstack_networking_secgroup_rule_v2
        title: openstack_networking_secgroup_rule_v2
        examples:
            - name: secgroup_rule_1
              manifest: |-
                {
                  "direction": "ingress",
                  "ethertype": "IPv4",
                  "port_range_max": 22,
                  "port_range_min": 22,
                  "protocol": "tcp",
                  "remote_ip_prefix": "0.0.0.0/0",
                  "security_group_id": "${openstack_networking_secgroup_v2.secgroup_1.id}"
                }
              references:
                security_group_id: openstack_networking_secgroup_v2.secgroup_1.id
              dependencies:
                openstack_networking_secgroup_v2.secgroup_1: |-
                    {
                      "description": "My neutron security group",
                      "name": "secgroup_1"
                    }
        argumentDocs:
            description: '- (Optional) A description of the rule. Changing this creates a new security group rule.'
            direction: |-
                - (Required) The direction of the rule, valid values are ingress
                or egress. Changing this creates a new security group rule.
            ethertype: |-
                - (Required) The layer 3 protocol type, valid values are IPv4
                or IPv6. Changing this creates a new security group rule.
            port_range_max: |-
                - (Optional) The higher part of the allowed port range, valid
                integer value needs to be between 1 and 65535. Changing this creates a new
                security group rule.
            port_range_min: |-
                - (Optional) The lower part of the allowed port range, valid
                integer value needs to be between 1 and 65535. Changing this creates a new
                security group rule.
            protocol: '- (Optional) The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.'
            region: |-
                - (Optional) The region in which to obtain the V2 networking client.
                A networking client is needed to create a port. If omitted, the
                region argument of the provider is used. Changing this creates a new
                security group rule.
            remote_group_id: |-
                - (Optional) The remote group id, the value needs to be an
                Openstack ID of a security group in the same tenant. Changing this creates
                a new security group rule.
            remote_ip_prefix: |-
                - (Optional) The remote CIDR, the value needs to be a valid
                CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule.
            security_group_id: |-
                - (Required) The security group id the rule should belong
                to, the value needs to be an Openstack ID of a security group in the same
                tenant. Changing this creates a new security group rule.
            tenant_id: |-
                - (Optional) The owner of the security group. Required if admin
                wants to create a port for another tenant. Changing this creates a new
                security group rule.
        importStatements: []
    openstack_networking_secgroup_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 Neutron security group resource within OpenStack.
        name: openstack_networking_secgroup_v2
        title: openstack_networking_secgroup_v2
        examples:
            - name: secgroup_1
              manifest: |-
                {
                  "description": "My neutron security group",
                  "name": "secgroup_1"
                }
        argumentDocs:
            all_tags: |-
                - The collection of tags assigned on the security group, which have
                been explicitly and implicitly added.
            delete_default_rules: |-
                - (Optional) Whether or not to delete the default
                egress security rules. This is false by default. See the below note
                for more information.
            description: '- (Optional) A unique name for the security group.'
            name: '- (Required) A unique name for the security group.'
            region: |-
                - (Optional) The region in which to obtain the V2 networking client.
                A networking client is needed to create a port. If omitted, the
                region argument of the provider is used. Changing this creates a new
                security group.
            tags: '- (Optional) A set of string tags for the security group.'
            tenant_id: |-
                - (Optional) The owner of the security group. Required if admin
                wants to create a port for another tenant. Changing this creates a new
                security group.
        importStatements: []
    openstack_networking_subnet_route_v2:
        subCategory: Networking / Neutron
        description: Creates a routing entry on a OpenStack V2 subnet.
        name: openstack_networking_subnet_route_v2
        title: openstack_networking_subnet_route_v2
        examples:
            - name: subnet_route_1
              manifest: |-
                {
                  "destination_cidr": "10.0.1.0/24",
                  "next_hop": "192.168.199.254",
                  "subnet_id": "${openstack_networking_subnet_v2.subnet_1.id}"
                }
              references:
                subnet_id: openstack_networking_subnet_v2.subnet_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_router_v2.router_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "router_1"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
        argumentDocs:
            destination_cidr: |-
                - (Required) CIDR block to match on the packet’s destination IP. Changing
                this creates a new routing entry.
            next_hop: |-
                - (Required) IP address of the next hop gateway.  Changing
                this creates a new routing entry.
            region: |-
                - (Optional) The region in which to obtain the V2 networking client.
                A networking client is needed to configure a routing entry on a subnet. If omitted, the
                region argument of the provider is used. Changing this creates a new
                routing entry.
            subnet_id: |-
                - (Required) ID of the subnet this routing entry belongs to. Changing
                this creates a new routing entry.
        importStatements: []
    openstack_networking_subnet_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 Neutron subnet resource within OpenStack.
        name: openstack_networking_subnet_v2
        title: openstack_networking_subnet_v2
        examples:
            - name: subnet_1
              manifest: |-
                {
                  "cidr": "192.168.199.0/24",
                  "network_id": "${openstack_networking_network_v2.network_1.id}"
                }
              references:
                network_id: openstack_networking_network_v2.network_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "tf_test_network"
                    }
        argumentDocs:
            all_tags: |-
                - The collection of ags assigned on the subnet, which have been
                explicitly and implicitly added.
            allocation_pool: |-
                - (Optional) A block declaring the start and end range of
                the IP addresses available for use with DHCP in this subnet. Multiple
                allocation_pool blocks can be declared, providing the subnet with more
                than one range of IP addresses to use with DHCP. However, each IP range
                must be from the same CIDR that the subnet is part of.
                The allocation_pool block is documented below.
            allocation_pool.end: '- (Required) The ending address.'
            allocation_pool.start: '- (Required) The starting address.'
            allocation_pools: |-
                - (Deprecated - use allocation_pool instead)
                A block declaring the start and end range of the IP addresses available for
                use with DHCP in this subnet.
                The allocation_pools block is documented below.
            allocation_pools.end: '- (Required) The ending address.'
            allocation_pools.start: '- (Required) The starting address.'
            cidr: |-
                - (Optional) CIDR representing IP range for this subnet, based on IP
                version. You can omit this option if you are creating a subnet from a
                subnet pool.
            description: |-
                - (Optional) Human-readable description of the subnet. Changing this
                updates the name of the existing subnet.
            dns_nameservers: |-
                - (Optional) An array of DNS name server names used by hosts
                in this subnet. Changing this updates the DNS name servers for the existing
                subnet.
            enable_dhcp: |-
                - (Optional) The administrative state of the network.
                Acceptable values are "true" and "false". Changing this value enables or
                disables the DHCP capabilities of the existing subnet. Defaults to true.
            gateway_ip: |-
                - (Optional)  Default gateway used by devices in this subnet.
                Leaving this blank and not setting no_gateway will cause a default
                gateway of .1 to be used. Changing this updates the gateway IP of the
                existing subnet.
            host_routes: |-
                - (Deprecated - use openstack_networking_subnet_route_v2
                instead) An array of routes that should be used by devices
                with IPs from this subnet (not including local subnet route). The host_route
                object structure is documented below. Changing this updates the host routes
                for the existing subnet.
            host_routes.destination_cidr: '- (Required) The destination CIDR.'
            host_routes.next_hop: '- (Required) The next hop in the route.'
            ip_version: |-
                - (Optional) IP version, either 4 (default) or 6. Changing this creates a
                new subnet.
            ipv6_address_mode: |-
                - (Optional) The IPv6 address mode. Valid values are
                dhcpv6-stateful, dhcpv6-stateless, or slaac.
            ipv6_ra_mode: |-
                - (Optional) The IPv6 Router Advertisement mode. Valid values
                are dhcpv6-stateful, dhcpv6-stateless, or slaac.
            name: |-
                - (Optional) The name of the subnet. Changing this updates the name of
                the existing subnet.
            network_id: |-
                - (Required) The UUID of the parent network. Changing this
                creates a new subnet.
            no_gateway: |-
                - (Optional) Do not set a gateway IP on this subnet. Changing
                this removes or adds a default gateway IP of the existing subnet.
            prefix_length: |-
                - (Optional) The prefix length to use when creating a subnet
                from a subnet pool. The default subnet pool prefix length that was defined
                when creating the subnet pool will be used if not provided. Changing this
                creates a new subnet.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a Neutron subnet. If omitted, the
                region argument of the provider is used. Changing this creates a new
                subnet.
            service_types: |-
                - (Optional) An array of service types used by the subnet.
                Changing this updates the service types for the existing subnet.
            subnetpool_id: '- (Optional) The ID of the subnetpool associated with the subnet.'
            tags: '- (Optional) A set of string tags for the subnet.'
            tenant_id: |-
                - (Optional) The owner of the subnet. Required if admin wants to
                create a subnet for another tenant. Changing this creates a new subnet.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_networking_subnetpool_v2:
        subCategory: Networking / Neutron
        description: Manages a V2 Neutron subnetpool resource within OpenStack.
        name: openstack_networking_subnetpool_v2
        title: openstack_networking_subnetpool_v2
        examples:
            - name: subnetpool_1
              manifest: |-
                {
                  "ip_version": 6,
                  "name": "subnetpool_1",
                  "prefixes": [
                    "fdf7:b13d:dead:beef::/64",
                    "fd65:86cc:a334:39b7::/64"
                  ]
                }
            - name: subnetpool_1
              manifest: |-
                {
                  "name": "subnetpool_1",
                  "prefixes": [
                    "10.11.12.0/24"
                  ]
                }
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "10.11.12.0/25",
                      "name": "subnet_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}",
                      "subnetpool_id": "${openstack_networking_subnetpool_v2.subnetpool_1.id}"
                    }
        argumentDocs:
            address_scope_id: |-
                - (Optional) The Neutron address scope to assign to the
                subnetpool. Changing this updates the address scope id of the existing
                subnetpool.
            all_tags: |-
                - The collection of tags assigned on the subnetpool, which have been
                explicitly and implicitly added.
            created_at: '- The time at which subnetpool was created.'
            default_prefixlen: |-
                - (Optional) The size of the prefix to allocate when the cidr
                or prefixlen attributes are omitted when you create the subnet. Defaults to the
                MinPrefixLen. Changing this updates the default prefixlen of the existing
                subnetpool.
            default_quota: |-
                - (Optional) The per-project quota on the prefix space that can be
                allocated from the subnetpool for project subnets. Changing this updates the
                default quota of the existing subnetpool.
            description: |-
                - (Optional) The human-readable description for the subnetpool.
                Changing this updates the description of the existing subnetpool.
            ip_version: '- The IP protocol version.'
            is_default: |-
                - (Optional) Indicates whether the subnetpool is default
                subnetpool or not. Changing this updates the default status of the existing
                subnetpool.
            max_prefixlen: |-
                - (Optional) The maximum prefix size that can be allocated from
                the subnetpool. For IPv4 subnetpools, default is 32. For IPv6 subnetpools,
                default is 128. Changing this updates the max prefixlen of the existing
                subnetpool.
            min_prefixlen: |-
                - (Optional) The smallest prefix that can be allocated from a
                subnetpool. For IPv4 subnetpools, default is 8. For IPv6 subnetpools, default
                is 64. Changing this updates the min prefixlen of the existing subnetpool.
            name: |-
                - (Required) The name of the subnetpool. Changing this updates the name of
                the existing subnetpool.
            prefixes: |-
                - (Required) A list of subnet prefixes to assign to the subnetpool.
                Neutron API merges adjacent prefixes and treats them as a single prefix. Each
                subnet prefix must be unique among all subnet prefixes in all subnetpools that
                are associated with the address scope. Changing this updates the prefixes list
                of the existing subnetpool.
            project_id: |-
                - (Optional) The owner of the subnetpool. Required if admin wants to
                create a subnetpool for another project. Changing this creates a new subnetpool.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a Neutron subnetpool. If omitted, the
                region argument of the provider is used. Changing this creates a new
                subnetpool.
            revision_number: '- The revision number of the subnetpool.'
            shared: |-
                - (Optional) Indicates whether this subnetpool is shared across
                all projects. Changing this updates the shared status of the existing
                subnetpool.
            tags: '- (Optional) A set of string tags for the subnetpool.'
            updated_at: '- The time at which subnetpool was created.'
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_networking_trunk_v2:
        subCategory: Networking / Neutron
        description: Manages a networking V2 trunk resource within OpenStack.
        name: openstack_networking_trunk_v2
        title: openstack_networking_trunk_v2
        examples:
            - name: trunk_1
              manifest: |-
                {
                  "admin_state_up": "true",
                  "name": "trunk_1",
                  "port_id": "${openstack_networking_port_v2.parent_port_1.id}",
                  "sub_port": [
                    {
                      "port_id": "${openstack_networking_port_v2.subport_1.id}",
                      "segmentation_id": 1,
                      "segmentation_type": "vlan"
                    }
                  ]
                }
              references:
                port_id: openstack_networking_port_v2.parent_port_1.id
                sub_port.port_id: openstack_networking_port_v2.subport_1.id
              dependencies:
                openstack_compute_instance_v2.instance_1: |-
                    {
                      "name": "instance_1",
                      "network": [
                        {
                          "port": "${openstack_networking_trunk_v2.trunk_1.port_id}"
                        }
                      ],
                      "security_groups": [
                        "default"
                      ]
                    }
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_port_v2.parent_port_1: |-
                    {
                      "admin_state_up": "true",
                      "depends_on": [
                        "openstack_networking_subnet_v2.subnet_1"
                      ],
                      "name": "parent_port_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
                openstack_networking_port_v2.subport_1: |-
                    {
                      "admin_state_up": "true",
                      "depends_on": [
                        "openstack_networking_subnet_v2.subnet_1"
                      ],
                      "name": "subport_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.1.0/24",
                      "enable_dhcp": true,
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}",
                      "no_gateway": true
                    }
        argumentDocs:
            admin_state_up: |-
                - (Optional) Administrative up/down status for the trunk
                (must be "true" or "false" if provided). Changing this updates the
                admin_state_up of an existing trunk.
            all_tags: |-
                - The collection of tags assigned on the trunk, which have been
                explicitly and implicitly added.
            description: |-
                - (Optional) Human-readable description of the trunk. Changing this
                updates the name of the existing trunk.
            name: |-
                - (Optional) A unique name for the trunk. Changing this
                updates the name of an existing trunk.
            port_id: |-
                - (Required) The ID of the port to be used as the parent port of the
                trunk. This is the port that should be used as the compute instance network
                port. Changing this creates a new trunk.
            region: |-
                - (Optional) The region in which to obtain the V2 networking client.
                A networking client is needed to create a trunk. If omitted, the
                region argument of the provider is used. Changing this creates a new
                trunk.
            sub_port: |-
                - (Optional) The set of ports that will be made subports of the trunk.
                The structure of each subport is described below.
            sub_port.port_id: '- (Required) The ID of the port to be made a subport of the trunk.'
            sub_port.segmentation_id: '- (Required) The numeric id of the subport segment.'
            sub_port.segmentation_type: '- (Required) The segmentation technology to use, e.g., "vlan".'
            tags: '- (Optional) A set of string tags for the port.'
            tenant_id: |-
                - (Optional) The owner of the Trunk. Required if admin wants
                to create a trunk on behalf of another tenant. Changing this creates a new trunk.
        importStatements: []
    openstack_objectstorage_container_v1:
        subCategory: Object Storage / Swift
        description: Manages a V1 container resource within OpenStack.
        name: openstack_objectstorage_container_v1
        title: openstack_objectstorage_container_v1
        examples:
            - name: container_1
              manifest: |-
                {
                  "content_type": "application/json",
                  "metadata": {
                    "test": "true"
                  },
                  "name": "tf-test-container-1",
                  "region": "RegionOne",
                  "versioning": true
                }
            - name: container_1
              manifest: |-
                {
                  "content_type": "application/json",
                  "metadata": {
                    "test": "true"
                  },
                  "name": "tf-test-container-1",
                  "region": "RegionOne",
                  "versioning_legacy": [
                    {
                      "location": "tf-test-container-versions",
                      "type": "versions"
                    }
                  ]
                }
            - name: container_1
              manifest: |-
                {
                  "container_read": ".r:*",
                  "name": "tf-test-container-1",
                  "region": "RegionOne"
                }
            - name: container_1
              manifest: |-
                {
                  "container_read": ".r:*,.rlistings",
                  "name": "tf-test-container-1",
                  "region": "RegionOne"
                }
            - name: container_1
              manifest: |-
                {
                  "container_read": ".r:-${var.username}",
                  "container_write": "${data.openstack_identity_auth_scope_v3.current.project_id}:${var.username}",
                  "name": "tf-test-container-1",
                  "region": "RegionOne"
                }
        argumentDocs:
            container_read: |-
                - (Optional) Sets an access control list (ACL) that grants
                read access. This header can contain a comma-delimited list of users that
                can read the container (allows the GET method for all objects in the
                container). Changing this updates the access control list read access.
            container_sync_key: |-
                - (Optional) The secret key for container synchronization.
                Changing this updates container synchronization.
            container_sync_to: |-
                - (Optional) The destination for container synchronization.
                Changing this updates container synchronization.
            container_write: |-
                - (Optional) Sets an ACL that grants write access.
                Changing this updates the access control list write access.
            content_type: |-
                - (Optional) The MIME type for the container. Changing this
                updates the MIME type.
            force_destroy: '-  (Optional, Default:false ) A boolean that indicates all objects should be deleted from the container so that the container can be destroyed without error. These objects are not recoverable.'
            metadata: |-
                - (Optional) Custom key/value pairs to associate with the container.
                Changing this updates the existing container metadata.
            name: |-
                - (Required) A unique name for the container. Changing this creates a
                new container.
            region: |-
                - (Optional) The region in which to create the container. If
                omitted, the region argument of the provider is used. Changing this
                creates a new container.
            storage_policy: |-
                - (Optional) The storage policy to be used for the container.
                Changing this creates a new container.
            versioning: |-
                - (Optional) A boolean that can enable or disable object
                versioning. The default value is false. To use this feature, your Swift
                version must be 2.24 or higher (as described in the OpenStack Swift Ussuri release notes),
                and a cloud administrator must have set the allow_object_versioning = true
                configuration option in Swift. If you cannot set this versioning type, you may
                want to consider using versioning_legacy instead.
            versioning_legacy: '- (Deprecated) Enable legacy object versioning. The structure is described below.'
            versioning_legacy.location: '- (Required) Container in which versions will be stored.'
            versioning_legacy.type: '- (Required) Versioning type which can be versions or history according to Openstack documentation.'
        importStatements: []
    openstack_objectstorage_object_v1:
        subCategory: Object Storage / Swift
        description: Manages a V1 container object resource within OpenStack.
        name: openstack_objectstorage_object_v1
        title: openstack_objectstorage_object_v1
        examples:
            - name: doc_1
              manifest: |-
                {
                  "container_name": "${openstack_objectstorage_container_v1.container_1.name}",
                  "content": "               {\n                 \"foo\" : \"bar\"\n               }\n",
                  "content_type": "application/json",
                  "metadata": [
                    {
                      "test": "true"
                    }
                  ],
                  "name": "test/default.json",
                  "region": "RegionOne"
                }
              references:
                container_name: openstack_objectstorage_container_v1.container_1.name
              dependencies:
                openstack_objectstorage_container_v1.container_1: |-
                    {
                      "content_type": "application/json",
                      "metadata": [
                        {
                          "test": "true"
                        }
                      ],
                      "name": "tf-test-container-1",
                      "region": "RegionOne"
                    }
            - name: doc_1
              manifest: |-
                {
                  "container_name": "${openstack_objectstorage_container_v1.container_1.name}",
                  "content_type": "application/json",
                  "metadata": [
                    {
                      "test": "true"
                    }
                  ],
                  "name": "test/default.json",
                  "region": "RegionOne",
                  "source": "./default.json"
                }
              references:
                container_name: openstack_objectstorage_container_v1.container_1.name
              dependencies:
                openstack_objectstorage_container_v1.container_1: |-
                    {
                      "content_type": "application/json",
                      "metadata": [
                        {
                          "test": "true"
                        }
                      ],
                      "name": "tf-test-container-1",
                      "region": "RegionOne"
                    }
        argumentDocs:
            container_name: |-
                - (Required) A unique (within an account) name for the container.
                The container name must be from 1 to 256 characters long and can start
                with any character and contain any pattern. Character set must be UTF-8.
                The container name cannot contain a slash (/) character because this
                character delimits the container and object name. For example, the path
                /v1/account/www/pages specifies the www container, not the www/pages container.
            content: |-
                - (Optional) A string representing the content of the object. Conflicts with
                source and copy_from.
            content_disposition: |-
                - (Optional) A string which specifies the override behavior for
                the browser. For example, this header might specify that the browser use a download
                program to save this file rather than show the file, which is the default.
            content_encoding: |-
                - (Optional) A string representing the value of the Content-Encoding
                metadata.
            content_length: |-
                - If the operation succeeds, this value is zero (0) or the
                length of informational or error text in the response body.
            content_type: '- (Optional) A string which sets the MIME type for the object.'
            copy_from: |-
                - (Optional) A string representing the name of an object
                used to create the new object by copying the copy_from object. The value is in form
                {container}/{object}. You must UTF-8-encode and then URL-encode the names of the
                container and object before you include them in the header. Conflicts with source and
                content.
            date: |-
                - The date and time the system responded to the request, using the preferred
                format of RFC 7231 as shown in this example Thu, 16 Jun 2016 15:10:38 GMT. The
                time is always in UTC.
            delete_after: |-
                - (Optional) An integer representing the number of seconds after which the
                system removes the object. Internally, the Object Storage system stores this value in
                the X-Delete-At metadata item.
            delete_at: |-
                - (Optional) An string representing the date when the system removes the object.
                For example, "2015-08-26" is equivalent to Mon, Wed, 26 Aug 2015 00:00:00 GMT.
            detect_content_type: |-
                - (Optional) If set to true, Object Storage guesses the content
                type based on the file extension and ignores the value sent in the Content-Type
                header, if present.
            etag: '- (Optional) Used to trigger updates. The only meaningful value is ${md5(file("path/to/file"))}.'
            last_modified: |-
                - The date and time when the object was last modified. The date and time
                stamp format is ISO 8601:
                CCYY-MM-DDThh:mm:ss±hh:mm
                For example, 2015-08-27T09:49:58-05:00.
                The ±hh:mm value, if included, is the time zone as an offset from UTC. In the previous
                example, the offset value is -05:00.
            name: '- (Required) A unique name for the object.'
            object_manifest: |-
                - (Optional) A string set to specify that this is a dynamic large
                object manifest object. The value is the container and object name prefix of the
                segment objects in the form container/prefix. You must UTF-8-encode and then
                URL-encode the names of the container and prefix before you include them in this
                header.
            region: |-
                - (Optional) The region in which to create the container. If
                omitted, the region argument of the provider is used. Changing this
                creates a new container.
            source: |-
                - (Optional) A string representing the local path of a file which will be used
                as the object's content. Conflicts with source and copy_from.
            static_large_object: '- True if object is a multipart_manifest.'
            trans_id: |-
                - A unique transaction ID for this request. Your service provider might
                need this value if you report a problem.
        importStatements: []
    openstack_objectstorage_tempurl_v1:
        subCategory: Object Storage / Swift
        description: Generate a TempURL for a Swift container and object.
        name: openstack_objectstorage_tempurl_v1
        title: openstack_objectstorage_tempurl_v1
        examples:
            - name: obj_tempurl
              manifest: |-
                {
                  "container": "${openstack_objectstorage_container_v1.container_1.name}",
                  "method": "post",
                  "object": "${openstack_objectstorage_object_v1.object_1.name}",
                  "ttl": 20
                }
              references:
                container: openstack_objectstorage_container_v1.container_1.name
                object: openstack_objectstorage_object_v1.object_1.name
              dependencies:
                openstack_objectstorage_container_v1.container_1: |-
                    {
                      "metadata": {
                        "Temp-URL-Key": "testkey"
                      },
                      "name": "test"
                    }
                openstack_objectstorage_object_v1.object_1: |-
                    {
                      "container_name": "${openstack_objectstorage_container_v1.container_1.name}",
                      "content": "Hello, world!",
                      "name": "test"
                    }
        argumentDocs:
            container: '- (Required) The container name the object belongs to.'
            id: '- Computed md5 hash based on the generated url'
            method: |-
                - (Optional) The method allowed when accessing this URL.
                Valid values are GET, and POST. Default is GET.
            object: '- (Required) The object name the tempurl is for.'
            regenerate: |-
                - (Optional) Whether to automatically regenerate the URL when
                it has expired. If set to true, this will create a new resource with a new
                ID and new URL. Defaults to false.
            region: '- (Optional) The region the tempurl is located in.'
            ttl: |-
                - (Required) The TTL, in seconds, for the URL. For how long it should
                be valid.
            url: '- The URL'
        importStatements: []
    openstack_orchestration_stack_v1:
        subCategory: Orchestration / Heat
        description: Manages a V1 stack resource within OpenStack.
        name: openstack_orchestration_stack_v1
        title: openstack_orchestration_stack_v1
        examples:
            - name: stack_1
              manifest: |-
                {
                  "disable_rollback": true,
                  "environment_opts": {
                    "Bin": "\n"
                  },
                  "name": "stack_1",
                  "parameters": {
                    "length": 4
                  },
                  "template_opts": {
                    "Bin": "heat_template_version: 2013-05-23\nparameters:\n  length:\n    type: number\nresources:\n  test_res:\n    type: OS::Heat::TestResource\n  random:\n    type: OS::Heat::RandomString\n    properties:\n      length: {get_param: length}\n"
                  },
                  "timeout": 30
                }
        argumentDocs:
            capabilities: '- List of stack capabilities for stack.'
            creation_time: |-
                - The date and time when the resource was created. The date
                and time stamp format is ISO 8601: CCYY-MM-DDThh:mm:ss±hh:mm
                For example, 2015-08-27T09:49:58-05:00. The ±hh:mm value, if included,
                is the time zone as an offset from UTC.
            description: '- The description of the stack resource.'
            disable_rollback: |-
                - (Optional) Enables or disables deletion of all stack
                resources when a stack creation fails. Default is true, meaning all
                resources are not deleted when stack creation fails.
            environment_opts: |-
                - (Optional) Environment key/value pairs to associate with
                the stack which contains details for the environment of the stack.
                Allowed keys: Bin, URL, Files. Changing this updates the existing stack
                Environment Opts.
            name: |-
                - (Required) A unique name for the stack. It must start with an
                alphabetic character. Changing this updates the stack's name.
            notification_topics: '- List of notification topics for stack.'
            outputs: '- A list of stack outputs.'
            parameters: |-
                - (Optional) User-defined key/value pairs as parameters to pass
                to the template. Changing this updates the existing stack parameters.
            region: |-
                - (Optional) The region in which to create the stack. If
                omitted, the region argument of the provider is used. Changing this
                creates a new stack.
            status: '- The status of the stack.'
            status_reason: '- The reason for the current status of the stack.'
            tags: '- (Optional) A list of tags to assosciate with the Stack'
            template_description: '- The description of the stack template.'
            template_opts: |-
                - (Required) Template key/value pairs to associate with the
                stack which contains either the template file or url.
                Allowed keys: Bin, URL, Files. Changing this updates the existing stack
                Template Opts.
            timeout: '- (Optional) The timeout for stack action in minutes.'
            updated_time: |-
                - The date and time when the resource was updated. The date
                and time stamp format is ISO 8601: CCYY-MM-DDThh:mm:ss±hh:mm
                For example, 2015-08-27T09:49:58-05:00. The ±hh:mm value, if included,
                is the time zone as an offset from UTC.
        importStatements: []
    openstack_sharedfilesystem_securityservice_v2:
        subCategory: Shared Filesystem / Manila
        description: Configure a Shared File System security service.
        name: openstack_sharedfilesystem_securityservice_v2
        title: sharedfilesystem_securityservice_v2
        examples:
            - name: securityservice_1
              manifest: |-
                {
                  "description": "created by terraform",
                  "dns_ip": "192.168.199.10",
                  "domain": "example.com",
                  "name": "security",
                  "ou": "CN=Computers,DC=example,DC=com",
                  "password": "s8cret",
                  "server": "192.168.199.10",
                  "type": "active_directory",
                  "user": "joinDomainUser"
                }
        argumentDocs:
            description: |-
                - (Optional) The human-readable description for the security service.
                Changing this updates the description of the existing security service.
            dns_ip: |-
                - (Optional) The security service DNS IP address that is used inside the
                tenant network.
            domain: '- (Optional) The security service domain.'
            id: '- The unique ID for the Security Service.'
            name: |-
                - (Optional) The name of the security service. Changing this updates the name
                of the existing security service.
            ou: |-
                - (Optional) The security service ou. An organizational unit can be added to
                specify where the share ends up. New in Manila microversion 2.44.
            password: '- (Optional) The user password, if you specify a user.'
            project_id: '- The owner of the Security Service.'
            region: |-
                - (Optional) The region in which to obtain the V2 Shared File System client.
                A Shared File System client is needed to create a security service. If omitted, the
                region argument of the provider is used. Changing this creates a new
                security service.
            server: '- (Optional) The security service host name or IP address.'
            type: |-
                - (Required) The security service type - can either be active_directory,
                kerberos or ldap.  Changing this updates the existing security service.
            user: |-
                - (Optional) The security service user or group name that is used by the
                tenant.
        importStatements: []
    openstack_sharedfilesystem_share_access_v2:
        subCategory: Shared Filesystem / Manila
        description: Configure a Shared File System share access list.
        name: openstack_sharedfilesystem_share_access_v2
        title: sharedfilesystem_share_access_v2
        examples:
            - name: share_access_1
              manifest: |-
                {
                  "access_level": "rw",
                  "access_to": "192.168.199.10",
                  "access_type": "ip",
                  "share_id": "${openstack_sharedfilesystem_share_v2.share_1.id}"
                }
              references:
                share_id: openstack_sharedfilesystem_share_v2.share_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
                openstack_sharedfilesystem_share_v2.share_1: |-
                    {
                      "description": "test share description",
                      "name": "nfs_share",
                      "share_network_id": "${openstack_sharedfilesystem_sharenetwork_v2.sharenetwork_1.id}",
                      "share_proto": "NFS",
                      "size": 1
                    }
                openstack_sharedfilesystem_sharenetwork_v2.sharenetwork_1: |-
                    {
                      "description": "test share network with security services",
                      "name": "test_sharenetwork",
                      "neutron_net_id": "${openstack_networking_network_v2.network_1.id}",
                      "neutron_subnet_id": "${openstack_networking_subnet_v2.subnet_1.id}"
                    }
            - name: share_access_1
              manifest: |-
                {
                  "access_level": "ro",
                  "access_to": "windows",
                  "access_type": "user",
                  "share_id": "${openstack_sharedfilesystem_share_v2.share_1.id}"
                }
              references:
                share_id: openstack_sharedfilesystem_share_v2.share_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
                openstack_sharedfilesystem_securityservice_v2.securityservice_1: |-
                    {
                      "description": "created by terraform",
                      "dns_ip": "192.168.199.10",
                      "domain": "example.com",
                      "name": "security",
                      "ou": "CN=Computers,DC=example,DC=com",
                      "password": "s8cret",
                      "server": "192.168.199.10",
                      "type": "active_directory",
                      "user": "joinDomainUser"
                    }
                openstack_sharedfilesystem_share_v2.share_1: |-
                    {
                      "name": "cifs_share",
                      "share_network_id": "${openstack_sharedfilesystem_sharenetwork_v2.sharenetwork_1.id}",
                      "share_proto": "CIFS",
                      "size": 1
                    }
                openstack_sharedfilesystem_sharenetwork_v2.sharenetwork_1: |-
                    {
                      "description": "share the secure love",
                      "name": "test_sharenetwork_secure",
                      "neutron_net_id": "${openstack_networking_network_v2.network_1.id}",
                      "neutron_subnet_id": "${openstack_networking_subnet_v2.subnet_1.id}",
                      "security_service_ids": [
                        "${openstack_sharedfilesystem_securityservice_v2.securityservice_1.id}"
                      ]
                    }
            - name: share_access_2
              manifest: |-
                {
                  "access_level": "rw",
                  "access_to": "linux",
                  "access_type": "user",
                  "share_id": "${openstack_sharedfilesystem_share_v2.share_1.id}"
                }
              references:
                share_id: openstack_sharedfilesystem_share_v2.share_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
                openstack_sharedfilesystem_securityservice_v2.securityservice_1: |-
                    {
                      "description": "created by terraform",
                      "dns_ip": "192.168.199.10",
                      "domain": "example.com",
                      "name": "security",
                      "ou": "CN=Computers,DC=example,DC=com",
                      "password": "s8cret",
                      "server": "192.168.199.10",
                      "type": "active_directory",
                      "user": "joinDomainUser"
                    }
                openstack_sharedfilesystem_share_v2.share_1: |-
                    {
                      "name": "cifs_share",
                      "share_network_id": "${openstack_sharedfilesystem_sharenetwork_v2.sharenetwork_1.id}",
                      "share_proto": "CIFS",
                      "size": 1
                    }
                openstack_sharedfilesystem_sharenetwork_v2.sharenetwork_1: |-
                    {
                      "description": "share the secure love",
                      "name": "test_sharenetwork_secure",
                      "neutron_net_id": "${openstack_networking_network_v2.network_1.id}",
                      "neutron_subnet_id": "${openstack_networking_subnet_v2.subnet_1.id}",
                      "security_service_ids": [
                        "${openstack_sharedfilesystem_securityservice_v2.securityservice_1.id}"
                      ]
                    }
        argumentDocs:
            access_key: '- The access credential of the entity granted access.'
            access_level: '- (Required) The access level to the share. Can either be rw or ro.'
            access_to: |-
                - (Required) The value that defines the access. Can either be an IP
                address or a username verified by configured Security Service of the Share Network.
            access_type: |-
                - (Required) The access rule type. Can either be an ip, user,
                cert, or cephx. cephx support requires an OpenStack environment that supports
                Shared Filesystem microversion 2.13 (Mitaka) or later.
            id: '- The unique ID for the Share Access.'
            region: |-
                - The region in which to obtain the V2 Shared File System client.
                A Shared File System client is needed to create a share access. Changing this
                creates a new share access.
            share_id: '- (Required) The UUID of the share to which you are granted access.'
            state: '- The share access state.'
        importStatements: []
    openstack_sharedfilesystem_share_v2:
        subCategory: Shared Filesystem / Manila
        description: Configure a Shared File System share.
        name: openstack_sharedfilesystem_share_v2
        title: sharedfilesystem_share_v2
        examples:
            - name: share_1
              manifest: |-
                {
                  "description": "test share description",
                  "name": "nfs_share",
                  "share_network_id": "${openstack_sharedfilesystem_sharenetwork_v2.sharenetwork_1.id}",
                  "share_proto": "NFS",
                  "size": 1
                }
              references:
                share_network_id: openstack_sharedfilesystem_sharenetwork_v2.sharenetwork_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
                openstack_sharedfilesystem_sharenetwork_v2.sharenetwork_1: |-
                    {
                      "description": "test share network with security services",
                      "name": "test_sharenetwork",
                      "neutron_net_id": "${openstack_networking_network_v2.network_1.id}",
                      "neutron_subnet_id": "${openstack_networking_subnet_v2.subnet_1.id}"
                    }
        argumentDocs:
            all_metadata: |-
                - The map of metadata, assigned on the share, which has been
                explicitly and implicitly added.
            availability_zone: |-
                - (Optional) The share availability zone. Changing this creates a
                new share.
            description: |-
                - (Optional) The human-readable description for the share.
                Changing this updates the description of the existing share.
            export_locations: |-
                - A list of export locations. For example, when a share server
                has more than one network interface, it can have multiple export locations.
            has_replicas: '- Indicates whether a share has replicas or not.'
            host: '- The share host name.'
            id: '- The unique ID for the Share.'
            is_public: |-
                - (Optional) The level of visibility for the share. Set to true to make
                share public. Set to false to make it private. Default value is false. Changing this
                updates the existing share.
            metadata: |-
                - (Optional) One or more metadata key and value pairs as a dictionary of
                strings.
            name: |-
                - (Optional) The name of the share. Changing this updates the name
                of the existing share.
            project_id: '- The owner of the Share.'
            region: |-
                - The region in which to obtain the V2 Shared File System client.
                A Shared File System client is needed to create a share. Changing this
                creates a new share.
            replication_type: '- The share replication type.'
            share_network_id: |-
                - (Optional) The UUID of a share network where the share server exists
                or will be created. If share_network_id is not set and you provide a snapshot_id,
                the share_network_id value from the snapshot is used. Changing this creates a new share.
            share_proto: |-
                - (Required) The share protocol - can either be NFS, CIFS,
                CEPHFS, GLUSTERFS, HDFS or MAPRFS. Changing this creates a new share.
            share_server_id: '- The UUID of the share server.'
            share_type: |-
                - (Optional) The share type name. If you omit this parameter, the default
                share type is used.
            size: |-
                - (Required) The share size, in GBs. The requested share size cannot be greater
                than the allowed GB quota. Changing this resizes the existing share.
            snapshot_id: |-
                - (Optional) The UUID of the share's base snapshot. Changing this creates
                a new share.
        importStatements: []
    openstack_sharedfilesystem_sharenetwork_v2:
        subCategory: Shared Filesystem / Manila
        description: Configure a Shared File System share network.
        name: openstack_sharedfilesystem_sharenetwork_v2
        title: sharedfilesystem_sharenetwork_v2
        examples:
            - name: sharenetwork_1
              manifest: |-
                {
                  "description": "test share network",
                  "name": "test_sharenetwork",
                  "neutron_net_id": "${openstack_networking_network_v2.network_1.id}",
                  "neutron_subnet_id": "${openstack_networking_subnet_v2.subnet_1.id}"
                }
              references:
                neutron_net_id: openstack_networking_network_v2.network_1.id
                neutron_subnet_id: openstack_networking_subnet_v2.subnet_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
            - name: sharenetwork_1
              manifest: |-
                {
                  "description": "test share network with security services",
                  "name": "test_sharenetwork",
                  "neutron_net_id": "${openstack_networking_network_v2.network_1.id}",
                  "neutron_subnet_id": "${openstack_networking_subnet_v2.subnet_1.id}",
                  "security_service_ids": [
                    "${openstack_sharedfilesystem_securityservice_v2.securityservice_1.id}"
                  ]
                }
              references:
                neutron_net_id: openstack_networking_network_v2.network_1.id
                neutron_subnet_id: openstack_networking_subnet_v2.subnet_1.id
              dependencies:
                openstack_networking_network_v2.network_1: |-
                    {
                      "admin_state_up": "true",
                      "name": "network_1"
                    }
                openstack_networking_subnet_v2.subnet_1: |-
                    {
                      "cidr": "192.168.199.0/24",
                      "ip_version": 4,
                      "name": "subnet_1",
                      "network_id": "${openstack_networking_network_v2.network_1.id}"
                    }
                openstack_sharedfilesystem_securityservice_v2.securityservice_1: |-
                    {
                      "description": "created by terraform",
                      "dns_ip": "192.168.199.10",
                      "domain": "example.com",
                      "name": "security",
                      "ou": "CN=Computers,DC=example,DC=com",
                      "password": "s8cret",
                      "server": "192.168.199.10",
                      "type": "active_directory",
                      "user": "joinDomainUser"
                    }
        argumentDocs:
            cidr: '- The share network CIDR.'
            description: |-
                - (Optional) The human-readable description for the share network.
                Changing this updates the description of the existing share network.
            id: '- The unique ID for the Share Network.'
            ip_version: '- The IP version of the share network. Can either be 4 or 6.'
            name: |-
                - (Optional) The name for the share network. Changing this updates the name
                of the existing share network.
            network_type: '- The share network type. Can either be VLAN, VXLAN, GRE, or flat.'
            neutron_net_id: |-
                - (Required) The UUID of a neutron network when setting up or updating
                a share network. Changing this updates the existing share network if it's not used by
                shares.
            neutron_subnet_id: |-
                - (Required) The UUID of the neutron subnet when setting up or
                updating a share network. Changing this updates the existing share network if it's
                not used by shares.
            project_id: '- The owner of the Share Network.'
            region: |-
                - (Optional) The region in which to obtain the V2 Shared File System client.
                A Shared File System client is needed to create a share network. If omitted, the
                region argument of the provider is used. Changing this creates a new
                share network.
            security_service_ids: |-
                - (Optional) The list of security service IDs to associate with
                the share network. The security service must be specified by ID and not name.
            segmentation_id: '- The share network segmentation ID.'
        importStatements: []
    openstack_vpnaas_endpoint_group_v2:
        subCategory: VPNaaS / Neutron
        description: Manages a V2 Neutron Endpoint Group resource within OpenStack.
        name: openstack_vpnaas_endpoint_group_v2
        title: openstack_vpnaas_endpoint_group_v2
        examples:
            - name: group_1
              manifest: |-
                {
                  "endpoints": [
                    "10.2.0.0/24",
                    "10.3.0.0/24"
                  ],
                  "name": "Group 1",
                  "type": "cidr"
                }
        argumentDocs:
            description: |-
                - (Optional) The human-readable description for the group.
                Changing this updates the description of the existing group.
            endpoints: |-
                - List of endpoints of the same type, for the endpoint group. The values will depend on the type.
                Changing this creates a new group.
            name: |-
                - (Optional) The name of the group. Changing this updates the name of
                the existing group.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an endpoint group. If omitted, the
                region argument of the provider is used. Changing this creates a new
                group.
            tenant_id: |-
                - (Optional) The owner of the group. Required if admin wants to
                create an endpoint group for another project. Changing this creates a new group.
            type: |-
                -  The type of the endpoints in the group. A valid value is subnet, cidr, network, router, or vlan.
                Changing this creates a new group.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_vpnaas_ike_policy_v2:
        subCategory: VPNaaS / Neutron
        description: Manages a V2 Neutron IKE policy resource within OpenStack.
        name: openstack_vpnaas_ike_policy_v2
        title: openstack_vpnaas_ike_policy_v2
        examples:
            - name: policy_1
              manifest: |-
                {
                  "name": "my_policy"
                }
        argumentDocs:
            auth_algorithm: |-
                - (Optional) The authentication hash algorithm. Valid values are sha1, sha256, sha384, sha512.
                Default is sha1. Changing this updates the algorithm of the existing policy.
            description: |-
                - (Optional) The human-readable description for the policy.
                Changing this updates the description of the existing policy.
            encapsulation_mode: '- See Argument Reference above.'
            encryption_algorithm: |-
                - (Optional) The encryption algorithm. Valid values are 3des, aes-128, aes-192 and so on.
                The default value is aes-128. Changing this updates the existing policy.
            ike_version: |-
                - (Optional) The IKE mode. A valid value is v1 or v2. Default is v1.
                Changing this updates the existing policy.
            lifetime: '- (Optional) The lifetime of the security association. Consists of Unit and Value.'
            name: |-
                - (Optional) The name of the policy. Changing this updates the name of
                the existing policy.
            pfs: |-
                - (Optional) The perfect forward secrecy mode. Valid values are Group2, Group5 and Group14. Default is Group5.
                Changing this updates the existing policy.
            phase1_negotiation_mode: |-
                - (Optional) The IKE mode. A valid value is main, which is the default.
                Changing this updates the existing policy.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a VPN service. If omitted, the
                region argument of the provider is used. Changing this creates a new
                service.
            tenant_id: |-
                - (Optional) The owner of the policy. Required if admin wants to
                create a service for another policy. Changing this creates a new policy.
            transform_protocol: '- See Argument Reference above.'
            unit: |-
                - (Optional) The units for the lifetime of the security association. Can be either seconds or kilobytes.
                Default is seconds.
            value: |-
                - (Optional) The value for the lifetime of the security association. Must be a positive integer.
                Default is 3600.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_vpnaas_ipsec_policy_v2:
        subCategory: VPNaaS / Neutron
        description: Manages a V2 Neutron IPSec policy resource within OpenStack.
        name: openstack_vpnaas_ipsec_policy_v2
        title: openstack_vpnaas_ipsec_policy_v2
        examples:
            - name: policy_1
              manifest: |-
                {
                  "name": "my_policy"
                }
        argumentDocs:
            auth_algorithm: |-
                - (Optional) The authentication hash algorithm. Valid values are sha1, sha256, sha384, sha512.
                Default is sha1. Changing this updates the algorithm of the existing policy.
            description: |-
                - (Optional) The human-readable description for the policy.
                Changing this updates the description of the existing policy.
            encapsulation_mode: |-
                - (Optional) The encapsulation mode. Valid values are tunnel and transport. Default is tunnel.
                Changing this updates the existing policy.
            encryption_algorithm: |-
                - (Optional) The encryption algorithm. Valid values are 3des, aes-128, aes-192 and so on.
                The default value is aes-128. Changing this updates the existing policy.
            lifetime: '- (Optional) The lifetime of the security association. Consists of Unit and Value.'
            name: |-
                - (Optional) The name of the policy. Changing this updates the name of
                the existing policy.
            pfs: |-
                - (Optional) The perfect forward secrecy mode. Valid values are group2, group5 and group14. Default
                is group5. Changing this updates the existing policy.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an IPSec policy. If omitted, the
                region argument of the provider is used. Changing this creates a new
                policy.
            tenant_id: |-
                - (Optional) The owner of the policy. Required if admin wants to
                create a policy for another project. Changing this creates a new policy.
            transform_protocol: |-
                - (Optional) The transform protocol. Valid values are esp, ah and ah-esp.
                Changing this updates the existing policy. Default is ESP.
            unit: |-
                - (Optional) The units for the lifetime of the security association. Can be either seconds or kilobytes.
                Default is seconds.
            value: |-
                - (Optional) The value for the lifetime of the security association. Must be a positive integer.
                Default is 3600.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_vpnaas_service_v2:
        subCategory: VPNaaS / Neutron
        description: Manages a V2 Neutron VPN service resource within OpenStack.
        name: openstack_vpnaas_service_v2
        title: openstack_vpnaas_service_v2
        examples:
            - name: service_1
              manifest: |-
                {
                  "admin_state_up": "true",
                  "name": "my_service",
                  "router_id": "14a75700-fc03-4602-9294-26ee44f366b3"
                }
        argumentDocs:
            admin_state_up: |-
                - (Optional) The administrative state of the resource. Can either be up(true) or down(false).
                Changing this updates the administrative state of the existing service.
            description: |-
                - (Optional) The human-readable description for the service.
                Changing this updates the description of the existing service.
            external_v4_ip: '- The read-only external (public) IPv4 address that is used for the VPN service.'
            external_v6_ip: '- The read-only external (public) IPv6 address that is used for the VPN service.'
            name: |-
                - (Optional) The name of the service. Changing this updates the name of
                the existing service.
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create a VPN service. If omitted, the
                region argument of the provider is used. Changing this creates a new
                service.
            router_id: '- (Required) The ID of the router. Changing this creates a new service.'
            status: '- Indicates whether IPsec VPN service is currently operational. Values are ACTIVE, DOWN, BUILD, ERROR, PENDING_CREATE, PENDING_UPDATE, or PENDING_DELETE.'
            subnet_id: '- (Optional) SubnetID is the ID of the subnet. Default is null.'
            tenant_id: |-
                - (Optional) The owner of the service. Required if admin wants to
                create a service for another project. Changing this creates a new service.
            value_specs: '- (Optional) Map of additional options.'
        importStatements: []
    openstack_vpnaas_site_connection_v2:
        subCategory: VPNaaS / Neutron
        description: Manages a V2 Neutron IPSec site connection resource within OpenStack.
        name: openstack_vpnaas_site_connection_v2
        title: openstack_vpnaas_site_connection_v2
        examples:
            - name: conn_1
              manifest: |-
                {
                  "dpd": [
                    {
                      "action": "restart",
                      "interval": 21,
                      "timeout": 42
                    }
                  ],
                  "ikepolicy_id": "${openstack_vpnaas_ike_policy_v2.policy_2.id}",
                  "ipsecpolicy_id": "${openstack_vpnaas_ipsec_policy_v2.policy_1.id}",
                  "local_ep_group_id": "${openstack_vpnaas_endpoint_group_v2.group_2.id}",
                  "name": "connection_1",
                  "peer_address": "192.168.10.1",
                  "peer_ep_group_id": "${openstack_vpnaas_endpoint_group_v2.group_1.id}",
                  "psk": "secret",
                  "vpnservice_id": "${openstack_vpnaas_service_v2.service_1.id}"
                }
              references:
                ikepolicy_id: openstack_vpnaas_ike_policy_v2.policy_2.id
                ipsecpolicy_id: openstack_vpnaas_ipsec_policy_v2.policy_1.id
                local_ep_group_id: openstack_vpnaas_endpoint_group_v2.group_2.id
                peer_ep_group_id: openstack_vpnaas_endpoint_group_v2.group_1.id
                vpnservice_id: openstack_vpnaas_service_v2.service_1.id
        argumentDocs:
            action: |-
                - (Optional) The dead peer detection (DPD) action.
                A valid value is clear, hold, restart, disabled, or restart-by-peer.
                Default value is hold.
            admin_state_up: |-
                - (Optional) The administrative state of the resource. Can either be up(true) or down(false).
                Changing this updates the administrative state of the existing connection.
            description: |-
                - (Optional) The human-readable description for the connection.
                Changing this updates the description of the existing connection.
            dpd: '- (Optional) A dictionary with dead peer detection (DPD) protocol controls.'
            ikepolicy_id: '- (Required) The ID of the IKE policy. Changing this creates a new connection.'
            initiator: '- (Optional) A valid value is response-only or bi-directional. Default is bi-directional.'
            interval: |-
                - (Optional) The dead peer detection (DPD) interval, in seconds.
                A valid value is a positive integer.
                Default is 30.
            ipsecpolicy_id: '- (Required) The ID of the IPsec policy. Changing this creates a new connection.'
            local_ep_group_id: |-
                - (Optional) The ID for the endpoint group that contains private subnets for the local side of the connection.
                You must specify this parameter with the peer_ep_group_id parameter unless
                in backward- compatible mode where peer_cidrs is provided with a subnet_id for the VPN service.
                Changing this updates the existing connection.
            local_id: |-
                - (Optional) An ID to be used instead of the external IP address for a virtual router used in traffic between instances on different networks in east-west traffic.
                Most often, local ID would be domain name, email address, etc.
                If this is not configured then the external IP address will be used as the ID.
            mtu: |-
                -  (Optional) The maximum transmission unit (MTU) value to address fragmentation.
                Minimum value is 68 for IPv4, and 1280 for IPv6.
            name: |-
                - (Optional) The name of the connection. Changing this updates the name of
                the existing connection.
            peer_address: '- (Required) The peer gateway public IPv4 or IPv6 address or FQDN.'
            peer_cidrs: '- (Optional) Unique list of valid peer private CIDRs in the form < net_address > / < prefix > .'
            peer_ep_group_id: |-
                - (Optional) The ID for the endpoint group that contains private CIDRs in the form < net_address > / < prefix > for the peer side of the connection.
                You must specify this parameter with the local_ep_group_id parameter unless in backward-compatible mode
                where peer_cidrs is provided with a subnet_id for the VPN service.
            peer_id: |-
                - (Required) The peer router identity for authentication. A valid value is an IPv4 address, IPv6 address, e-mail address, key ID, or FQDN.
                Typically, this value matches the peer_address value.
                Changing this updates the existing policy.
            psk: '- (Required) The pre-shared key. A valid value is any string.'
            region: |-
                - (Optional) The region in which to obtain the V2 Networking client.
                A Networking client is needed to create an IPSec site connection. If omitted, the
                region argument of the provider is used. Changing this creates a new
                site connection.
            tenant_id: |-
                - (Optional) The owner of the connection. Required if admin wants to
                create a connection for another project. Changing this creates a new connection.
            timeout: |-
                - (Optional) The dead peer detection (DPD) timeout in seconds.
                A valid value is a positive integer that is greater than the DPD interval value.
                Default is 120.
            value_specs: '- (Optional) Map of additional options.'
            vpnservice_id: '- (Required) The ID of the VPN service. Changing this creates a new connection.'
        importStatements: []
